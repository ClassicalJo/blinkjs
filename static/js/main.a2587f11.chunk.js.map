{"version":3,"sources":["assets/images/touchscreen.svg","assets/svg/Viewbox.js","scenes/Start.js","common/Enemy.js","common/SphereBarrier.js","common/Bodies.js","common/PlayerBullet.js","common/Frame.js","scenes/Death.js","assets/svg/PlayerSVG.js","assets/svg/EnemySVG.js","common/CollisionEvents.js","assets/svg/BulletsSVG.js","assets/svg/Background.js","assets/svg/Touchscreen.js","common/Scene.js","common/TargetingSystem.js","common/EnemyBullets.js","scenes/Scene1.js","scenes/Victory.js","App.js","serviceWorker.js","index.js","assets/images/keyboard.svg"],"names":["module","exports","Viewbox","props","zid","viewBox","preserveAspectRatio","id","width","height","x","y","fill","children","mask","pointerEvents","Start","svgHeight","xlinkHref","Keyboard","onClick","keyboard","Touchpad","touchscreen","Enemy","r","hp","world","this","body","Bodies","circle","isStatic","label","dead","radius","World","add","remove","SphereBarrier","maxHp","isSensor","danger","Math","ceil","classNames","Circle","options","Rectangle","w","h","rectangle","PlayerBullet","playerBullets","Body","setVelocity","checkIfIsOffScreen","setInterval","isOffScreen","position","clearInterval","i","length","splice","Frame","ground","ceiling","leftWall","rightWall","walls","Death","componentDidMount","cycle","updateCycle","loop","requestAnimationFrame","setState","prevState","Object","assign","particles","componentWillUnmount","cancelAnimationFrame","clearTimeout","explosion","state","showPlayer","pause","engine","Engine","create","runner","Runner","gravity","start","step","PI","theta","setTimeout","particle","cos","sin","push","Fragment","map","key","indexOf","className","cx","cy","textAnchor","restart","React","Component","PlayerSVG","path","leftWing","rightWing","d","EnemySVG","transform","removeBullet","pair","collisionEvents","player","Events","on","event","pairs","bodyA","bodyB","BulletsSVG","bouncer","filter","bullet","stroke","strokeWidth","bigBullet","surroundBullet","Background","stars","random","Touchscreen","mountJoystick","window","addEventListener","removeEventListener","manager","get","destroy","nipplejs","zone","document","getElementById","top","left","offset","svgWidth","mode","size","evt","data","move","angle","degree","querySelector","style","cssText","buttonA","onTouchStart","blink","buttonB","shoot","onTouchMove","PureComponent","Scene","timerInterval","timer","Number","round","playMode","handleKeyDown","handleKeyUp","intervals","run","stop","forEach","timeouts","togglePause","direction","playerMovementMap","speed","barriers","enemies","victory","bullets","bouncers","theEnd","handleTouch","e","blinkOnCooldown","finalX","finalY","blinkTimeout","blinkDistance","atan2","abs","setPosition","bulletOnCooldown","bulletCD","renderScene","String","stdDeviation","playerTouch","innerHeight","innerWidth","Target","coordinates","targetX","targetY","targetRadius","getTargetVelocity","bulletSpeed","Bullet","delay","container","fire","fade","BouncerBullet","restitution","target","AimedBullet","HomingBullet","playerPosition","redirect","redirection","newTarget","redirectOff","Scene1","firstBarrage","wave","secondWave","thirdWave","fourthWave","originX","originY","waveDirection","waveBullet","secondBarrage","surround","secondSurround","thirdSurround","fourthSurround","counter","asyncCounter","bulletTimeout","thirdBarrage","bouncerCluster","secondCluster","thirdCluster","fourthCluster","bouncerClusterBullet","fourthBarrage","cascade","secondCascade","thirdCascade","enemy","outerBarrier","firstBarrageTimeout","secondBarrageTimeout","thirdBarrageTimeout","fourthBarrageTimeout","theEndTimeout","endTimeout","end","Victory","fontSize","alignmentBaseline","App","resize","currentScene","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2587f11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/touchscreen.4ab11d22.svg\";","import React from 'react'\r\n\r\nlet Viewbox = (props) => {\r\n    return (\r\n        <svg zid=\"main-svg\" viewBox=\"-1000 -562.5 2000 1125\" preserveAspectRatio=\"xMidYMid meet\">\r\n            <mask id=\"transparent\">\r\n                <rect width=\"5000\" height=\"5000\" x=\"-2500\" y=\"-2500\" fill=\"white\"/>\r\n                <rect width=\"2000\" height=\"1125\" x=\"-1000\" y=\"-562.5\" fill=\"black\" />\r\n\r\n            </mask>\r\n            <rect\r\n                fill=\"black\"\r\n                width=\"5000\"\r\n                height=\"5000\"\r\n                x=\"-2500\"\r\n                y=\"-2500\" />\r\n            {props.children}\r\n            <rect\r\n                fill=\"black\"\r\n                width=\"5000\"\r\n                height=\"5000\"\r\n                x=\"-2500\"\r\n                y=\"-2500\"\r\n                mask=\"url(#transparent)\"\r\n                pointerEvents=\"none\" />\r\n        </svg>\r\n\r\n    )\r\n}\r\nexport default Viewbox\r\n","import React from 'react'\r\nimport Viewbox from \"../assets/svg/Viewbox\"\r\nimport Keyboard from '../assets/images/keyboard.svg'\r\nimport Touchpad from '../assets/images/touchscreen.svg'\r\n\r\nlet Start = (props) => {\r\n    return (\r\n        <Viewbox>\r\n            <image width={props.svgHeight / 2} x={props.svgHeight / -4 - props.svgHeight / 2} y={(props.svgHeight / -4)} xlinkHref={Keyboard} onClick={props.keyboard} />\r\n            <image width={props.svgHeight / 2} x={props.svgHeight / -4 + props.svgHeight / 2} y={(props.svgHeight / -4)} xlinkHref={Touchpad} onClick={props.touchscreen} />\r\n        </Viewbox>\r\n    )\r\n\r\n}\r\nexport default Start","import { Bodies, World } from 'matter-js'\r\n\r\nclass Enemy {\r\n    constructor(x, y, r, hp, world) {\r\n        let options = {\r\n            isStatic: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.hp = hp\r\n        this.body.label = \"enemy\"\r\n        this.dead = false\r\n        this.radius = r\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Enemy\r\n","import { Bodies, World } from \"matter-js\"\r\n\r\nclass SphereBarrier {\r\n    constructor(x, y, r, maxHp, world){\r\n        this.body = Bodies.circle(x, y, r, { isStatic: true, isSensor: true})\r\n        this.body.label = \"barrier\"\r\n        this.body.maxHp = maxHp\r\n        this.body.hp = maxHp\r\n        this.radius = r\r\n        this.danger = Math.ceil(this.body.maxHp / 4)\r\n        this.classNames = \"barrier\"    \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }  \r\n}\r\nexport default SphereBarrier\r\n","import { Bodies, World } from 'matter-js'\r\n\r\nexport class Circle {\r\n    constructor(x, y, r, options, world) {\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.radius = r\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport class Rectangle {\r\n    constructor(x, y, w, h, options, world) {\r\n        this.body = Bodies.rectangle(x, y, w, h, options)\r\n        this.width = w\r\n        this.height = h\r\n\r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n","import { Bodies, World, Body } from 'matter-js'\r\n\r\nclass PlayerBullet {\r\n    constructor(x, y, r, world, playerBullets) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"playerBullet\"\r\n        this.radius = r\r\n\r\n        Body.setVelocity(this.body, { x: 0, y: -15 })\r\n        World.add(world, this.body)\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1000 || x < -1000 || y > 500 || y < -500)\r\n        }\r\n\r\n        this.remove = () => {\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n                if (playerBullets[i].body.id === this.body.id) playerBullets.splice(i, 1)\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default PlayerBullet\r\n","import { Rectangle } from \"./Bodies\"\r\nclass Frame {\r\n    constructor(world) {\r\n        this.ground = new Rectangle(0, 562.5, 2000, 100, { isStatic: true }, world)\r\n        this.ground.body.label = \"wall\"\r\n\r\n        this.ceiling = new Rectangle(0, -562.5, 2000, 100, { isStatic: true }, world)\r\n        this.ceiling.body.label = \"wall\"\r\n\r\n        this.leftWall = new Rectangle(-1000, 0, 100, 1075, { isStatic: true }, world)\r\n        this.leftWall.body.label = \"wall\"\r\n\r\n        this.rightWall = new Rectangle(1000, 0, 100, 1075, { isStatic: true }, world)\r\n        this.rightWall.body.label = \"wall\"\r\n\r\n        this.walls = [this.ground, this.ceiling, this.leftWall, this.rightWall]\r\n    }\r\n}\r\n\r\nexport default Frame\r\n","import React from 'react'\r\nimport { Engine, Runner } from 'matter-js'\r\nimport { Circle } from '../common/Bodies'\r\n\r\nclass Death extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPlayer: true,\r\n            particles: []\r\n        }\r\n        this.pause = false\r\n        this.engine = Engine.create()\r\n        this.runner = Runner.create()\r\n        this.world = this.engine.world\r\n        this.world.gravity.y = 0\r\n        Runner.start(this.runner, this.engine)\r\n\r\n        this.particles = []\r\n\r\n        let r = 1\r\n        let step = 2 * Math.PI / 20\r\n\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            this.explosion = setTimeout(() => {\r\n                this.setState({ showPlayer: false })\r\n                let particle = new Circle(r * Math.cos(theta) + this.props.x, -r * Math.sin(theta) + this.props.y, 10, {}, this.world)\r\n                this.particles.push(particle)\r\n            }, 1250)\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cycle()\r\n    }\r\n\r\n    cycle = () => {\r\n        this.updateCycle();\r\n        this.loop = requestAnimationFrame(() => this.cycle())\r\n    }\r\n\r\n    updateCycle = () => {\r\n        this.setState((prevState) => {\r\n            let particles = Object.assign({}, prevState.particles)\r\n            particles = this.particles\r\n            return { particles }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        cancelAnimationFrame(this.loop)\r\n        clearTimeout(this.explosion)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showPlayer === true &&\r\n                    <rect\r\n                        x={this.props.x - this.props.width / 2}\r\n                        y={this.props.y - this.props.height / 2}\r\n                        width={this.props.width}\r\n                        height={this.props.height}\r\n                        fill=\"pink\" />}\r\n                {this.state.particles.map((key) => <circle\r\n                    key={this.state.particles.indexOf(key)}\r\n                    className=\"playerGlow disappear\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    fill=\"pink\" />\r\n                )}\r\n                {this.state.showPlayer === false &&\r\n                    <g>\r\n                        <text\r\n                            className=\"appear\"\r\n                            fill=\"white\"\r\n                            textAnchor=\"middle\">\r\n                            You tried\r\n                        </text>\r\n                        <rect\r\n                            className=\"appear\"\r\n                            width=\"25%\"\r\n                            height=\"50\"\r\n                            x=\"-12.5%\"\r\n                            y=\"75\"\r\n                            fill=\"white\"\r\n                            onClick={this.props.restart} />\r\n                        <text\r\n                            y=\"100\"\r\n                            className=\"appear\"\r\n                            textAnchor=\"middle\"\r\n                            pointerEvents=\"none\">\r\n                            Try again\r\n                        </text>\r\n                    </g>}\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default Death\r\n","import React from 'react'\r\n\r\nlet PlayerSVG = (x, y, w, h) => {\r\n    //let path = `M ${x + w / 2} ${y - h * 2} L ${x + w / 2 - w/2} ${y - h/4} H ${x + w / 2 + w/2} Z`;\r\n    let path = `M ${x + w / 2} ${y - h * 2} L ${x} ${y - h} V ${y - h / 4} H ${x + w} V${y - h} Z`;\r\n    //let leftBooster = `M ${x} ${y + h} L ${x - w / 4} ${y + h * 2} H ${x + w / 4}Z`\r\n    //let rightBooster = `M ${x + w} ${y + h} L ${x + w * 3 / 4} ${y + h * 2} H ${x + w * 5 / 4}Z`\r\n    let leftWing = `M ${x - w / 4} ${y - h / 2} V ${y + h * 2} H ${x - w * 5 / 4} Z`\r\n    let rightWing = `M ${x + w * 5 / 4} ${y - h / 2} V ${y + h * 2} H ${x + w * 9 / 4} Z`\r\n    return (\r\n        <g>\r\n            <path d={path} fill=\"white\" />\r\n            {/* <path d={leftBooster} fill=\"white\" />\r\n            <path d={rightBooster} fill=\"white\" /> */}\r\n            <path d={leftWing} fill=\"white\" />\r\n            <path d={rightWing} fill=\"white\" />\r\n            <rect\r\n                id=\"player\"\r\n                className=\"playerGlow\"\r\n                x={x}\r\n                y={y}\r\n                width={w}\r\n                height={h}\r\n            />\r\n        </g>\r\n    )\r\n}\r\nexport default PlayerSVG\r\n","import React from 'react'\r\n\r\nlet EnemySVG = (cx, cy, r) => {\r\n    let x = cx - 50\r\n    let y = cy\r\n    let path = `M${x} ${y} L${x - 75} ${y - 75} L ${x - 150} ${y + 150} L${x - 50} ${y - 10} Z`\r\n    return (\r\n        <g key=\"0\">\r\n            <path key=\"1\" d={path} fill=\"white\" className=\"enemy-wing\" />\r\n            <path key=\"2\" d={path} fill=\"white\" className=\"enemy-wing\" transform=\"scale(-1, 1)\" />\r\n            <circle\r\n                key=\"3\"\r\n                className=\"enemy\"\r\n                cx={cx}\r\n                cy={cy}\r\n                r={r}\r\n                fill=\"pink\"\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default EnemySVG\r\n","import { Events } from \"matter-js\"\r\n\r\n\r\nlet collisionEvents = (player, engine, playerBullets) => {\r\n    Events.on(engine, 'collisionStart', (event) => {\r\n        for (let i = 0; i < event.pairs.length; i++) {\r\n            let pair = event.pairs[i]\r\n\r\n            if (pair.bodyA.label === \"player\" && pair.bodyB.label !== \"wall\") {\r\n                if (pair.bodyB.label !== \"playerBullet\") player.dead = true\r\n            }\r\n            else if (pair.bodyB.label === \"player\" && pair.bodyA.label !== \"wall\") {\r\n                if (pair.bodyA.label !== \"playerBullet\") player.dead = true\r\n            }\r\n\r\n            if (pair.bodyA.label === \"playerBullet\") {\r\n                if (pair.bodyB.label === \"barrier\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n                else if (pair.bodyB.label === \"enemy\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n            }\r\n\r\n            else if (pair.bodyB.label === \"playerBullet\") {\r\n                if (pair.bodyA.label === \"barrier\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n                else if (pair.bodyA.label === \"enemy\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nlet removeBullet = (pair, playerBullets) => {\r\n    for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n        if (playerBullets[i].body.id === pair.id) {\r\n            playerBullets[i].remove()\r\n        }\r\n    }\r\n}\r\nexport default collisionEvents\r\n","import React from 'react'\r\nlet BulletsSVG = {\r\n    bouncer: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className={key.className}\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    fill=\"#FFFF26\"\r\n                    filter=\"url(#blur)\" />\r\n                <circle\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius * 3 / 4}\r\n                    fill=\"black\" />\r\n            </g>)\r\n    },\r\n    bullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"bullet\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    stroke=\"#FFFF26\"\r\n                    fill=\"lightpink\"\r\n                    strokeWidth=\"1\" />\r\n            </g>\r\n        )\r\n    },\r\n    bigBullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className={key.className}\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    stroke=\"#C24CF6\"\r\n                    fill=\"black\"\r\n                    strokeWidth=\"5\" />\r\n            </g>\r\n        )\r\n    },\r\n    surroundBullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"bullet\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    stroke=\"#FFFF26\"\r\n                    fill=\"#C24CF6\"\r\n                    strokeWidth=\"1\" />\r\n            </g>\r\n        )\r\n    },\r\n}\r\n\r\n\r\nexport default BulletsSVG\r\n","import React from 'react'\r\n\r\nlet Background = () => {\r\n    let stars = []\r\n    for(let i = 0; i < 5; i++) {\r\n        stars.push(i)\r\n    }\r\n\r\n    return (\r\n        <g>\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * 2000) - 1000} y={Math.ceil(Math.random() * 1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * -2000) - 1000} y={Math.ceil(Math.random() * -1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Background\r\n","import React from 'react'\r\nimport nipplejs from \"nipplejs\"\r\n\r\nclass Touchscreen extends React.PureComponent {\r\n    componentDidMount = () => {\r\n        this.mountJoystick()\r\n        window.addEventListener(\"resize\", this.mountJoystick)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener(\"resize\", this.mountJoystick)\r\n    }\r\n\r\n    mountJoystick = () => {\r\n        if (this.manager) {\r\n            let joystick = this.manager.get()\r\n            joystick.destroy()\r\n            this.manager.destroy()\r\n        }\r\n        this.manager = nipplejs.create({\r\n            zone: document.getElementById(\"zone\"),\r\n            position: {\r\n                top: this.props.svgHeight * 7 / 8 + (this.props.svgHeight / -6) + \"px\",\r\n                left: this.props.offset + this.props.svgWidth / 4 + (this.props.svgHeight / -6) + \"px\"\r\n            },\r\n            mode: \"static\",\r\n            size: this.props.svgHeight / 3\r\n\r\n        })\r\n        this.manager.on(\"move\", (evt, data) => {\r\n            this.props.move(data.angle.degree)\r\n        })\r\n\r\n        this.manager.on(\"end\", ()=> {\r\n            this.props.move(-1)\r\n        })\r\n\r\n        document.querySelector(\"#buttonA\").style.cssText = `\r\n            height: ${this.props.svgHeight / 5}px; \r\n            width: ${this.props.svgHeight / 5}px;\r\n            position: absolute; \r\n            top: ${this.props.svgHeight * 3 / 4 + ((this.props.svgHeight / 5) / -2)}px; \r\n            left: ${this.props.offset + this.props.svgWidth * 11 / 16 + ((this.props.svgHeight / 5) / -2)}px; \r\n            border: 3px solid rgba(255,255,255,0.3);\r\n            background-color: transparent;\r\n            border-radius: ${this.props.svgHeight / 5}px`\r\n\r\n        document.querySelector(\"#buttonB\").style.cssText = `\r\n            height: ${this.props.svgHeight / 5}px; \r\n            width: ${this.props.svgHeight / 5}px;\r\n            position: absolute; \r\n            top: ${this.props.svgHeight * 3 / 4 + ((this.props.svgHeight / 5) / -2)}px; \r\n            left: ${this.props.offset + this.props.svgWidth * 13 / 16 + ((this.props.svgHeight / 5) / -2)}px; \r\n            border: 3px solid rgba(255,255,255,0.3);\r\n            background-color: transparent;\r\n            border-radius: ${this.props.svgHeight / 5}px`\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"zone-wrapper\">\r\n                <div id=\"zone\"></div>\r\n                <div id=\"buttonA\" style={this.buttonA} onTouchStart={this.props.blink}></div>\r\n                <div id=\"buttonB\" style={this.buttonB} onTouchStart={this.props.shoot} onTouchMove={this.props.shoot}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Touchscreen\r\n","import React from 'react'\r\nimport { Body, Runner, Engine } from 'matter-js'\r\nimport { Rectangle } from '../common/Bodies'\r\nimport PlayerBullet from \"../common/PlayerBullet\"\r\nimport Frame from '../common/Frame'\r\nimport Death from '../scenes/Death'\r\nimport PlayerSVG from '../assets/svg/PlayerSVG';\r\nimport EnemySVG from '../assets/svg/EnemySVG';\r\nimport collisionEvents from '../common/CollisionEvents'\r\nimport BulletsSVG from '../assets/svg/BulletsSVG'\r\nimport Background from '../assets/svg/Background'\r\nimport Touchscreen from \"../assets/svg/Touchscreen\"\r\nimport Viewbox from '../assets/svg/Viewbox'\r\n\r\nclass Scene extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            player: null,\r\n            playerBullets: [],\r\n            walls: [],\r\n            bullets: [],\r\n            bouncers: [],\r\n            timer: 0,\r\n            barriers: [],\r\n            enemies: [],\r\n            theEnd: false\r\n        }\r\n\r\n        this.timeouts = []\r\n        this.intervals = []\r\n        this.pause = false\r\n\r\n        this.engine = Engine.create()\r\n        this.world = this.engine.world\r\n        this.runner = Runner.create()\r\n        this.world.gravity.y = 0\r\n\r\n        this.enemies = []\r\n        this.barriers = []\r\n        this.bullets = []\r\n        this.bouncers = []\r\n\r\n        this.playerBullets = []\r\n        this.playerMovementMap = []\r\n        this.playerTouch = \"end\"\r\n\r\n        this.state.walls = new Frame(this.world).walls\r\n        this.timer = 0\r\n\r\n        this.player = new Rectangle(0, 300, 20, 20, {}, this.world)\r\n        this.player.body.label = \"player\"\r\n        this.player.direction = { x: 0, y: 0 }\r\n        this.player.speed = 7\r\n        this.player.blinkDistance = 100\r\n\r\n        this.state.player = this.player\r\n        this.theEnd = false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        collisionEvents(this.player, this.engine, this.playerBullets)\r\n        this.timerInterval = setInterval(() => {\r\n            this.timer = Number(this.timer) + 0.1\r\n            this.timer = Math.round(this.timer * 100) / 100\r\n        }, 100)\r\n\r\n        if (this.props.playMode === \"keyboard\") {\r\n            window.addEventListener(\"keydown\", this.handleKeyDown, false)\r\n            window.addEventListener(\"keyup\", this.handleKeyUp, false)\r\n        }\r\n        this.intervals.push(this.timerInterval, this.cycle)\r\n        Runner.run(this.runner, this.engine)\r\n        this.cycle()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        Runner.stop(this.runner)\r\n        cancelAnimationFrame(this.loop)\r\n        this.intervals.forEach((key) => clearInterval(key))\r\n        this.timeouts.forEach((key) => clearTimeout(key))\r\n        if (this.props.playMode === \"keyboard\") {\r\n            window.removeEventListener(\"keydown\", this.handleKeyDown)\r\n            window.removeEventListener(\"keyup\", this.handleKeyUp)\r\n        }\r\n\r\n    }\r\n\r\n    cycle = () => {\r\n        this.updateCycle();\r\n        this.loop = requestAnimationFrame(() => this.cycle())\r\n    }\r\n\r\n    togglePause = () => {\r\n        if (this.pause) {\r\n            this.cycle()\r\n            Runner.run(this.runner, this.engine)\r\n            this.pause = false\r\n        }\r\n        else {\r\n            cancelAnimationFrame(this.loop)\r\n            Runner.stop(this.runner)\r\n            this.pause = true\r\n        }\r\n    }\r\n\r\n    updateCycle = () => {\r\n        if (this.player.dead === true) {\r\n            window.removeEventListener(\"keydown\", this.handleKeyDown, true)\r\n            cancelAnimationFrame(this.loop)\r\n            Runner.stop(this.runner)\r\n            this.timeouts.forEach((key) => clearTimeout(key))\r\n        }\r\n\r\n        if (this.props.playMode === \"keyboard\") {\r\n            this.player.direction = { x: 0, y: 0 }\r\n            this.playerMovementMap.forEach(key => {\r\n                if (key === \"a\") this.player.direction.x -= this.player.speed\r\n                else if (key === \"d\") this.player.direction.x += this.player.speed\r\n                if (key === \"w\") this.player.direction.y -= this.player.speed\r\n                else if (key === \"s\") this.player.direction.y += this.player.speed\r\n\r\n                if (key === 'k') this.blink(this.player.direction.x, this.player.direction.y)\r\n                if (key === 'l') this.shoot()\r\n            })\r\n\r\n        }\r\n        Body.setVelocity(this.player.body, this.player.direction)\r\n\r\n\r\n        this.setState((prevState) => {\r\n            for (let i = 0; i < this.barriers.length; i++) {\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger * 2) {\r\n                    this.barriers[i].classNames = \"barrier damaged\"\r\n                }\r\n\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger) {\r\n                    this.barriers[i].classNames = \"barrier danger\"\r\n                }\r\n\r\n                if (this.barriers[i].body.hp <= 0) {\r\n                    this.barriers[i].remove()\r\n                    this.barriers.splice(i, 1)\r\n                    i--\r\n                }\r\n            }\r\n            for (let i = 0; i < this.enemies.length; i++) {\r\n                if (this.enemies[i].body.hp <= 0) {\r\n                    this.enemies[i].remove()\r\n                    this.enemies.splice(i, 1)\r\n                    i--\r\n                    this.props.victory()\r\n                }\r\n\r\n            }\r\n\r\n            let player = Object.assign({}, prevState.player)\r\n            let playerBullets = Object.assign({}, prevState.playerBullets)\r\n            let bullets = Object.assign({}, prevState.bullets)\r\n            let bouncers = Object.assign({}, prevState.bouncers)\r\n            let barriers = Object.assign({}, prevState.barriers)\r\n            let enemies = Object.assign({}, prevState.enemies)\r\n            let timer = this.timer\r\n            let theEnd = this.theEnd\r\n\r\n            player = this.player\r\n            playerBullets = this.playerBullets\r\n            bullets = this.bullets\r\n            bouncers = this.bouncers\r\n            enemies = this.enemies\r\n            barriers = this.barriers\r\n\r\n            return { player, playerBullets, bullets, bouncers, enemies, barriers, timer, theEnd }\r\n        })\r\n    }\r\n\r\n    handleTouch = (angle) => {\r\n        if (angle === -1) this.player.direction = { x: 0, y: 0 }\r\n        else if (angle > 22.50 && angle < 67.5) this.player.direction = { x: this.player.speed, y: -this.player.speed }\r\n        else if (angle > 67.5 && angle < 112.5) this.player.direction = { x: 0, y: -this.player.speed }\r\n        else if (angle > 112.5 && angle < 157.5) this.player.direction = { x: -this.player.speed, y: -this.player.speed }\r\n        else if (angle > 157.5 && angle < 202.5) this.player.direction = { x: -this.player.speed, y: 0 }\r\n        else if (angle > 202.5 && angle < 247.5) this.player.direction = { x: -this.player.speed, y: this.player.speed }\r\n        else if (angle > 247.5 && angle < 292.5) this.player.direction = { x: 0, y: this.player.speed }\r\n        else if (angle > 292.5 && angle < 337.5) this.player.direction = { x: this.player.speed, y: this.player.speed }\r\n        else this.player.direction = { x: this.player.speed, y: 0 }\r\n    }\r\n\r\n\r\n    handleKeyDown = (e) => {\r\n        if (this.playerMovementMap.indexOf(e.key) === -1) this.playerMovementMap.push(e.key)\r\n    }\r\n\r\n    handleKeyUp = (e) => {\r\n        this.playerMovementMap.splice(this.playerMovementMap.indexOf(e.key), 1)\r\n    }\r\n\r\n    blink = () => {\r\n        if (this.player.blinkOnCooldown !== true) {\r\n            this.player.blinkOnCooldown = true\r\n            let blinkTimeout = setTimeout(() => this.player.blinkOnCooldown = false, 125)\r\n            this.timeouts.push(blinkTimeout)\r\n\r\n            let finalX, finalY;\r\n            if (this.player.direction.x === 0 && this.player.direction.y === 0) {\r\n                finalX = this.player.body.position.x\r\n                finalY = this.player.body.position.y - this.player.blinkDistance\r\n            }\r\n            else {\r\n                let theta = Math.atan2(this.player.body.position.y + this.player.direction.y - this.player.body.position.y, this.player.body.position.x + this.player.direction.x - this.player.body.position.x)\r\n                theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n                theta = theta * Math.PI / 180\r\n\r\n                finalX = this.player.body.position.x + this.player.blinkDistance * Math.cos(theta)\r\n                finalY = this.player.body.position.y + this.player.blinkDistance * Math.sin(theta)\r\n\r\n            }\r\n            if (Math.abs(finalX) > 950) finalX = this.player.direction.x / Math.abs(this.player.direction.x) * 950\r\n            if (Math.abs(finalY) > 512.5) finalY = this.player.direction.y / Math.abs(this.player.direction.y) * 512.5\r\n            Body.setPosition(this.player.body, { x: finalX, y: finalY })\r\n        }\r\n    }\r\n\r\n\r\n    shoot = () => {\r\n        if (this.player.bulletOnCooldown !== true) {\r\n            this.player.bulletOnCooldown = true\r\n            let bullet = new PlayerBullet(this.player.body.position.x, this.player.body.position.y - 50, 5, this.world, this.playerBullets)\r\n            this.playerBullets.push(bullet)\r\n            let bulletCD = setTimeout(() => this.player.bulletOnCooldown = false, 100)\r\n            this.timeouts.push(bulletCD)\r\n        }\r\n    }\r\n\r\n    renderScene = () => {\r\n        if (this.player.dead !== true) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Background />\r\n                    <text\r\n                        x=\"-950\"\r\n                        y=\"-425\"\r\n                        stroke=\"white\"\r\n                        fill=\"white\"\r\n                    >{String(this.state.timer)}\r\n                    </text>\r\n                    <filter id=\"blur\">\r\n                        <feGaussianBlur stdDeviation=\"2\" />\r\n                    </filter>\r\n                    {this.state.bullets.map((key) => {\r\n                        if (key.body.label === \"bullet\") return BulletsSVG.bullet(key)\r\n                        else if (key.body.label === 'bouncer') return BulletsSVG.bouncer(key)\r\n                        else if (key.body.label === 'bigBullet') return BulletsSVG.bigBullet(key)\r\n                        else if (key.body.label === 'surroundBullet') return BulletsSVG.bigBullet(key)\r\n                        else return null\r\n                    })\r\n                    })}\r\n                    {this.state.playerBullets.map((key) =>\r\n                        <circle\r\n                            key={this.state.playerBullets.indexOf(key)}\r\n                            cx={key.body.position.x}\r\n                            cy={key.body.position.y}\r\n                            r={key.radius}\r\n                            fill=\"white\">\r\n                        </circle>)}\r\n                    {this.state.enemies.map((key => EnemySVG(\r\n                        key.body.position.x,\r\n                        key.body.position.y,\r\n                        key.radius))\r\n                    )}\r\n                    {this.state.barriers.map((key) => <circle\r\n                        className={key.classNames}\r\n                        key={this.state.barriers.indexOf(key)}\r\n                        cx={key.body.position.x}\r\n                        cy={key.body.position.y}\r\n                        r={key.radius}\r\n                        fill=\"transparent\"\r\n                    />)}\r\n                    {PlayerSVG(\r\n                        this.state.player.body.position.x - this.state.player.width / 2,\r\n                        this.state.player.body.position.y - this.state.player.height / 2,\r\n                        this.state.player.width,\r\n                        this.state.player.height)}\r\n                    <circle\r\n                        id=\"player-radius\"\r\n                        cx={this.state.player.body.position.x}\r\n                        cy={this.state.player.body.position.y}\r\n                        r={this.state.player.blinkDistance}\r\n                        stroke=\"rgba(255,255,255,0.5\"\r\n                        fill=\"transparent\"\r\n                    />\r\n                    {this.state.theEnd === true && <rect x=\"-1000\" y=\"-562.5\" width=\"2000\" height=\"1125\" fill=\"white\" pointerEvents=\"none\" className=\"disappear\"></rect>}\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Death\r\n                    x={this.state.player.body.position.x}\r\n                    y={this.state.player.body.position.y}\r\n                    width={this.state.player.width}\r\n                    height={this.state.player.height}\r\n                    restart={this.props.restart}\r\n\r\n                />)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Viewbox>\r\n                    {this.renderScene()}\r\n                </Viewbox>\r\n                {(this.props.playMode === \"touchscreen\") && (this.player.dead !== true) &&\r\n                    <Touchscreen\r\n                        svgHeight={this.props.svgHeight}\r\n                        svgWidth={this.props.svgWidth}\r\n                        innerHeight={this.props.innerHeight}\r\n                        innerWidth={this.props.innerWidth}\r\n                        offset={this.props.offset}\r\n                        move={(position) => this.handleTouch(position)}\r\n                        blink={() => this.blink()}\r\n                        shoot={() => this.shoot()} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scene\r\n","let Target = {\r\n    coordinates: (x, y, targetX, targetY, targetRadius) => {\r\n        let theta = Math.atan2(targetY - y, targetX - x)\r\n        theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n        theta = theta * Math.PI / 180\r\n        let finalX = x + targetRadius * Math.cos(theta)\r\n        let finalY = y + targetRadius * Math.sin(theta)\r\n        return { x: finalX, y: finalY }\r\n    },\r\n\r\n    getTargetVelocity: (x, y, targetX, targetY, bulletSpeed) => {\r\n        let theta = Math.atan2(targetY - y, targetX - x)\r\n        theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n        theta = theta * Math.PI / 180\r\n        return { x: bulletSpeed * Math.cos(theta), y: bulletSpeed * Math.sin(theta) }\r\n    }\r\n}\r\nexport default Target\r\n","import { Body, Bodies, World } from \"matter-js\"\r\nimport Target from './TargetingSystem'\r\n\r\nexport class Bullet {\r\n    constructor(x, y, r, speed, delay, world, container) {\r\n        let options = {\r\n            isSensor: true,\r\n            label: \"bullet\"\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.radius = r\r\n\r\n        let fire = setTimeout(() => Body.setVelocity(this.body, { x: 0, y: speed }), delay)\r\n        let fade = setTimeout(() => this.remove(), 5000)\r\n\r\n        this.isOffScreen = (x, y) => { return (x > 1250 || x < -1250 || y > 812.5 || y < -812.5) }\r\n        let checkIfIsOffScreen = setInterval(() => this.isOffScreen(this.body.position.x, this.body.position.y) ? this.remove() : null, 16)\r\n\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        this.remove = () => {\r\n            clearInterval(checkIfIsOffScreen)\r\n            clearTimeout(fire)\r\n            clearTimeout(fade)\r\n            World.remove(world, this.body)\r\n            for (let i = container.length - 1; i >= 0; i--) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class BouncerBullet {\r\n    constructor(x, y, targetX, targetY, r, speed, delay, world, container) {\r\n        this.options = {\r\n            restitution: 1,\r\n            label: \"bouncer\",\r\n        }\r\n        this.body = Bodies.circle(x, y, r, this.options)\r\n        this.radius = r\r\n        let target = Target.getTargetVelocity(x, y, targetX, targetY, speed)\r\n\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        let fire = setTimeout(() => Body.setVelocity(this.body, target), delay)\r\n        let fade = setTimeout(() => this.remove(), 5000)\r\n\r\n        this.remove = () => {\r\n            clearTimeout(fire)\r\n            clearTimeout(fade)\r\n            World.remove(world, this.body)\r\n            for (let i = container.length - 1; i >= 0; i--) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class AimedBullet {\r\n    constructor(x, y, targetX, targetY, r, speed, delay, world, container) {\r\n        this.body = Bodies.circle(x, y, r, { isSensor: true, label: \"bullet\" })\r\n        this.radius = r\r\n\r\n        let target = Target.getTargetVelocity(x, y, targetX, targetY, speed)\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        let fire = setTimeout(() => Body.setVelocity(this.body, target), delay)\r\n        let fade = setTimeout(() => this.remove(), 4000)\r\n\r\n        this.isOffScreen = (x, y) => { return (x > 1250 || x < -1250 || y > 812.5 || y < -812.5) }\r\n        let checkIfIsOffScreen = setInterval(() => this.isOffScreen(this.body.position.x, this.body.position.y) ? this.remove() : null, 16)\r\n\r\n        this.remove = () => {\r\n            clearTimeout(fire)\r\n            clearTimeout(fade)\r\n            clearInterval(checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = container.length - 1; i >= 0; i--) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class HomingBullet {\r\n    constructor(x, y, playerPosition, r, bulletSpeed, delay, world, container) {\r\n        this.timeouts = []\r\n        this.intervals = []\r\n\r\n        this.body = Bodies.circle(x, y, r, { isSensor: true, label: \"bullet\" })\r\n        this.radius = r\r\n        this.redirect = false\r\n\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        let redirection = setInterval(() => {\r\n            if (this.redirect) {\r\n                let newTarget = Target.getTargetVelocity(this.body.position.x, this.body.position.y, playerPosition.x, playerPosition.y, bulletSpeed)\r\n                Body.setVelocity(this.body, newTarget)\r\n            }\r\n        }, 16)\r\n\r\n        let fire = setTimeout(() => this.redirect = true, delay)\r\n        let redirectOff = setTimeout(() => this.redirect = false, delay + 750)\r\n        let fade = setTimeout(() => this.remove(), 4000)\r\n\r\n        this.isOffScreen = (x, y) => { return (x > 1250 || x < -1250 || y > 812.5 || y < -812.5) }\r\n        let checkIfIsOffScreen = setInterval(() => this.isOffScreen(this.body.position.x, this.body.position.y) ? this.remove() : null, 16)\r\n\r\n        this.timeouts.push(fire, redirectOff, fade)\r\n        this.intervals.push(redirection, checkIfIsOffScreen)\r\n\r\n        this.remove = () => {\r\n            this.timeouts.forEach(key => clearTimeout(key))\r\n            this.intervals.forEach(key => clearInterval(key))\r\n            World.remove(world, this.body)\r\n            for (let i = 0; i < container.length; i++) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n","import Enemy from '../common/Enemy';\r\nimport SphereBarrier from '../common/SphereBarrier'\r\nimport Scene from '../common/Scene'\r\nimport { Rectangle } from '../common/Bodies'\r\nimport { Bullet, AimedBullet, BouncerBullet, HomingBullet } from \"../common/EnemyBullets\"\r\n\r\n\r\nclass Scene1 extends Scene {\r\n    constructor() {\r\n        super()\r\n        this.enemy = new Enemy(0, -350, 50, 10, this.world)\r\n        this.enemies.push(this.enemy)\r\n        this.outerBarrier = new SphereBarrier(0, -350, 70, 250, this.world)\r\n        this.barriers.push(this.outerBarrier)\r\n\r\n        this.firstBarrageTimeout = setTimeout(() => this.firstBarrage(), 3000)\r\n        this.secondBarrageTimeout = setTimeout(() => this.secondBarrage(), 17000)\r\n        this.thirdBarrageTimeout = setTimeout(() => this.thirdBarrage(), 32000)\r\n        this.fourthBarrageTimeout = setTimeout(() => this.fourthBarrage(), 50000)\r\n        this.theEndTimeout = setTimeout(() => this.theEnd = true, 62000)\r\n        this.endTimeout = setTimeout(() => this.end = new Rectangle(0, 0, 2000, 1125, { isStatic: true, isSensor: true }, this.world), 65150)\r\n\r\n        this.timeouts.push(\r\n            this.firstBarrageTimeout,\r\n            this.secondBarrageTimeout,\r\n            this.thirdBarrageTimeout,\r\n            this.fourthBarrageTimeout,\r\n            this.theEndTimeout,\r\n            this.endTimeout)\r\n    }\r\n\r\n    firstBarrage = () => {\r\n        this.wave(-1000, 0, 1)\r\n        let secondWave = setTimeout(() => this.wave(1000, 0, -1), 3000)\r\n        let thirdWave = setTimeout(() => this.wave(-1000, -200, 1), 6000)\r\n        let fourthWave = setTimeout(() => this.wave(1000, -200, -1), 9000)\r\n        this.timeouts.push(secondWave, thirdWave, fourthWave)\r\n    }\r\n\r\n    wave = (originX, originY, waveDirection) => {\r\n        for (let i = 0; i < 100; i++) {\r\n            let waveBullet = setTimeout(() => {\r\n                new Bullet(originX + i * 25 * waveDirection, originY + i * Math.sin(i * Math.PI / 4 * -1 + 0.5), 5, 15, 1000, this.world, this.bullets)\r\n            }, 25 * i)\r\n            this.timeouts.push(waveBullet)\r\n        }\r\n    }\r\n\r\n    secondBarrage = () => {\r\n        this.surround(450)\r\n        let secondSurround = setTimeout(() => this.surround(350), 3000)\r\n        let thirdSurround = setTimeout(() => this.surround(300), 6000)\r\n        let fourthSurround = setTimeout(() => this.surround(250), 9000)\r\n        this.timeouts.push(secondSurround, thirdSurround, fourthSurround)\r\n    }\r\n\r\n    surround = (radius) => {\r\n        let targetTime = 1000\r\n        let r = radius\r\n        let step = 2 * Math.PI / 50\r\n        let counter = 0\r\n        let { x: originX, y: originY } = this.player.body.position\r\n\r\n        for (let [theta, asyncCounter] = [0, 0]; theta < 2 * Math.PI; theta += step, asyncCounter++) {\r\n            counter++\r\n            let bulletTimeout = setTimeout(() => {\r\n                new AimedBullet(r * Math.cos(theta) + originX, -r * Math.sin(theta) + originY, originX, originY, 5, 20, targetTime - 10 * asyncCounter, this.world, this.bullets)\r\n            }, 10 * counter)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n    }\r\n\r\n\r\n    thirdBarrage = () => {\r\n        this.bouncerCluster(850, -350)\r\n        let secondCluster = setTimeout(() => this.bouncerCluster(-850, -350), 4000)\r\n        let thirdCluster = setTimeout(() => this.bouncerCluster(850, -350), 8000)\r\n        let fourthCluster = setTimeout(() => this.bouncerCluster(-850, -350), 12000)\r\n        this.timeouts.push(secondCluster, thirdCluster, fourthCluster)\r\n    }\r\n\r\n    bouncerCluster = (originX, originY) => {\r\n        for (let i = 0; i < 4; i++) {\r\n            let bouncerClusterBullet = setTimeout(() => {\r\n                let bouncer = new BouncerBullet(originX, originY, this.player.body.position.x, this.player.body.position.y, 50, 45, 100, this.world, this.bullets)\r\n                bouncer.className = \"bouncer\"\r\n            }, i * 500)\r\n            this.timeouts.push(bouncerClusterBullet)\r\n        }\r\n    }\r\n\r\n    fourthBarrage = () => {\r\n        this.cascade(0, -250, 1500)\r\n        let secondCascade = setTimeout(() => this.cascade(0, -250, 1500), 3000)\r\n        let thirdCascade = setTimeout(() => this.cascade(0, -250, 1500), 6000)\r\n        this.timeouts.push(secondCascade, thirdCascade)\r\n    }\r\n\r\n    cascade = (originX, originY, delay) => {\r\n        let bullet = new HomingBullet(originX, originY, this.player.body.position, 40, 20, delay, this.world, this.bullets)\r\n        bullet.body.label = \"bigBullet\"\r\n        bullet.className = \"bouncer\"\r\n        for (let i = 1; i <= 5; i++) {\r\n            let bulletTimeout = setTimeout(() => {\r\n                let bullet = new HomingBullet(originX + 150 * i, originY - 50 * i, this.player.body.position, 40, 20, delay - 25 * i, this.world, this.bullets)\r\n                bullet.body.label = \"bigBullet\"\r\n                bullet.className = \"bouncer\"\r\n            }, 25 * i)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            let bulletTimeout = setTimeout(() => {\r\n                let bullet = new HomingBullet(originX - 150 * i, originY - 50 * i, this.player.body.position, 40, 20, delay - 25 * i, this.world, this.bullets)\r\n                bullet.body.label = \"bigBullet\"\r\n                bullet.className = \"bouncer\"\r\n            }, 25 * i)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Scene1\r\n","import React from 'react'\r\nimport PlayerSVG from '../assets/svg/PlayerSVG'\r\nimport Viewbox from '../assets/svg/Viewbox'\r\nlet Victory = () => {\r\n    return (\r\n        <Viewbox>\r\n            <text fill=\"white\" fontSize=\"32\" alignmentBaseline=\"central\" textAnchor=\"middle\">Victory!!!</text>\r\n            {PlayerSVG(-15, -115, 30, 30)}\r\n            <rect fill=\"white\" height=\"100%\" width=\"100%\" x=\"-50%\" y=\"-50%\" className=\"disappear\" pointerEvents=\"none\" ></rect>\r\n        </Viewbox>\r\n    )\r\n}\r\n\r\nexport default Victory\r\n","import React from 'react';\r\nimport Start from './scenes/Start'\r\nimport Scene1 from \"./scenes/Scene1\"\r\nimport Victory from \"./scenes/Victory\"\r\nimport \"./assets/css/app.css\"\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let svgHeight = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth * 9 / 16 : window.innerHeight\r\n    let svgWidth = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth : window.innerHeight * 16 / 9\r\n    this.state = {\r\n      currentScene: 'start',\r\n      playMode: \"keyboard\",\r\n      svgHeight: svgHeight,\r\n      svgWidth: svgWidth,\r\n      innerWidth: window.innerWidth,\r\n      innerHeight: window.innerHeight,\r\n      offset: (window.innerWidth - svgWidth) / 2\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"resize\", this.resize)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener(\"resize\", this.resize)\r\n  }\r\n\r\n\r\n  resize = () => {\r\n    let svgHeight = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth * 9 / 16 : window.innerHeight\r\n    let svgWidth = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth : window.innerHeight * 16 / 9\r\n    this.setState({\r\n      svgHeight: svgHeight,\r\n      svgWidth: svgWidth,\r\n      innerWidth: window.innerWidth,\r\n      innerHeight: window.innerHeight,\r\n      offset: (window.innerWidth - svgWidth) / 2\r\n    })\r\n  }\r\n\r\n  keyboard = () => {\r\n    this.setState({\r\n      playMode: \"keyboard\",\r\n      currentScene: \"scene1\"\r\n    })\r\n  }\r\n\r\n  touchscreen = () => {\r\n    this.setState({\r\n      playMode: \"touchscreen\",\r\n      currentScene: 'scene1'\r\n    })\r\n  }\r\n\r\n  restart = () => {\r\n    this.setState({\r\n      currentScene: \"start\"\r\n    })\r\n  }\r\n  victory = () => {\r\n    this.setState({\r\n      currentScene: 'victory'\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"svg-container\" >\r\n        {this.state.currentScene === \"start\" &&\r\n          <Start\r\n            svgHeight={this.state.svgHeight}\r\n            svgWidth={this.state.svgWidth}\r\n            innerHeight={this.state.innerHeight}\r\n            innerWidth={this.state.innerWidth}\r\n            offset={this.state.offset}\r\n            keyboard={this.keyboard}\r\n            touchscreen={this.touchscreen} />}\r\n        {this.state.currentScene === \"scene1\" &&\r\n          <Scene1\r\n            svgHeight={this.state.svgHeight}\r\n            svgWidth={this.state.svgWidth}\r\n            innerHeight={this.state.innerHeight}\r\n            innerWidth={this.state.innerWidth}\r\n            offset={this.state.offset}\r\n            playMode={this.state.playMode}\r\n            victory={this.victory}\r\n            restart={this.restart} />}\r\n        {this.state.currentScene === \"victory\" && <Victory />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/keyboard.7938c350.svg\";"],"sourceRoot":""}
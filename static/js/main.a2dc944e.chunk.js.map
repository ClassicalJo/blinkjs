{"version":3,"sources":["scenes/Start.js","common/Rectangle.js","common/Circle.js","common/Enemy.js","scenes/Death.js","common/PlayerBullet.js","assets/svg/PlayerSVG.js","assets/svg/EnemySVG.js","assets/svg/Touchscreen.js","common/CollisionEvents.js","common/Scene.js","common/Frame.js","assets/svg/Background.js","common/Bullet.js","common/CoordinatedHomingBullet.js","scenes/Scene1.js","scenes/Victory.js","App.js","serviceWorker.js","index.js"],"names":["Start","props","Fragment","id","width","height","viewBox","x","y","fill","textAnchor","dominantBaseline","fontSize","fontFamily","xlinkHref","onClick","keyboard","touchscreen","Rectangle","w","h","options","world","this","body","Bodies","rectangle","World","add","remove","Circle","r","circle","radius","Enemy","isSensor","isStatic","hp","label","Death","componentDidMount","cycle","setInterval","requestAnimationFrame","updateCycle","setState","prevState","Object","assign","particles","state","showPlayer","engine","Engine","create","runner","Runner","gravity","start","step","Math","PI","theta","setTimeout","particle","cos","sin","push","map","key","indexOf","className","cx","position","cy","React","Component","PlayerBullet","playerBullets","Body","setVelocity","checkIfIsOffScreen","isOffScreen","clearInterval","i","length","splice","PlayerSVG","path","leftWing","rightWing","d","EnemySVG","transform","Touchscreen","stroke","strokeWidth","shoot","blink","removeBullet","pair","collisionEvents","player","Events","on","event","pairs","bodyA","bodyB","dead","Scene","intervals","timerInterval","timer","Number","round","playMode","window","addEventListener","handleKeyDown","run","componentWillUnmount","stop","forEach","timeouts","clearTimeout","removeEventListener","barriers","danger","classNames","enemies","victory","bullets","theEnd","handleTouch","e","target","lastMovement","setPosition","bulletOnCooldown","bullet","renderScene","String","Frame","ground","ceiling","leftWall","rightWall","walls","Background","stars","ceil","random","Bullet","velocityTimeout","HomingBullet","container","hook","constraint","Constraint","stiffness","fire","setStatic","removeHookAndConstraint","bulletFade","Scene1","firstBarrage","wave","secondWave","thirdWave","fourthWave","originX","originY","waveDirection","secondBarrage","surround","secondSurround","thirdSurround","fourthSurround","counter","asyncCounter","bulletTimeout","CoordinatedHomingBullet","thirdBarrage","cluster","secondCluster","thirdCluster","fourthCluster","explosion","secondExplosion","thirdExplosion","timerOffset","targetTime","fourthBarrage","cascade","secondCascade","thirdCascade","secondBullet","thirdBullet","enemy","outerBarrier","maxHp","firstBarrageTimeout","secondBarrageTimeout","thirdBarrageTimeout","fourthBarrageTimeout","theEndTimeout","endTimeout","end","pointerEvents","Victory","alignmentBaseline","App","currentScene","preserveAspectRatio","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2dc944e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nlet Start = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <symbol id=\"shape1\" width=\"500\" height=\"100\" viewBox=\"-250 -50 500 100\" >\r\n                <rect x=\"-250\" y=\"-50\" width=\"500\" height=\"100\" fill=\"white\" />\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    dominantBaseline=\"central\"\r\n                    fontSize=\"40\"\r\n                    fontFamily=\"Arial\"\r\n                    fill=\"black\">\r\n                    Keyboard\r\n                 </text>\r\n            </symbol>\r\n\r\n            <symbol id=\"shape2\" width=\"500\" height=\"100\" viewBox=\"-250 -50 500 100\" >\r\n                <rect x=\"-250\" y=\"-50\" width=\"500\" height=\"100\" fill=\"white\" />\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    dominantBaseline=\"central\"\r\n                    fontSize=\"40\"\r\n                    fontFamily=\"Arial\"\r\n                    fill=\"black\">\r\n                    Touchscreen\r\n                 </text>\r\n            </symbol>\r\n\r\n            <use xlinkHref=\"#shape1\" x=\"-250\" y=\"-100\" onClick={props.keyboard}/>\r\n            <use xlinkHref=\"#shape2\" x=\"-250\" y=\"100\" onClick={props.touchscreen}/>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\nexport default Start","import { Bodies, World } from 'matter-js'\r\n\r\nclass Rectangle {\r\n    constructor(x, y, w, h, options, world) {\r\n        this.body = Bodies.rectangle(x, y, w, h, options)\r\n        this.width = w\r\n        this.height = h\r\n\r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rectangle","import { Bodies, World } from 'matter-js'\r\n\r\nclass Circle {\r\n    constructor(x, y, r, options, world) {\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.radius = r\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Circle","import { Bodies, World } from 'matter-js'\r\n\r\nclass Enemy {\r\n    constructor(x, y, r, world) {\r\n        let options = {\r\n            isSensor: true,\r\n            isStatic: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.hp = 10\r\n        this.body.label = \"enemy\"\r\n        this.radius = r\r\n        \r\n        //oscilacion\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Enemy","import React from 'react'\r\nimport { Engine, Runner } from 'matter-js'\r\nimport Circle from '../common/Circle'\r\n\r\nclass Death extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPlayer: true,\r\n            particles: []\r\n        }\r\n        this.engine = Engine.create()\r\n        this.runner = Runner.create()\r\n        this.world = this.engine.world\r\n        this.world.gravity.y = 0\r\n        Runner.start(this.runner, this.engine)\r\n\r\n        this.particles = []\r\n\r\n        let r = 1\r\n        let step = 2 * Math.PI / 20\r\n\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            setTimeout(() => {\r\n                this.setState({ showPlayer: false })\r\n                let particle = new Circle(r * Math.cos(theta) + this.props.x, -r * Math.sin(theta) + this.props.y, 10, {}, this.world)\r\n                this.particles.push(particle)\r\n            }, 1250)\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cycle = setInterval(() => requestAnimationFrame(() => this.updateCycle()));\r\n    }\r\n\r\n    updateCycle = () => {\r\n        this.setState((prevState) => {\r\n            let particles = Object.assign({}, prevState.particles)\r\n            particles = this.particles\r\n            return { particles }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showPlayer === true &&\r\n                    <rect\r\n                        x={this.props.x - this.props.width / 2}\r\n                        y={this.props.y - this.props.height / 2}\r\n                        width={this.props.width}\r\n                        height={this.props.height}\r\n                        fill=\"pink\" />}\r\n                {this.state.particles.map((key) => <circle\r\n                    key={this.state.particles.indexOf(key)}\r\n                    className=\"playerGlow disappear\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    fill=\"pink\" />\r\n                )}\r\n                {this.state.showPlayer === false && <text\r\n                    className=\"appear\"\r\n                    fill=\"white\"\r\n                    textAnchor=\"middle\"\r\n                >You tried</text>}\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default Death","import { Bodies, World, Body } from 'matter-js'\r\n\r\nclass PlayerBullet {\r\n    constructor(x, y, r, world, playerBullets) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"playerBullet\"\r\n        this.radius = r\r\n\r\n        Body.setVelocity(this.body, { x: 0, y: -15 })\r\n        World.add(world, this.body)\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1000 || x < -1000 || y > 500 || y < -500)\r\n        }\r\n\r\n        this.remove = () => {\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n                if (playerBullets[i].body.id === this.body.id) playerBullets.splice(i, 1)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default PlayerBullet","import React from 'react'\r\n\r\nlet PlayerSVG = (x, y, w, h) => {\r\n    //let path = `M ${x + w / 2} ${y - h * 2} L ${x + w / 2 - w/2} ${y - h/4} H ${x + w / 2 + w/2} Z`;\r\n    let path = `M ${x + w / 2} ${y - h * 2} L ${x} ${y - h} V ${y - h / 4} H ${x + w} V${y - h} Z`;\r\n    //let leftBooster = `M ${x} ${y + h} L ${x - w / 4} ${y + h * 2} H ${x + w / 4}Z`\r\n    //let rightBooster = `M ${x + w} ${y + h} L ${x + w * 3 / 4} ${y + h * 2} H ${x + w * 5 / 4}Z`\r\n    let leftWing = `M ${x - w / 4} ${y - h / 2} V ${y + h * 2} H ${x - w * 5 / 4} Z`\r\n    let rightWing = `M ${x + w * 5 / 4} ${y - h / 2} V ${y + h * 2} H ${x + w * 9 / 4} Z`\r\n    return (\r\n        <g>\r\n            <path d={path} fill=\"white\" />\r\n            {/* <path d={leftBooster} fill=\"white\" />\r\n            <path d={rightBooster} fill=\"white\" /> */}\r\n            <path d={leftWing} fill=\"white\" />\r\n            <path d={rightWing} fill=\"white\" />\r\n            <rect\r\n                id=\"player\"\r\n                className=\"playerGlow\"\r\n                x={x}\r\n                y={y}\r\n                width={w}\r\n                height={h}\r\n            />\r\n        </g>\r\n    )\r\n}\r\nexport default PlayerSVG","import React from 'react'\r\n\r\nlet EnemySVG = (cx, cy, r) => {\r\n    let x = cx - 50\r\n    let y = cy\r\n    let path = `M${x} ${y} L${x - 75} ${y - 75} L ${x - 150} ${y + 150} L${x - 50} ${y - 10} Z`\r\n    return (\r\n        <g key=\"0\">\r\n            <path key=\"1\" d={path} fill=\"white\" className=\"enemy-wing\" />\r\n            <path key=\"2\" d={path} fill=\"white\" className=\"enemy-wing\" transform=\"scale(-1, 1)\" />\r\n            <circle\r\n                key=\"3\"\r\n                id=\"enemy\"\r\n                className=\"glow\"\r\n                cx={cx}\r\n                cy={cy}\r\n                r={r}\r\n                fill=\"pink\"\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default EnemySVG","import React from 'react'\r\n\r\nlet Touchscreen = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <g onClick={props.onClick}>\r\n                <circle cx=\"-725\" cy=\"225\" r=\"225\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"3\" fill=\"transparent\" />\r\n                <path d=\"M-725 225 L -975 0 V 475 Z\" fill=\"transparent\" id=\"left\" />\r\n                <path d=\"M-725 225 L -975 0 H -475 Z\" fill=\"transparent\" id=\"up\" />\r\n                <path d=\"M-725 225 L -475 475 V 0 Z\" fill=\"transparent\" id=\"right\" />\r\n                <path d=\"M-725 225 L -475 475 H -975 Z\" fill=\"transparent\" id=\"down\" />\r\n            </g>\r\n\r\n            <g>\r\n                <circle cx=\"600\" cy=\"300\" r=\"100\" fill=\"transparent\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"3\" onClick={props.shoot}/>\r\n                <circle cx=\"850\" cy=\"200\" r=\"100\" fill=\"transparent\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"3\" onClick={props.blink}/>\r\n            </g>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Touchscreen","import { Events } from \"matter-js\"\r\n\r\n\r\nlet collisionEvents = (player, engine, playerBullets) => {\r\n    Events.on(engine, 'collisionStart', (event) => {\r\n        for (let i = 0; i < event.pairs.length; i++) {\r\n            let pair = event.pairs[i]\r\n\r\n            if (pair.bodyA.label === \"player\" && pair.bodyB.label !== \"wall\") player.dead = true\r\n            else if (pair.bodyB.label === \"player\" && pair.bodyA.label !== \"wall\") player.dead = true\r\n\r\n            if (pair.bodyA.label === \"playerBullet\") {\r\n                if (pair.bodyB.label === \"barrier\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n                else if (pair.bodyB.label === \"enemy\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n            }\r\n\r\n            else if (pair.bodyB.label === \"playerBullet\") {\r\n                if (pair.bodyA.label === \"barrier\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n                else if (pair.bodyA.label === \"enemy\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nlet removeBullet = (pair, playerBullets) => {\r\n    for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n        if (playerBullets[i].body.id === pair.id) {\r\n            playerBullets[i].remove()\r\n        }\r\n    }\r\n}\r\nexport default collisionEvents","import React from 'react'\r\nimport { Body, Runner } from 'matter-js'\r\nimport Death from '../scenes/Death'\r\nimport PlayerBullet from './PlayerBullet';\r\nimport PlayerSVG from '../assets/svg/PlayerSVG';\r\nimport EnemySVG from '../assets/svg/EnemySVG';\r\nimport Touchscreen from \"../assets/svg/Touchscreen\"\r\nimport collisionEvents from '../common/CollisionEvents'\r\n\r\nclass Scene extends React.Component {\r\n    componentDidMount = () => {\r\n        this.intervals = []\r\n        collisionEvents(this.player, this.engine, this.playerBullets)\r\n        this.cycle = setInterval(() => requestAnimationFrame(() => this.updateCycle()))\r\n        this.timerInterval = setInterval(() => {\r\n            this.timer = Number(this.timer) + 0.1\r\n            this.timer = Math.round(this.timer * 100) / 100\r\n        }, 100)\r\n        if (this.props.playMode === \"keyboard\") window.addEventListener(\"keydown\", this.handleKeyDown, true)\r\n        this.intervals.push(this.timerInterval, this.cycle)\r\n        Runner.run(this.runner, this.engine)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        Runner.stop(this.runner)\r\n        this.intervals.forEach((key) => clearInterval(key))\r\n        this.timeouts.forEach((key) => clearTimeout(key))\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown, true)\r\n    }\r\n\r\n\r\n    updateCycle = () => {\r\n        if (this.player.dead === true) {\r\n            Runner.stop(this.runner)\r\n            clearInterval(this.cycle)\r\n        }\r\n        this.setState((prevState) => {\r\n            for (let i = 0; i < this.barriers.length; i++) {\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger * 2) {\r\n                    this.barriers[i].classNames = \"barrier damaged\"\r\n                } \r\n\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger) {\r\n                    this.barriers[i].classNames = \"barrier danger\"\r\n                } \r\n\r\n                if (this.barriers[i].body.hp <= 0) {\r\n                    this.barriers[i].remove()\r\n                    this.barriers.splice(i, 1)\r\n                    i--\r\n                }\r\n            }\r\n            for (let i = 0; i < this.enemies.length; i++) {\r\n                if (this.enemies[i].body.hp <= 0) {\r\n                    this.enemies[i].remove()\r\n                    this.enemies.splice(i, 1)\r\n                    i--\r\n                    this.props.victory()\r\n                }\r\n                \r\n            }\r\n\r\n            let player = Object.assign({}, prevState.player)\r\n            let playerBullets = Object.assign({}, prevState.playerBullets)\r\n            let bullets = Object.assign({}, prevState.bullets)\r\n            let barriers = Object.assign({}, prevState.barriers)\r\n            let enemies = Object.assign({}, prevState.enemies)\r\n            let timer = this.timer\r\n            let theEnd = this.theEnd\r\n\r\n            player = this.player\r\n            playerBullets = this.playerBullets\r\n            bullets = this.bullets\r\n            enemies = this.enemies\r\n            barriers = this.barriers\r\n\r\n            return { player, playerBullets, bullets, enemies, barriers, timer, theEnd }\r\n        })\r\n    }\r\n    handleTouch = (e) => {\r\n        if (e.target.id === \"up\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: -10 });\r\n            this.lastMovement = \"up\"\r\n        }\r\n        else if (e.target.id === \"down\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: 10 });\r\n            this.lastMovement = \"down\"\r\n        }\r\n        else if (e.target.id === \"right\") {\r\n            Body.setVelocity(this.player.body, { x: 10, y: 0 });\r\n            this.lastMovement = \"right\"\r\n        }\r\n        else if (e.target.id === \"left\") {\r\n            Body.setVelocity(this.player.body, { x: -10, y: 0 });\r\n            this.lastMovement = \"left\"\r\n        }\r\n    }\r\n    \r\n    handleKeyDown = (e) => {\r\n        if (e.key === \"w\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: -10 });\r\n            this.lastMovement = \"up\"\r\n        }\r\n        if (e.key === \"s\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: 10 });\r\n            this.lastMovement = \"down\"\r\n        }\r\n        if (e.key === \"d\") {\r\n            Body.setVelocity(this.player.body, { x: 10, y: 0 });\r\n            this.lastMovement = \"right\"\r\n        }\r\n        if (e.key === \"a\") {\r\n            Body.setVelocity(this.player.body, { x: -10, y: 0 });\r\n            this.lastMovement = \"left\"\r\n        }\r\n        if (e.key === \"k\") {\r\n            this.blink()\r\n        }\r\n\r\n        if (e.key === \"l\") {\r\n            this.shoot()\r\n        }\r\n    }\r\n\r\n    blink = () => {\r\n        if (this.lastMovement === \"up\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: -2 })\r\n            if (this.player.body.position.y - 100 < -450) {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: -450 })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: this.player.body.position.y - 100 })\r\n            }\r\n        }\r\n        else if (this.lastMovement === \"down\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: 2 })\r\n            if (this.player.body.position.y + 100 > 450) {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: 450 })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: this.player.body.position.y + 100 })\r\n            }\r\n        }\r\n        else if (this.lastMovement === \"right\") {\r\n            Body.setVelocity(this.player.body, { x: 2, y: 0 })\r\n            if (this.player.body.position.x + 100 > 950) {\r\n                Body.setPosition(this.player.body, { x: 950, y: this.player.body.position.y })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x + 100, y: this.player.body.position.y })\r\n            }\r\n        }\r\n        else if (this.lastMovement === \"left\") {\r\n            Body.setVelocity(this.player.body, { x: -2, y: 0 })\r\n            if (this.player.body.position.x - 100 < -950) {\r\n                Body.setPosition(this.player.body, { x: -950, y: this.player.body.position.y })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x - 100, y: this.player.body.position.y })\r\n            }\r\n        }\r\n    }\r\n\r\n    shoot = () => {\r\n        if (this.player.bulletOnCooldown !== true) {\r\n            this.player.bulletOnCooldown = true\r\n            let bullet = new PlayerBullet(this.player.body.position.x, this.player.body.position.y - 50, 5, this.world, this.playerBullets)\r\n            this.playerBullets.push(bullet)\r\n            setTimeout(() => this.player.bulletOnCooldown = false, 100)\r\n        }\r\n    }\r\n    \r\n    renderScene = () => {\r\n        if (this.player.dead !== true) {\r\n            return (\r\n                <React.Fragment>\r\n                    <text\r\n                        x=\"-950\"\r\n                        y=\"-425\"\r\n                        stroke=\"white\"\r\n                        fill=\"white\"\r\n                    >{String(this.state.timer)}\r\n                    </text>\r\n                    {this.state.bullets.map((key) =>\r\n                        <circle\r\n                            key={this.state.bullets.indexOf(key)}\r\n                            cx={key.body.position.x}\r\n                            cy={key.body.position.y}\r\n                            r={key.radius}\r\n                            fill=\"white\">\r\n                        </circle>)}\r\n                    {this.state.playerBullets.map((key) =>\r\n                        <circle\r\n                            key={this.state.playerBullets.indexOf(key)}\r\n                            cx={key.body.position.x}\r\n                            cy={key.body.position.y}\r\n                            r={key.radius}\r\n                            fill=\"white\">\r\n                        </circle>)}\r\n                    {this.state.enemies.map((key => EnemySVG(\r\n                        key.body.position.x,\r\n                        key.body.position.y,\r\n                        key.radius))\r\n                    )}\r\n                    {this.state.barriers.map((key) => <circle\r\n                        className={key.classNames}\r\n                        key={this.state.barriers.indexOf(key)}\r\n                        cx={key.body.position.x}\r\n                        cy={key.body.position.y}\r\n                        r={key.radius}\r\n                        fill=\"transparent\"\r\n                    />)}\r\n                    {PlayerSVG(\r\n                        this.state.player.body.position.x - this.state.player.width / 2,\r\n                        this.state.player.body.position.y - this.state.player.height / 2,\r\n                        this.state.player.width,\r\n                        this.state.player.height)}\r\n                    <circle\r\n                        id=\"player-radius\"\r\n                        cx={this.state.player.body.position.x}\r\n                        cy={this.state.player.body.position.y}\r\n                        r=\"100\"\r\n                        stroke=\"rgba(255,255,255,0.5\"\r\n                        fill=\"transparent\"\r\n                    />\r\n                    {this.props.playMode === \"touchscreen\" && <Touchscreen onClick={(e) => this.handleTouch(e)} shoot={this.shoot} blink={this.blink} />}\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Death\r\n                    x={this.state.player.body.position.x}\r\n                    y={this.state.player.body.position.y}\r\n                    width={this.state.player.width}\r\n                    height={this.state.player.height}\r\n\r\n                />)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.renderScene()\r\n    }\r\n}\r\n\r\nexport default Scene\r\n\r\n// idea de disparo let bullet = new HomingBullet(r * Math.cos(i), -r*Math.sin(i), 5, target, this.world)","import Rectangle from \"./Rectangle\"\r\nclass Frame {\r\n    constructor(world) {\r\n        this.ground = new Rectangle(0, 500, 2000, 100, { isStatic: true }, world)\r\n        this.ground.body.label = \"wall\"\r\n\r\n        this.ceiling = new Rectangle(0, -500, 2000, 100, { isStatic: true }, world)\r\n        this.ceiling.body.label = \"wall\"\r\n\r\n        this.leftWall = new Rectangle(-1000, 0, 100, 900, { isStatic: true }, world)\r\n        this.leftWall.body.label = \"wall\"\r\n\r\n        this.rightWall = new Rectangle(1000, 0, 100, 900, { isStatic: true }, world)\r\n        this.rightWall.body.label = \"wall\"\r\n\r\n        this.walls = [this.ground, this.ceiling, this.leftWall, this.rightWall]\r\n    }\r\n}\r\n\r\nexport default Frame","import React from 'react'\r\n\r\n\r\nlet Background = () => {\r\n    let stars = []\r\n    for(let i = 0; i < 5; i++) {\r\n        stars.push(i)\r\n    }\r\n\r\n    return (\r\n        <g>\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * 2000) - 1000} y={Math.ceil(Math.random() * 1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * -2000) - 1000} y={Math.ceil(Math.random() * -1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Background","import { Bodies, World, Body } from 'matter-js'\r\n\r\nclass Bullet {\r\n    constructor(x, y, r, world, bullets) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"bullet\"\r\n        this.radius = r\r\n\r\n        this.velocityTimeout = setTimeout(() => Body.setVelocity(this.body, { x: 0, y: 15 }), 1000)\r\n        World.add(world, this.body)\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1250 || x < -1250 || y > 750 || y < -750)\r\n        }\r\n\r\n        this.remove = () => {\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = bullets.length - 1; i >= 0; i--) {\r\n                if (bullets[i].body.id === this.body.id) bullets.splice(i, 1)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Bullet","import { Bodies, World, Constraint, Body } from 'matter-js'\r\n\r\nclass HomingBullet {\r\n    constructor(x, y, r, target, world, container, timer) {\r\n        let options = {\r\n            isSensor: true,\r\n            isStatic: true,\r\n        }\r\n        \r\n        this.timeouts = []\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"homingBullet\"\r\n        this.radius = r\r\n\r\n\r\n        let hook = Bodies.circle(target.x, target.y, 1, { isStatic: true, isSensor: true, label: \"wall\" })\r\n        let constraint = Constraint.create({ bodyA: this.body, bodyB: hook, stiffness: 0.001 })\r\n        constraint.length = constraint.length / 2\r\n\r\n        World.add(world, [this.body, hook, constraint])\r\n        \r\n        let fire = setTimeout(() => {\r\n            Body.setStatic(this.body, false)\r\n        }, timer)\r\n\r\n        let removeHookAndConstraint = setTimeout(() => {\r\n            World.remove(world, hook)\r\n            World.remove(world, constraint)\r\n        }, timer + 500)\r\n\r\n        let bulletFade = setTimeout(() => {\r\n            this.remove()\r\n        }, timer + 4000)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1250 || x < -1250 || y > 750 || y < -750)\r\n        }\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.remove = () => {\r\n            this.timeouts.forEach((key)=> clearTimeout(key))\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for(let i = 0; i < container.length; i++) {\r\n                if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n            }\r\n        }\r\n\r\n        this.timeouts.push(fire, removeHookAndConstraint, bulletFade)\r\n    }\r\n}\r\n\r\nexport default HomingBullet","import React from 'react'\r\nimport { Runner, Engine } from 'matter-js'\r\nimport Rectangle from '../common/Rectangle'\r\nimport Circle from '../common/Circle'\r\nimport Enemy from '../common/Enemy';\r\nimport Scene from '../common/Scene'\r\nimport Frame from '../common/Frame'\r\nimport Background from \"../assets/svg/Background\"\r\nimport Bullet from \"../common/Bullet\"\r\nimport HomingBullet from \"../common/HomingBullet\"\r\nimport CoordinatedHomingBullet from \"../common/CoordinatedHomingBullet\"\r\n\r\nclass Scene1 extends Scene {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            player: null,\r\n            playerBullets: [],\r\n            walls: [],\r\n            bullets: [],\r\n            timer: 0,\r\n            barriers: [],\r\n            enemies: [],\r\n            theEnd: false\r\n        }\r\n\r\n\r\n        this.engine = Engine.create()\r\n        this.world = this.engine.world\r\n        this.runner = Runner.create()\r\n        this.world.gravity.y = 0\r\n\r\n\r\n        this.enemies = []\r\n\r\n        this.state.walls = new Frame(this.world).walls\r\n        this.timer = 0\r\n\r\n        this.player = new Rectangle(0, 300, 20, 20, {}, this.world)\r\n        this.player.body.label = \"player\"\r\n        this.state.player = this.player\r\n\r\n        this.playerBullets = []\r\n\r\n        this.bullets = []\r\n\r\n        this.enemy = new Enemy(0, -350, 50, this.world)\r\n        this.enemy.body.label = \"enemy\"\r\n        this.enemy.body.hp = 10\r\n        this.enemy.dead = false\r\n        this.enemies.push(this.enemy)\r\n\r\n\r\n        this.barriers = []\r\n        this.outerBarrier = new Circle(0, -350, 80, { isStatic: true }, this.world)\r\n        this.outerBarrier.body.label = \"barrier\"\r\n        this.outerBarrier.body.maxHp = 250\r\n        this.outerBarrier.body.hp = 250\r\n        this.outerBarrier.danger = Math.ceil(this.outerBarrier.body.maxHp / 4)\r\n        this.outerBarrier.classNames = this.outerBarrier.body.label\r\n\r\n        this.barriers.push(this.outerBarrier)\r\n\r\n        this.theEnd = false\r\n\r\n\r\n        this.firstBarrageTimeout = setTimeout(() => this.firstBarrage(), 3000)\r\n        this.secondBarrageTimeout = setTimeout(() => this.secondBarrage(), 20000)\r\n        this.thirdBarrageTimeout = setTimeout(() => this.thirdBarrage(), 38000)\r\n        this.fourthBarrageTimeout = setTimeout(() => this.fourthBarrage(), 48000)\r\n        this.theEndTimeout = setTimeout(() => this.theEnd = true, 65000)\r\n        this.endTimeout = setTimeout(() => this.end = new Rectangle(0, 0, 2000, 1000, { isStatic: true, isSensor: true }, this.world), 65150)\r\n\r\n        this.timeouts = []\r\n        this.timeouts.push(this.firstBarrageTimeout, this.secondBarrageTimeout, this.thirdBarrageTimeout, this.fourthBarrageTimeout, this.theEndTimeout, this.endTimeout)\r\n\r\n    }\r\n\r\n    firstBarrage = () => {\r\n        this.wave(-1000, 0, 1)\r\n        let secondWave = setTimeout(() => this.wave(1000, 0, -1), 3000)\r\n        let thirdWave = setTimeout(() => this.wave(-1000, -200, 1), 6000)\r\n        let fourthWave = setTimeout(() => this.wave(1000, -200, -1), 9000)\r\n        this.timeouts.push(secondWave, thirdWave, fourthWave)\r\n    }\r\n\r\n    wave = (originX, originY, waveDirection) => {\r\n        for (let i = 0; i < 100; i++) {\r\n            setTimeout(() => {\r\n                let bullet = new Bullet(originX + i * 25 * waveDirection, originY + i * Math.sin(i * Math.PI / 4 * -1 + 0.5), 5, this.world, this.bullets)\r\n                this.bullets.push(bullet)\r\n            }, 25 * i)\r\n        }\r\n    }\r\n\r\n\r\n    secondBarrage = () => {\r\n        this.surround(400)\r\n        let secondSurround = setTimeout(() => this.surround(350), 3000)\r\n        let thirdSurround = setTimeout(() => this.surround(300), 6000)\r\n        let fourthSurround = setTimeout(() => this.surround(250), 9000)\r\n        this.timeouts.push(secondSurround, thirdSurround, fourthSurround)\r\n    }\r\n\r\n    surround = (radius) => {\r\n        let targetTime = 1000\r\n        let r = radius\r\n        let step = 2 * Math.PI / 50\r\n        let counter = 0\r\n        let asyncCounter = 0\r\n        let target = Object.assign({}, this.state.player.body.position)\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            counter++\r\n            let bulletTimeout = setTimeout(() => {\r\n                asyncCounter++\r\n                let bullet = new CoordinatedHomingBullet(r * Math.cos(theta) + target.x, -r * Math.sin(theta) + target.y, 5, target, this.world, this.bullets, targetTime - 10 * asyncCounter)\r\n                this.bullets.push(bullet)\r\n            }, 10 * counter)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n    }\r\n\r\n    thirdBarrage = () => {\r\n        this.cluster(-1000, -500)\r\n        let secondCluster = setTimeout(() => this.cluster(1000, -500), 2500)\r\n        let thirdCluster = setTimeout(() => this.cluster(1000, 500), 5000)\r\n        let fourthCluster = setTimeout(() => this.cluster(-1000, 500), 7500)\r\n        this.timeouts.push(secondCluster, thirdCluster, fourthCluster)\r\n\r\n    }\r\n\r\n    cluster = (x, y) => {\r\n        this.explosion(350, x, y, 0)\r\n        let secondExplosion = setTimeout(() => this.explosion(400, x, y, 100), 100)\r\n        let thirdExplosion = setTimeout(() => this.explosion(450, x, y, 200), 200)\r\n\r\n        this.timeouts.push(secondExplosion, thirdExplosion)\r\n    }\r\n    explosion = (radius, x, y, timerOffset) => {\r\n        let r = radius\r\n        let step = 2 * Math.PI / 50\r\n        let counter = 0\r\n        let asyncCounter = 0\r\n        let target = Object.assign({}, this.state.player.body.position)\r\n        let targetTime = 1000 - timerOffset\r\n\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            counter++\r\n            let bulletTimeout = setTimeout(() => {\r\n                asyncCounter++\r\n                let bullet = new CoordinatedHomingBullet(r * Math.cos(theta) + x, -r * Math.sin(theta) + y, 5, target, this.world, this.bullets, targetTime - 10 * asyncCounter)\r\n                this.bullets.push(bullet)\r\n            }, 10 * counter)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n    }\r\n\r\n    fourthBarrage = () => {\r\n        this.cascade(1000, -475, -1)\r\n        let secondCascade = setTimeout(() => this.cascade(-1000, -475, 1), 5000)\r\n        let thirdCascade = setTimeout(() => this.cascade(1000, -475, -1), 10000)\r\n        this.timeouts.push(secondCascade, thirdCascade)\r\n    }\r\n\r\n    cascade = (originX, originY, waveDirection) => {\r\n        for (let i = 0; i < 101; i++) {\r\n            let bullet = setTimeout(() => {\r\n                if (i % 2 === 0) {\r\n                    let bullet = new Bullet(originX + i * 25 * waveDirection, originY, 5, this.world, this.bullets)\r\n                    this.bullets.push(bullet)\r\n                }\r\n            }, 5 * i)\r\n\r\n            let secondBullet = setTimeout(() => {\r\n                if (i % 2 !== 0) {\r\n                    let bullet = new Bullet(originX + i * 25 * waveDirection, originY + 50, 5, this.world, this.bullets)\r\n                    this.bullets.push(bullet)\r\n                }\r\n            }, 5 * i + 500)\r\n\r\n            let thirdBullet = setTimeout(() => {\r\n                if (i % 2 === 0) {\r\n                    let bullet = new Bullet(originX + i * 25 * waveDirection, originY + 100, 5, this.world, this.bullets)\r\n                    this.bullets.push(bullet)\r\n                }\r\n            }, 5 * i + 1000)\r\n\r\n            this.timeouts.push(bullet, secondBullet, thirdBullet)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment >\r\n                <Background />\r\n                {this.renderScene()}\r\n                {this.state.theEnd === true && <rect x=\"-1000\" y=\"-500\" width=\"2000\" height=\"1000\" fill=\"white\" pointerEvents=\"none\" className=\"disappear\"></rect>}\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scene1\r\n\r\n","import React from 'react'\r\nimport PlayerSVG from '../assets/svg/PlayerSVG'\r\nlet Victory = () => {\r\n    return (\r\n        <React.Fragment>\r\n    <text fill=\"white\" fontSize=\"32\" alignmentBaseline=\"central\" textAnchor=\"middle\">Victory!!!</text>\r\n    {PlayerSVG(-15, -115, 30, 30)}\r\n    <rect fill=\"white\" height=\"100%\" width=\"100%\" x=\"-50%\" y=\"-50%\" className=\"disappear\" pointerEvents=\"none\" ></rect>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Victory","import React from 'react';\r\nimport Start from './scenes/Start'\r\nimport Scene1 from \"./scenes/Scene1\"\r\nimport Victory from \"./scenes/Victory\"\r\nimport \"./assets/css/app.css\"\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentScene: 'start',\r\n      playMode: \"keyboard\",\r\n    }\r\n\r\n  }\r\n\r\n  keyboard = () => {\r\n    this.setState({\r\n      playMode: \"keyboard\",\r\n      currentScene: \"scene1\"\r\n    })\r\n  }\r\n\r\n  touchscreen = () => {\r\n    this.setState({\r\n      playMode: \"touchscreen\",\r\n      currentScene: 'scene1'\r\n    })\r\n  }\r\n\r\n  victory = () => {\r\n    this.setState({\r\n      currentScene: 'victory'\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"svg-container\" >\r\n        <svg viewBox=\"-1000 -500 2000 1000\" preserveAspectRatio=\"xMidYMid meet\">\r\n\r\n          <rect\r\n            fill=\"black\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            x=\"-1000\"\r\n            y=\"-500\"\r\n          />\r\n          {this.state.currentScene === \"start\" && <Start keyboard={this.keyboard} touchscreen={this.touchscreen} />}\r\n          {this.state.currentScene === \"scene1\" && <Scene1 playMode={this.state.playMode} victory={this.victory}/>}\r\n          {this.state.currentScene === \"victory\" && <Victory />}\r\n          <rect\r\n            fill=\"transparent\"\r\n            stroke=\"blue\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            x=\"-1000\"\r\n            y=\"-500\"\r\n            strokeWidth=\"25\"\r\n            pointerEvents=\"none\" />\r\n\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
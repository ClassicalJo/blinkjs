{"version":3,"sources":["scenes/Start.js","common/Enemy.js","common/SphereBarrier.js","common/Rectangle.js","common/PlayerBullet.js","common/Frame.js","common/Circle.js","scenes/Death.js","assets/svg/PlayerSVG.js","assets/svg/EnemySVG.js","assets/svg/Touchscreen.js","common/CollisionEvents.js","assets/svg/BulletsSVG.js","common/Scene.js","assets/svg/Background.js","common/Bullet.js","common/TargetingSystem.js","common/BouncerBullet.js","common/CoordinatedHomingBullet.js","common/TargetedBullet.js","scenes/Scene1.js","scenes/Victory.js","App.js","serviceWorker.js","index.js"],"names":["Start","props","Fragment","id","width","height","viewBox","x","y","fill","textAnchor","dominantBaseline","fontSize","fontFamily","xlinkHref","onClick","keyboard","touchscreen","Enemy","r","hp","world","this","body","Bodies","circle","isStatic","label","dead","radius","World","add","remove","SphereBarrier","maxHp","isSensor","danger","Math","ceil","classNames","Rectangle","w","h","options","rectangle","PlayerBullet","playerBullets","Body","setVelocity","checkIfIsOffScreen","setInterval","isOffScreen","position","clearInterval","i","length","splice","Frame","ground","ceiling","leftWall","rightWall","walls","Circle","Death","componentDidMount","cycle","updateCycle","loop","requestAnimationFrame","setState","prevState","Object","assign","particles","componentWillUnmount","cancelAnimationFrame","clearTimeout","explosion","state","showPlayer","pause","engine","Engine","create","runner","Runner","gravity","start","step","PI","theta","setTimeout","particle","cos","sin","push","map","key","indexOf","className","cx","cy","restart","pointerEvents","React","Component","PlayerSVG","path","leftWing","rightWing","d","EnemySVG","transform","Touchscreen","stroke","strokeWidth","shoot","blink","removeBullet","pair","collisionEvents","player","Events","on","event","pairs","bodyA","bodyB","BulletsSVG","bouncer","filter","bullet","bigBullet","surroundBullet","Scene","intervals","timerInterval","timer","Number","round","playMode","window","addEventListener","handleKeyDown","run","stop","forEach","timeouts","removeEventListener","togglePause","barriers","enemies","victory","bullets","bouncers","theEnd","handleTouch","e","target","lastMovement","setPosition","bulletOnCooldown","renderScene","String","stdDeviation","Background","stars","random","Bullet","velocityTimeout","Target","coordinates","targetX","targetY","targetRadius","atan2","homing","BouncerBullet","container","restitution","hook","constraint","Constraint","stiffness","fire","setStatic","removeHookAndConstraint","fade","HomingBullet","originX","originY","bulletFade","TargetedBullet","fixedTargetX","fixedTargetY","Scene1","thirdBarrage","bouncerCluster","secondCluster","thirdCluster","fourthCluster","firstBarrage","wave","secondWave","thirdWave","fourthWave","waveDirection","secondBarrage","surround","secondSurround","thirdSurround","fourthSurround","counter","asyncCounter","bulletTimeout","CoordinatedHomingBullet","fourthBarrage","cascade","secondCascade","thirdCascade","drop","secondDrop","thirdDrop","enemy","outerBarrier","firstBarrageTimeout","secondBarrageTimeout","thirdBarrageTimeout","fourthBarrageTimeout","theEndTimeout","endTimeout","end","Victory","alignmentBaseline","App","currentScene","preserveAspectRatio","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5145ae27.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nlet Start = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <symbol id=\"shape1\" width=\"500\" height=\"100\" viewBox=\"-250 -50 500 100\" >\r\n                <rect x=\"-250\" y=\"-50\" width=\"500\" height=\"100\" fill=\"white\" />\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    dominantBaseline=\"central\"\r\n                    fontSize=\"40\"\r\n                    fontFamily=\"Arial\"\r\n                    fill=\"black\">\r\n                    Keyboard\r\n                 </text>\r\n            </symbol>\r\n\r\n            <symbol id=\"shape2\" width=\"500\" height=\"100\" viewBox=\"-250 -50 500 100\" >\r\n                <rect x=\"-250\" y=\"-50\" width=\"500\" height=\"100\" fill=\"white\" />\r\n                <text\r\n                    textAnchor=\"middle\"\r\n                    dominantBaseline=\"central\"\r\n                    fontSize=\"40\"\r\n                    fontFamily=\"Arial\"\r\n                    fill=\"black\">\r\n                    Touchscreen\r\n                 </text>\r\n            </symbol>\r\n\r\n            <use xlinkHref=\"#shape1\" x=\"-250\" y=\"-100\" onClick={props.keyboard}/>\r\n            <use xlinkHref=\"#shape2\" x=\"-250\" y=\"100\" onClick={props.touchscreen}/>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\nexport default Start","import { Bodies, World } from 'matter-js'\r\n\r\nclass Enemy {\r\n    constructor(x, y, r, hp, world) {\r\n        let options = {\r\n            isStatic: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.hp = hp\r\n        this.body.label = \"enemy\"\r\n        this.dead = false\r\n        this.radius = r\r\n        \r\n        //oscilacion\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Enemy","import { Bodies, World } from \"matter-js\"\r\n\r\nclass SphereBarrier {\r\n    constructor(x, y, r, maxHp, world){\r\n        this.body = Bodies.circle(x, y, r, { isStatic: true, isSensor: true})\r\n        this.body.label = \"barrier\"\r\n        this.body.maxHp = maxHp\r\n        this.body.hp = maxHp\r\n        this.radius = r\r\n        this.danger = Math.ceil(this.body.maxHp / 4)\r\n        this.classNames = \"barrier\"    \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n}\r\nexport default SphereBarrier","import { Bodies, World } from 'matter-js'\r\n\r\nclass Rectangle {\r\n    constructor(x, y, w, h, options, world) {\r\n        this.body = Bodies.rectangle(x, y, w, h, options)\r\n        this.width = w\r\n        this.height = h\r\n\r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rectangle","import { Bodies, World, Body } from 'matter-js'\r\n\r\nclass PlayerBullet {\r\n    constructor(x, y, r, world, playerBullets) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"playerBullet\"\r\n        this.radius = r\r\n\r\n        Body.setVelocity(this.body, { x: 0, y: -15 })\r\n        World.add(world, this.body)\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1000 || x < -1000 || y > 500 || y < -500)\r\n        }\r\n\r\n        this.remove = () => {\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n                if (playerBullets[i].body.id === this.body.id) playerBullets.splice(i, 1)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default PlayerBullet","import Rectangle from \"./Rectangle\"\r\nclass Frame {\r\n    constructor(world) {\r\n        this.ground = new Rectangle(0, 500, 2000, 100, { isStatic: true }, world)\r\n        this.ground.body.label = \"wall\"\r\n\r\n        this.ceiling = new Rectangle(0, -500, 2000, 100, { isStatic: true }, world)\r\n        this.ceiling.body.label = \"wall\"\r\n\r\n        this.leftWall = new Rectangle(-1000, 0, 100, 900, { isStatic: true }, world)\r\n        this.leftWall.body.label = \"wall\"\r\n\r\n        this.rightWall = new Rectangle(1000, 0, 100, 900, { isStatic: true }, world)\r\n        this.rightWall.body.label = \"wall\"\r\n\r\n        this.walls = [this.ground, this.ceiling, this.leftWall, this.rightWall]\r\n    }\r\n}\r\n\r\nexport default Frame","import { Bodies, World } from 'matter-js'\r\n\r\nclass Circle {\r\n    constructor(x, y, r, options, world) {\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.radius = r\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Circle","import React from 'react'\r\nimport { Engine, Runner } from 'matter-js'\r\nimport Circle from '../common/Circle'\r\n\r\nclass Death extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPlayer: true,\r\n            particles: []\r\n        }\r\n        this.pause = false\r\n        this.engine = Engine.create()\r\n        this.runner = Runner.create()\r\n        this.world = this.engine.world\r\n        this.world.gravity.y = 0\r\n        Runner.start(this.runner, this.engine)\r\n\r\n        this.particles = []\r\n\r\n        let r = 1\r\n        let step = 2 * Math.PI / 20\r\n\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            this.explosion = setTimeout(() => {\r\n                this.setState({ showPlayer: false })\r\n                let particle = new Circle(r * Math.cos(theta) + this.props.x, -r * Math.sin(theta) + this.props.y, 10, {}, this.world)\r\n                this.particles.push(particle)\r\n            }, 1250)\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cycle()\r\n    }\r\n\r\n    cycle = () => {\r\n        this.updateCycle();\r\n        this.loop = requestAnimationFrame(() => this.cycle())\r\n    }\r\n\r\n    updateCycle = () => {\r\n        this.setState((prevState) => {\r\n            let particles = Object.assign({}, prevState.particles)\r\n            particles = this.particles\r\n            return { particles }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        cancelAnimationFrame(this.loop)\r\n        clearTimeout(this.explosion)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showPlayer === true &&\r\n                    <rect\r\n                        x={this.props.x - this.props.width / 2}\r\n                        y={this.props.y - this.props.height / 2}\r\n                        width={this.props.width}\r\n                        height={this.props.height}\r\n                        fill=\"pink\" />}\r\n                {this.state.particles.map((key) => <circle\r\n                    key={this.state.particles.indexOf(key)}\r\n                    className=\"playerGlow disappear\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    fill=\"pink\" />\r\n                )}\r\n                {this.state.showPlayer === false &&\r\n                    <g>\r\n                        <text\r\n                            className=\"appear\"\r\n                            fill=\"white\"\r\n                            textAnchor=\"middle\">\r\n                            You tried\r\n                        </text>\r\n                        <rect\r\n                            className=\"appear\"\r\n                            width=\"25%\"\r\n                            height=\"50\"\r\n                            x=\"-12.5%\"\r\n                            y=\"75\"\r\n                            fill=\"white\"\r\n                            onClick={this.props.restart} />\r\n                        <text\r\n                            y=\"100\"\r\n                            className=\"appear\"\r\n                            textAnchor=\"middle\"\r\n                            pointerEvents=\"none\">\r\n                            Try again\r\n                        </text>\r\n                    </g>}\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default Death","import React from 'react'\r\n\r\nlet PlayerSVG = (x, y, w, h) => {\r\n    //let path = `M ${x + w / 2} ${y - h * 2} L ${x + w / 2 - w/2} ${y - h/4} H ${x + w / 2 + w/2} Z`;\r\n    let path = `M ${x + w / 2} ${y - h * 2} L ${x} ${y - h} V ${y - h / 4} H ${x + w} V${y - h} Z`;\r\n    //let leftBooster = `M ${x} ${y + h} L ${x - w / 4} ${y + h * 2} H ${x + w / 4}Z`\r\n    //let rightBooster = `M ${x + w} ${y + h} L ${x + w * 3 / 4} ${y + h * 2} H ${x + w * 5 / 4}Z`\r\n    let leftWing = `M ${x - w / 4} ${y - h / 2} V ${y + h * 2} H ${x - w * 5 / 4} Z`\r\n    let rightWing = `M ${x + w * 5 / 4} ${y - h / 2} V ${y + h * 2} H ${x + w * 9 / 4} Z`\r\n    return (\r\n        <g>\r\n            <path d={path} fill=\"white\" />\r\n            {/* <path d={leftBooster} fill=\"white\" />\r\n            <path d={rightBooster} fill=\"white\" /> */}\r\n            <path d={leftWing} fill=\"white\" />\r\n            <path d={rightWing} fill=\"white\" />\r\n            <rect\r\n                id=\"player\"\r\n                className=\"playerGlow\"\r\n                x={x}\r\n                y={y}\r\n                width={w}\r\n                height={h}\r\n            />\r\n        </g>\r\n    )\r\n}\r\nexport default PlayerSVG","import React from 'react'\r\n\r\nlet EnemySVG = (cx, cy, r) => {\r\n    let x = cx - 50\r\n    let y = cy\r\n    let path = `M${x} ${y} L${x - 75} ${y - 75} L ${x - 150} ${y + 150} L${x - 50} ${y - 10} Z`\r\n    return (\r\n        <g key=\"0\">\r\n            <path key=\"1\" d={path} fill=\"white\" className=\"enemy-wing\" />\r\n            <path key=\"2\" d={path} fill=\"white\" className=\"enemy-wing\" transform=\"scale(-1, 1)\" />\r\n            <circle\r\n                key=\"3\"\r\n                className=\"enemy\"\r\n                cx={cx}\r\n                cy={cy}\r\n                r={r}\r\n                fill=\"pink\"\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default EnemySVG","import React from 'react'\r\n\r\nlet Touchscreen = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <g onClick={props.onClick}>\r\n                <circle cx=\"-725\" cy=\"225\" r=\"225\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"3\" fill=\"transparent\" />\r\n                <path d=\"M-725 225 L -975 0 V 475 Z\" fill=\"transparent\" id=\"left\" />\r\n                <path d=\"M-725 225 L -975 0 H -475 Z\" fill=\"transparent\" id=\"up\" />\r\n                <path d=\"M-725 225 L -475 475 V 0 Z\" fill=\"transparent\" id=\"right\" />\r\n                <path d=\"M-725 225 L -475 475 H -975 Z\" fill=\"transparent\" id=\"down\" />\r\n            </g>\r\n\r\n            <g>\r\n                <circle cx=\"600\" cy=\"300\" r=\"100\" fill=\"transparent\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"3\" onClick={props.shoot}/>\r\n                <circle cx=\"850\" cy=\"200\" r=\"100\" fill=\"transparent\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"3\" onClick={props.blink}/>\r\n            </g>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Touchscreen","import { Events } from \"matter-js\"\r\n\r\n\r\nlet collisionEvents = (player, engine, playerBullets) => {\r\n    Events.on(engine, 'collisionStart', (event) => {\r\n        for (let i = 0; i < event.pairs.length; i++) {\r\n            let pair = event.pairs[i]\r\n\r\n            if (pair.bodyA.label === \"player\" && pair.bodyB.label !== \"wall\") player.dead = true\r\n            else if (pair.bodyB.label === \"player\" && pair.bodyA.label !== \"wall\") player.dead = true\r\n\r\n            if (pair.bodyA.label === \"playerBullet\") {\r\n                if (pair.bodyB.label === \"barrier\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n                else if (pair.bodyB.label === \"enemy\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n            }\r\n\r\n            else if (pair.bodyB.label === \"playerBullet\") {\r\n                if (pair.bodyA.label === \"barrier\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n                else if (pair.bodyA.label === \"enemy\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nlet removeBullet = (pair, playerBullets) => {\r\n    for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n        if (playerBullets[i].body.id === pair.id) {\r\n            playerBullets[i].remove()\r\n        }\r\n    }\r\n}\r\nexport default collisionEvents","import React from 'react'\r\nlet BulletsSVG = {\r\n    bouncer: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className={key.className}\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    fill=\"#FFFF26\"\r\n                    filter=\"url(#blur)\" />\r\n                <circle\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius * 3 / 4}\r\n                    fill=\"black\" />\r\n            </g>)\r\n    },\r\n    bullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"bullet\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    stroke=\"#FFFF26\"\r\n                    fill=\"lightpink\"\r\n                    strokeWidth=\"1\" />\r\n            </g>\r\n        )\r\n    },\r\n    bigBullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"bigBullet\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    stroke=\"#C24CF6\"\r\n                    fill=\"#FC6E22\"\r\n                    strokeWidth=\"5\" />\r\n            </g>\r\n        )\r\n    },\r\n    surroundBullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"bullet\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    stroke=\"#FFFF26\"\r\n                    fill=\"#C24CF6\"\r\n                    strokeWidth=\"1\" />\r\n            </g>\r\n        )\r\n    },\r\n}\r\n\r\n\r\nexport default BulletsSVG","import React from 'react'\r\nimport { Body, Runner, Engine } from 'matter-js'\r\nimport Rectangle from '../common/Rectangle'\r\nimport PlayerBullet from \"../common/PlayerBullet\"\r\nimport Frame from '../common/Frame'\r\nimport Death from '../scenes/Death'\r\nimport PlayerSVG from '../assets/svg/PlayerSVG';\r\nimport EnemySVG from '../assets/svg/EnemySVG';\r\nimport Touchscreen from \"../assets/svg/Touchscreen\"\r\nimport collisionEvents from '../common/CollisionEvents'\r\nimport BulletsSVG from '../assets/svg/BulletsSVG'\r\n\r\nclass Scene extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            player: null,\r\n            playerBullets: [],\r\n            walls: [],\r\n            bullets: [],\r\n            bouncers: [],\r\n            timer: 0,\r\n            barriers: [],\r\n            enemies: [],\r\n            theEnd: false\r\n        }\r\n        this.timeouts = []\r\n        this.intervals = []\r\n        this.pause = false\r\n\r\n        this.engine = Engine.create()\r\n        this.world = this.engine.world\r\n        this.runner = Runner.create()\r\n        this.world.gravity.y = 0\r\n\r\n        this.enemies = []\r\n        this.barriers = []\r\n        this.bullets = []\r\n        this.bouncers = []\r\n        this.playerBullets = []\r\n\r\n        this.state.walls = new Frame(this.world).walls\r\n        this.timer = 0\r\n\r\n        this.player = new Rectangle(0, 300, 20, 20, {}, this.world)\r\n        this.player.body.label = \"player\"\r\n        this.state.player = this.player\r\n\r\n        this.theEnd = false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.intervals = []\r\n        collisionEvents(this.player, this.engine, this.playerBullets)\r\n        this.timerInterval = setInterval(() => {\r\n            this.timer = Number(this.timer) + 0.1\r\n            this.timer = Math.round(this.timer * 100) / 100\r\n        }, 100)\r\n        if (this.props.playMode === \"keyboard\") window.addEventListener(\"keydown\", this.handleKeyDown, true)\r\n        this.intervals.push(this.timerInterval, this.cycle)\r\n        Runner.run(this.runner, this.engine)\r\n        this.cycle()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        Runner.stop(this.runner)\r\n        cancelAnimationFrame(this.loop)\r\n        this.intervals.forEach((key) => clearInterval(key))\r\n        this.timeouts.forEach((key) => clearTimeout(key))\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown, true)\r\n    }\r\n\r\n    cycle = () => {\r\n        this.updateCycle();\r\n        this.loop = requestAnimationFrame(() => this.cycle())\r\n    }\r\n\r\n    togglePause = () => {\r\n        if (this.pause) {\r\n            this.cycle()\r\n            Runner.run(this.runner, this.engine)\r\n            this.pause = false\r\n        }\r\n        else {\r\n            cancelAnimationFrame(this.loop)\r\n            Runner.stop(this.runner)\r\n            this.pause = true\r\n        }\r\n    }\r\n\r\n    updateCycle = () => {\r\n        if (this.player.dead === true) {\r\n            cancelAnimationFrame(this.loop)\r\n            Runner.stop(this.runner)\r\n            this.timeouts.forEach((key) => clearTimeout(key))\r\n        }\r\n        this.setState((prevState) => {\r\n            for (let i = 0; i < this.barriers.length; i++) {\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger * 2) {\r\n                    this.barriers[i].classNames = \"barrier damaged\"\r\n                }\r\n\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger) {\r\n                    this.barriers[i].classNames = \"barrier danger\"\r\n                }\r\n\r\n                if (this.barriers[i].body.hp <= 0) {\r\n                    this.barriers[i].remove()\r\n                    this.barriers.splice(i, 1)\r\n                    i--\r\n                }\r\n            }\r\n            for (let i = 0; i < this.enemies.length; i++) {\r\n                if (this.enemies[i].body.hp <= 0) {\r\n                    this.enemies[i].remove()\r\n                    this.enemies.splice(i, 1)\r\n                    i--\r\n                    this.props.victory()\r\n                }\r\n\r\n            }\r\n\r\n            let player = Object.assign({}, prevState.player)\r\n            let playerBullets = Object.assign({}, prevState.playerBullets)\r\n            let bullets = Object.assign({}, prevState.bullets)\r\n            let bouncers = Object.assign({}, prevState.bouncers)\r\n            let barriers = Object.assign({}, prevState.barriers)\r\n            let enemies = Object.assign({}, prevState.enemies)\r\n            let timer = this.timer\r\n            let theEnd = this.theEnd\r\n\r\n            player = this.player\r\n            playerBullets = this.playerBullets\r\n            bullets = this.bullets\r\n            bouncers = this.bouncers\r\n            enemies = this.enemies\r\n            barriers = this.barriers\r\n\r\n            return { player, playerBullets, bullets, bouncers, enemies, barriers, timer, theEnd }\r\n        })\r\n    }\r\n    handleTouch = (e) => {\r\n        if (e.target.id === \"up\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: -10 });\r\n            this.lastMovement = \"up\"\r\n        }\r\n        else if (e.target.id === \"down\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: 10 });\r\n            this.lastMovement = \"down\"\r\n        }\r\n        else if (e.target.id === \"right\") {\r\n            Body.setVelocity(this.player.body, { x: 10, y: 0 });\r\n            this.lastMovement = \"right\"\r\n        }\r\n        else if (e.target.id === \"left\") {\r\n            Body.setVelocity(this.player.body, { x: -10, y: 0 });\r\n            this.lastMovement = \"left\"\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === \"w\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: -10 });\r\n            this.lastMovement = \"up\"\r\n        }\r\n        if (e.key === \"s\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: 10 });\r\n            this.lastMovement = \"down\"\r\n        }\r\n        if (e.key === \"d\") {\r\n            Body.setVelocity(this.player.body, { x: 10, y: 0 });\r\n            this.lastMovement = \"right\"\r\n        }\r\n        if (e.key === \"a\") {\r\n            Body.setVelocity(this.player.body, { x: -10, y: 0 });\r\n            this.lastMovement = \"left\"\r\n        }\r\n        if (e.key === \"k\") {\r\n            this.blink()\r\n        }\r\n\r\n        if (e.key === \"l\") {\r\n            this.shoot()\r\n        }\r\n    }\r\n\r\n    blink = () => {\r\n        if (this.lastMovement === \"up\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: -2 })\r\n            if (this.player.body.position.y - 100 < -450) {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: -450 })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: this.player.body.position.y - 100 })\r\n            }\r\n        }\r\n        else if (this.lastMovement === \"down\") {\r\n            Body.setVelocity(this.player.body, { x: 0, y: 2 })\r\n            if (this.player.body.position.y + 100 > 450) {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: 450 })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x, y: this.player.body.position.y + 100 })\r\n            }\r\n        }\r\n        else if (this.lastMovement === \"right\") {\r\n            Body.setVelocity(this.player.body, { x: 2, y: 0 })\r\n            if (this.player.body.position.x + 100 > 950) {\r\n                Body.setPosition(this.player.body, { x: 950, y: this.player.body.position.y })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x + 100, y: this.player.body.position.y })\r\n            }\r\n        }\r\n        else if (this.lastMovement === \"left\") {\r\n            Body.setVelocity(this.player.body, { x: -2, y: 0 })\r\n            if (this.player.body.position.x - 100 < -950) {\r\n                Body.setPosition(this.player.body, { x: -950, y: this.player.body.position.y })\r\n            } else {\r\n                Body.setPosition(this.player.body, { x: this.player.body.position.x - 100, y: this.player.body.position.y })\r\n            }\r\n        }\r\n    }\r\n\r\n    shoot = () => {\r\n        if (this.player.bulletOnCooldown !== true) {\r\n            this.player.bulletOnCooldown = true\r\n            let bullet = new PlayerBullet(this.player.body.position.x, this.player.body.position.y - 50, 5, this.world, this.playerBullets)\r\n            this.playerBullets.push(bullet)\r\n            setTimeout(() => this.player.bulletOnCooldown = false, 100)\r\n        }\r\n    }\r\n\r\n    renderScene = () => {\r\n        if (this.player.dead !== true) {\r\n            return (\r\n                <React.Fragment>\r\n                    <text\r\n                        x=\"-950\"\r\n                        y=\"-425\"\r\n                        stroke=\"white\"\r\n                        fill=\"white\"\r\n                    >{String(this.state.timer)}\r\n                    </text>\r\n                    <filter id=\"blur\">\r\n                        <feGaussianBlur stdDeviation=\"2\" />\r\n                    </filter>\r\n                    {this.state.bullets.map((key) => {\r\n                        if (key.body.label === \"bullet\") return BulletsSVG.bullet(key)\r\n                        else if (key.body.label === 'bouncer') return BulletsSVG.bouncer(key)\r\n                        else if (key.body.label === 'bigBullet') return BulletsSVG.bigBullet(key)\r\n                        else if (key.body.label === 'surroundBullet') return BulletsSVG.bigBullet(key)\r\n                    })\r\n                    })}\r\n                    {this.state.playerBullets.map((key) =>\r\n                        <circle\r\n                            key={this.state.playerBullets.indexOf(key)}\r\n                            cx={key.body.position.x}\r\n                            cy={key.body.position.y}\r\n                            r={key.radius}\r\n                            fill=\"white\">\r\n                        </circle>)}\r\n                    {this.state.enemies.map((key => EnemySVG(\r\n                        key.body.position.x,\r\n                        key.body.position.y,\r\n                        key.radius))\r\n                    )}\r\n                    {this.state.barriers.map((key) => <circle\r\n                        className={key.classNames}\r\n                        key={this.state.barriers.indexOf(key)}\r\n                        cx={key.body.position.x}\r\n                        cy={key.body.position.y}\r\n                        r={key.radius}\r\n                        fill=\"transparent\"\r\n                    />)}\r\n                    {PlayerSVG(\r\n                        this.state.player.body.position.x - this.state.player.width / 2,\r\n                        this.state.player.body.position.y - this.state.player.height / 2,\r\n                        this.state.player.width,\r\n                        this.state.player.height)}\r\n                    <circle\r\n                        id=\"player-radius\"\r\n                        cx={this.state.player.body.position.x}\r\n                        cy={this.state.player.body.position.y}\r\n                        r=\"100\"\r\n                        stroke=\"rgba(255,255,255,0.5\"\r\n                        fill=\"transparent\"\r\n                    />\r\n                    {this.state.theEnd === true && <rect x=\"-1000\" y=\"-500\" width=\"2000\" height=\"1000\" fill=\"white\" pointerEvents=\"none\" className=\"disappear\"></rect>}\r\n                    {this.props.playMode === \"touchscreen\" && <Touchscreen onClick={(e) => this.handleTouch(e)} shoot={this.shoot} blink={this.blink} />}\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Death\r\n                    x={this.state.player.body.position.x}\r\n                    y={this.state.player.body.position.y}\r\n                    width={this.state.player.width}\r\n                    height={this.state.player.height}\r\n                    restart={this.props.restart}\r\n\r\n                />)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.renderScene()\r\n    }\r\n}\r\n\r\nexport default Scene\r\n\r\n// idea de disparo let bullet = new HomingBullet(r * Math.cos(i), -r*Math.sin(i), 5, target, this.world)","import React from 'react'\r\n\r\n\r\nlet Background = () => {\r\n    let stars = []\r\n    for(let i = 0; i < 5; i++) {\r\n        stars.push(i)\r\n    }\r\n\r\n    return (\r\n        <g>\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * 2000) - 1000} y={Math.ceil(Math.random() * 1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * -2000) - 1000} y={Math.ceil(Math.random() * -1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Background","import { Bodies, World, Body } from 'matter-js'\r\n\r\nclass Bullet {\r\n    constructor(x, y, r, world, bullets) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"bullet\"\r\n        this.radius = r\r\n\r\n        this.velocityTimeout = setTimeout(() => Body.setVelocity(this.body, { x: 0, y: 15 }), 1000)\r\n        World.add(world, this.body)\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1250 || x < -1250 || y > 750 || y < -750)\r\n        }\r\n\r\n        this.remove = () => {\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = bullets.length - 1; i >= 0; i--) {\r\n                if (bullets[i].body.id === this.body.id) bullets.splice(i, 1)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Bullet","let Target = {\r\n    coordinates: (x, y, targetX, targetY, targetRadius) => {\r\n        let theta = Math.atan2(- y + targetY, -x + targetX)\r\n        theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n        theta = theta * Math.PI / 180\r\n        let finalX = x + targetRadius * Math.cos(theta)\r\n        let finalY = y + targetRadius * Math.sin(theta)\r\n        return { x: finalX, y: finalY }\r\n    },\r\n\r\n    homing: (x, y, targetRadius, player) => {\r\n        let theta = Math.atan2(-y + player.body.position.y - player.height / 2, -x + player.body.position.x - player.width / 2)\r\n        theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n        theta = theta * Math.PI / 180\r\n        let finalX = x + targetRadius * Math.cos(theta)\r\n        let finalY = y + targetRadius * Math.sin(theta)\r\n        return { x: finalX, y: finalY }\r\n    }\r\n}\r\nexport default Target","import { Body, Bodies, Constraint, World } from \"matter-js\"\r\nimport Target from './TargetingSystem'\r\n\r\nclass BouncerBullet {\r\n    constructor(x, y, r, player, world, container) {\r\n        this.options = {\r\n            isStatic: true,\r\n            restitution: 1,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, this.options)\r\n        this.radius = r\r\n        this.className = \"bouncer\"\r\n        let { x: targetX, y: targetY } = Target.homing(x, y, 500, player)\r\n\r\n        let hook = Bodies.circle(targetX, targetY, 1, { isStatic: true, isSensor: true, label: \"wall\" })\r\n        let constraint = Constraint.create({ bodyA: this.body, bodyB: hook, stiffness: 0.01 })\r\n        constraint.length = constraint.length / 2\r\n\r\n        World.add(world, [this.body, hook, constraint])\r\n\r\n        let fire = setTimeout(() => {\r\n            Body.setStatic(this.body, false)\r\n        }, 100)\r\n\r\n        let removeHookAndConstraint = setTimeout(() => {\r\n            World.remove(world, [hook, constraint])\r\n        }, 150)\r\n\r\n        let fade = setTimeout(() => {\r\n            this.remove()\r\n        }, 5000)\r\n\r\n        let timeouts = []\r\n        timeouts.push(fire, removeHookAndConstraint, fade)\r\n\r\n        this.remove = () => {\r\n            timeouts.forEach((key) => clearTimeout(key))\r\n            for (let i = container.length - 1; i >= 0; i--) {\r\n                if (container[i].body.id === this.body.id) {\r\n                    container.splice(i, 1)\r\n                }\r\n            }\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default BouncerBullet\r\n","import { Bodies, World, Constraint, Body } from 'matter-js'\r\nimport Target from './TargetingSystem'\r\n\r\nclass HomingBullet {\r\n    constructor(x, originX, y, originY, r, player, world, container, timer) {\r\n        let options = {\r\n            isSensor: true,\r\n            isStatic: true,\r\n        }\r\n\r\n        this.timeouts = []\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"bullet\"\r\n        this.radius = r\r\n\r\n        let { x: targetX, y: targetY } = Target.coordinates(x, y, originX, originY, 500)\r\n\r\n        let hook = Bodies.circle(targetX, targetY, 1, { isStatic: true, isSensor: true, label: \"wall\" })\r\n\r\n\r\n        let constraint = Constraint.create({ bodyA: this.body, bodyB: hook, stiffness: 0.001 })\r\n        constraint.length = constraint.length / 2\r\n\r\n        World.add(world, [this.body, hook, constraint])\r\n\r\n        let fire = setTimeout(() => {\r\n            Body.setStatic(this.body, false)\r\n        }, timer)\r\n\r\n        let removeHookAndConstraint = setTimeout(() => {\r\n            World.remove(world, hook)\r\n            World.remove(world, constraint)\r\n        }, timer + 500)\r\n\r\n        let bulletFade = setTimeout(() => {\r\n            this.remove()\r\n        }, timer + 4000)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1250 || x < -1250 || y > 750 || y < -750)\r\n        }\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.remove = () => {\r\n            this.timeouts.forEach((key) => clearTimeout(key))\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = 0; i < container.length; i++) {\r\n                if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n            }\r\n        }\r\n\r\n        this.timeouts.push(fire, removeHookAndConstraint, bulletFade)\r\n    }\r\n}\r\n\r\nexport default HomingBullet","import { Body, Bodies, Constraint, World } from 'matter-js'\r\nimport Target from './TargetingSystem'\r\n\r\nclass TargetedBullet {\r\n    constructor(x, fixedTargetX, y, fixedTargetY, r, world, container) {\r\n        this.body = Bodies.circle(x, y, r, { isSensor: true, isStatic: true })\r\n        this.radius = r\r\n\r\n        let { x: targetX, y: targetY } = Target.coordinates(x, y, fixedTargetX, fixedTargetY, 250)\r\n\r\n        let hook = Bodies.circle(targetX, targetY, 1, { isStatic: true, isSensor: true, label: \"wall\" })\r\n        let constraint = Constraint.create({ bodyA: this.body, bodyB: hook, stiffness: 0.005 })\r\n        constraint.length = constraint.length / 2\r\n\r\n        World.add(world, [this.body, hook, constraint])\r\n\r\n        let fire = setTimeout(() => {\r\n            Body.setStatic(this.body, false)\r\n        }, 1000)\r\n\r\n        let removeHookAndConstraint = setTimeout(() => {\r\n            World.remove(world, [hook, constraint])\r\n        }, 1150)\r\n\r\n        let fade = setTimeout(() => {\r\n            this.remove()\r\n        }, 4000)\r\n\r\n        let timeouts = []\r\n        timeouts.push(fire, removeHookAndConstraint, fade)\r\n\r\n        this.remove = () => {\r\n            timeouts.forEach((key) => clearTimeout(key))\r\n            for (let i = container.length - 1; i >= 0; i--) {\r\n                if (container[i].body.id === this.body.id) {\r\n                    container.splice(i, 1)\r\n                }\r\n            }\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport default TargetedBullet\r\n","import React from 'react'\r\nimport Enemy from '../common/Enemy';\r\nimport SphereBarrier from '../common/SphereBarrier'\r\nimport Scene from '../common/Scene'\r\nimport Rectangle from '../common/Rectangle'\r\nimport Background from \"../assets/svg/Background\"\r\nimport Bullet from \"../common/Bullet\"\r\nimport BouncerBullet from \"../common/BouncerBullet\"\r\nimport CoordinatedHomingBullet from \"../common/CoordinatedHomingBullet\"\r\nimport TargetedBullet from '../common/TargetedBullet'\r\n\r\n\r\nclass Scene1 extends Scene {\r\n    constructor() {\r\n        super()\r\n        this.enemy = new Enemy(0, -350, 50, 10, this.world)\r\n        this.enemies.push(this.enemy)\r\n\r\n        this.outerBarrier = new SphereBarrier(0, -350, 80, 250, this.world)\r\n        this.barriers.push(this.outerBarrier)\r\n\r\n        this.player.body.label = \"player\"\r\n\r\n        this.firstBarrageTimeout = setTimeout(() => this.firstBarrage(), 3000)\r\n        this.secondBarrageTimeout = setTimeout(() => this.secondBarrage(), 17000)\r\n        this.thirdBarrageTimeout = setTimeout(() => this.thirdBarrage(), 32000)\r\n        this.fourthBarrageTimeout = setTimeout(() => this.fourthBarrage(), 50000)\r\n        this.theEndTimeout = setTimeout(() => this.theEnd = true, 62000)\r\n        this.endTimeout = setTimeout(() => this.end = new Rectangle(0, 0, 2000, 1000, { isStatic: true, isSensor: true }, this.world), 65150)\r\n\r\n        this.timeouts.push(this.firstBarrageTimeout, this.secondBarrageTimeout, this.thirdBarrageTimeout, this.fourthBarrageTimeout, this.theEndTimeout, this.endTimeout)\r\n\r\n    }\r\n\r\n    thirdBarrage = () => {\r\n        this.bouncerCluster(850, -350)\r\n        let secondCluster = setTimeout(() => this.bouncerCluster(-850, -350), 4000)\r\n        let thirdCluster = setTimeout(() => this.bouncerCluster(850, -350), 8000)\r\n        let fourthCluster = setTimeout(() => this.bouncerCluster(-850, -350), 12000)\r\n        this.timeouts.push(secondCluster, thirdCluster, fourthCluster)\r\n    }\r\n\r\n    bouncerCluster = (originX, originY, ) => {\r\n        for (let i = 0; i < 4; i++) {\r\n            setTimeout(() => {\r\n                let bullet = new BouncerBullet(originX, originY, 50, this.player, this.world, this.bullets)\r\n                bullet.body.label = \"bouncer\"\r\n                this.bullets.push(bullet)\r\n            }, i * 500)\r\n        }\r\n    }\r\n\r\n    firstBarrage = () => {\r\n        this.wave(-1000, 0, 1)\r\n        let secondWave = setTimeout(() => this.wave(1000, 0, -1), 3000)\r\n        let thirdWave = setTimeout(() => this.wave(-1000, -200, 1), 6000)\r\n        let fourthWave = setTimeout(() => this.wave(1000, -200, -1), 9000)\r\n        this.timeouts.push(secondWave, thirdWave, fourthWave)\r\n    }\r\n\r\n    wave = (originX, originY, waveDirection) => {\r\n        for (let i = 0; i < 100; i++) {\r\n            setTimeout(() => {\r\n                let bullet = new Bullet(originX + i * 25 * waveDirection, originY + i * Math.sin(i * Math.PI / 4 * -1 + 0.5), 5, this.world, this.bullets)\r\n                this.bullets.push(bullet)\r\n            }, 25 * i)\r\n        }\r\n    }\r\n\r\n\r\n    secondBarrage = () => {\r\n        this.surround(400)\r\n        let secondSurround = setTimeout(() => this.surround(350), 3000)\r\n        let thirdSurround = setTimeout(() => this.surround(300), 6000)\r\n        let fourthSurround = setTimeout(() => this.surround(250), 9000)\r\n        this.timeouts.push(secondSurround, thirdSurround, fourthSurround)\r\n    }\r\n\r\n    surround = (radius) => {\r\n        let targetTime = 1000\r\n        let r = radius\r\n        let step = 2 * Math.PI / 50\r\n        let counter = 0\r\n        let asyncCounter = 0\r\n        let { x: originX, y: originY } = this.player.body.position\r\n\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            counter++\r\n            let bulletTimeout = setTimeout(() => {\r\n                asyncCounter++\r\n                let bullet = new CoordinatedHomingBullet(r * Math.cos(theta) + originX, originX, -r * Math.sin(theta) + originY, originY, 5, this.player, this.world, this.bullets, targetTime - 10 * asyncCounter)\r\n                this.bullets.push(bullet)\r\n            }, 10 * counter)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n    }\r\n\r\n\r\n    fourthBarrage = () => {\r\n        this.cascade(-1100, -350, -1100, 450, 1)\r\n        let secondCascade = setTimeout(() => this.cascade(1100, -350, 1100, 450, -1), 2000)\r\n        let thirdCascade = setTimeout(() => this.cascade(-1100, -350, -1100, 450, 1), 4000)\r\n        this.timeouts.push(secondCascade, thirdCascade)\r\n    }\r\n\r\n    cascade = (originX, originY, targetX, targetY, waveDirection) => {\r\n        this.drop(originX, originY, targetX, targetY, waveDirection)\r\n        let secondDrop = setTimeout(() => this.drop(originX - 100, originY - 50, targetX - 100, targetY, waveDirection), 250)\r\n        let thirdDrop = setTimeout(() => this.drop(originX, originY - 100, targetX, targetY, waveDirection), 500)\r\n        this.timeouts.push(secondDrop, thirdDrop)\r\n    }\r\n    drop = (originX, originY, targetX, targetY, waveDirection) => {\r\n        for (let i = 0; i < 11; i++) {\r\n            let bulletTimeout = setTimeout(() => {\r\n                let bullet = new TargetedBullet(originX + 2000 / 10 * i * waveDirection, targetX + 2000 / 10 * i * waveDirection, originY, targetY, 40, this.world, this.bullets)\r\n                bullet.body.label = \"bigBullet\"\r\n                this.bullets.push(bullet)\r\n            }, 25 * i)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment >\r\n                <Background />\r\n                {this.renderScene()}\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scene1\r\n\r\n","import React from 'react'\r\nimport PlayerSVG from '../assets/svg/PlayerSVG'\r\nlet Victory = () => {\r\n    return (\r\n        <React.Fragment>\r\n    <text fill=\"white\" fontSize=\"32\" alignmentBaseline=\"central\" textAnchor=\"middle\">Victory!!!</text>\r\n    {PlayerSVG(-15, -115, 30, 30)}\r\n    <rect fill=\"white\" height=\"100%\" width=\"100%\" x=\"-50%\" y=\"-50%\" className=\"disappear\" pointerEvents=\"none\" ></rect>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Victory","import React from 'react';\r\nimport Start from './scenes/Start'\r\nimport Scene1 from \"./scenes/Scene1\"\r\nimport Victory from \"./scenes/Victory\"\r\nimport \"./assets/css/app.css\"\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentScene: 'start',\r\n      playMode: \"keyboard\",\r\n    }\r\n\r\n  }\r\n\r\n  keyboard = () => {\r\n    this.setState({\r\n      playMode: \"keyboard\",\r\n      currentScene: \"scene1\"\r\n    })\r\n  }\r\n\r\n  touchscreen = () => {\r\n    this.setState({\r\n      playMode: \"touchscreen\",\r\n      currentScene: 'scene1'\r\n    })\r\n  }\r\n\r\n  restart = () => {\r\n    this.setState({\r\n      currentScene: \"start\"\r\n    })\r\n  }\r\n  victory = () => {\r\n    this.setState({\r\n      currentScene: 'victory'\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"svg-container\" >\r\n        <svg viewBox=\"-1000 -500 2000 1000\" preserveAspectRatio=\"xMidYMid meet\">\r\n\r\n          <rect\r\n            fill=\"black\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            x=\"-1000\"\r\n            y=\"-500\"\r\n          />\r\n          {this.state.currentScene === \"start\" && <Start keyboard={this.keyboard} touchscreen={this.touchscreen} />}\r\n          {this.state.currentScene === \"scene1\" && <Scene1 playMode={this.state.playMode} victory={this.victory} restart={this.restart}/>}\r\n          {this.state.currentScene === \"victory\" && <Victory />}\r\n          <rect\r\n            fill=\"transparent\"\r\n            stroke=\"blue\"\r\n            width=\"2100\"\r\n            height=\"1150\"\r\n            x=\"-1050\"\r\n            y=\"-550\"\r\n            strokeWidth=\"100\"\r\n            pointerEvents=\"none\" />\r\n\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
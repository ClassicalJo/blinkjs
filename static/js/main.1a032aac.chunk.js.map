{"version":3,"sources":["assets/images/keyboard.svg","assets/images/touchscreen.svg","assets/svg/Viewbox.js","scenes/Controller.js","assets/svg/PlayerSVG.js","scenes/Start.js","common/TargetingSystem.js","assets/svg/EnemySVG.js","scenes/Select.js","common/Enemy.js","common/SphereBarrier.js","common/Bodies.js","common/PlayerBullet.js","common/Frame.js","scenes/Death.js","common/CollisionEvents.js","assets/svg/BulletsSVG.js","assets/svg/Background.js","assets/svg/Touchscreen.js","common/EnemyBullets.js","common/Scene.js","scenes/Scene1.js","scenes/Scene2.js","scenes/Victory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Viewbox","props","zid","viewBox","preserveAspectRatio","id","width","height","x","y","fill","children","mask","pointerEvents","Controller","stroke","onClick","keyboard","xlinkHref","Keyboard","fontFamily","textAnchor","onTouchStart","touchscreen","Touchpad","PlayerSVG","w","h","path","leftWing","rightWing","d","className","Start","transform","fontSize","alignmentBaseline","cursor","start","controller","getSlowRatio","currentPosition","targetPosition","originPosition","Math","abs","getTheta","targetX","targetY","theta","atan2","PI","Target","coordinates","targetRadius","cos","sin","getTargetVelocity","bulletSpeed","getTargetDiminishingVelocity","origin","orbit","satelliteX","satelliteY","radius","speed","sakura","cx","cy","r","nul","vida","EnemySVG","coreColor","key","blood","satellite","Select","this","enemySelected","select","React","PureComponent","Enemy","hp","world","body","Bodies","circle","isSensor","maxHp","label","dead","World","add","remove","wait","clearTimeout","Satellite","SphereBarrier","isStatic","danger","ceil","Circle","options","Rectangle","rectangle","PlayerBullet","playerBullets","Body","setVelocity","checkIfIsOffScreen","setInterval","isOffScreen","position","clearInterval","i","length","splice","Frame","ground","ceiling","leftWall","rightWall","walls","Death","componentDidMount","cycle","updateCycle","loop","requestAnimationFrame","setState","prevState","Object","assign","particles","componentWillUnmount","cancelAnimationFrame","explosion","state","showPlayer","pause","engine","Engine","create","runner","Runner","gravity","step","setTimeout","particle","push","Fragment","map","indexOf","restart","Component","removeBullet","pair","collisionEvents","player","Events","on","event","pairs","bodyA","bodyB","BulletsSVG","bouncer","circleRadius","filter","bullet","strokeWidth","bigBullet","surroundBullet","laser","rotate","angle","aimLaser","Background","stars","random","Touchscreen","mountJoystick","window","addEventListener","removeEventListener","manager","get","destroy","nipplejs","zone","document","getElementById","top","svgHeight","left","offset","svgWidth","mode","size","evt","data","move","degree","querySelector","style","cssText","buttonA","blink","buttonB","shoot","onTouchMove","Projectile","intervals","timeout","callback","delay","timeStamp","Number","timer","intervalName","Bullet","container","BouncerBullet","restitution","target","AimedBullet","HomingBullet","playerPosition","redirect","redirection","newTarget","forEach","Laser","AimLaser","Scene","playMode","handleKeyDown","handleKeyUp","run","stop","timeouts","next","schedule","value","togglePause","movement","direction","playerMovementMap","barriers","enemies","victory","bullets","bouncers","String","message","handleTouch","e","blinkOnCooldown","finalX","finalY","blinkTimeout","blinkDistance","setPosition","bulletOnCooldown","bulletCD","setMessage","string","array","split","moveBody","checkIfInArea","errorRange","theStart","theEnd","final","enemy","finalComposite","Composite","scale","renderScene","stdDeviation","name","round","index","innerHeight","innerWidth","Scene1","intro","outerBarrier","showIntro","firstBarrage","wave","originX","originY","waveDirection","secondBarrage","surround","counter","asyncCounter","thirdBarrage","bouncerCluster","fourthBarrage","cascade","scheduleStart","Scene2","fireBarrage","bloodFire","enableOrbit","phobos","deimos","rotateBlood","horizontalClean","verticalClean","horizontalSweep","pStartY","aim","sweep","translate","verticalSweep","pStartX","finale","setOrbitSpeed","waveBarrage","bulletTimeout","deploy","aimAndRotate","thetaPhobos","thetaDeimos","aimPhobos","aimDeimos","fearLaser","terrorLaser","totalAngle","targetSpeed","totalTime","orbitSpeedPower","orbitMaxSpeed","bloodyCheck","Victory","App","resize","selectEnemy","game","currentScene","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a032aac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/keyboard.7938c350.svg\";","module.exports = __webpack_public_path__ + \"static/media/touchscreen.4ab11d22.svg\";","import React from 'react'\r\n\r\nlet Viewbox = (props) => {\r\n    return (\r\n        <svg zid=\"main-svg\" viewBox=\"-1000 -562.5 2000 1125\" preserveAspectRatio=\"xMidYMid meet\">\r\n            <mask id=\"transparent\">\r\n                <rect width=\"5000\" height=\"5000\" x=\"-2500\" y=\"-2500\" fill=\"white\"/>\r\n                <rect width=\"2000\" height=\"1125\" x=\"-1000\" y=\"-562.5\" fill=\"black\" />\r\n\r\n            </mask>\r\n            <rect\r\n                fill=\"black\"\r\n                width=\"5000\"\r\n                height=\"5000\"\r\n                x=\"-2500\"\r\n                y=\"-2500\" />\r\n            {props.children}\r\n            <rect\r\n                fill=\"black\"\r\n                width=\"5000\"\r\n                height=\"5000\"\r\n                x=\"-2500\"\r\n                y=\"-2500\"\r\n                mask=\"url(#transparent)\"\r\n                pointerEvents=\"none\" />\r\n        </svg>\r\n\r\n    )\r\n}\r\nexport default Viewbox\r\n","import React from 'react'\r\nimport Viewbox from \"../assets/svg/Viewbox\"\r\nimport Keyboard from '../assets/images/keyboard.svg'\r\nimport Touchpad from '../assets/images/touchscreen.svg'\r\n\r\nlet Controller = (props) => {\r\n    return (\r\n        <Viewbox>\r\n            <rect fill=\"rgba(255,255,255,0.2)\" x={-250 + 420 / -2} y={-460} width={420} height={920} />\r\n            <rect stroke=\"rgba(255,255,255,0.2)\" fill=\"black\" x={-250 + 400 / -2} y={-450} width={400} height={900} onClick={props.keyboard} />\r\n            <image width=\"250\" x={-250 + 250 / -2} y={-250 + 250 / -2} xlinkHref={Keyboard} pointerEvents=\"none\" />\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={-250} y={100} fill=\"white\" pointerEvents=\"none\"> WASD: Movement</text>\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={-250} y={150} fill=\"white\" pointerEvents=\"none\">K: Blink</text>\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={-250} y={200} fill=\"white\" pointerEvents=\"none\">L: Fire</text>\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={-250} y={250} fill=\"white\" pointerEvents=\"none\">P: Pause</text>\r\n\r\n\r\n            <rect fill=\"rgba(255,255,255,0.2)\" x={250 + 420 / -2} y={-460} width={420} height={920} />\r\n            <rect stroke=\"rgba(255,255,255,0.2)\" x={250 + 400 / -2} y={-450} width={400} height={900} onTouchStart={props.touchscreen} />\r\n            <image width=\"250\" x={250 + 250 / -2} y={-250 + 250 / -2} xlinkHref={Touchpad} />\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={250} y={100} fill=\"white\" pointerEvents=\"none\"> LeftStick: Movement</text>\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={250} y={150} fill=\"white\" pointerEvents=\"none\"> A: Blink</text>\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={250} y={200} fill=\"white\" pointerEvents=\"none\"> B: Fire</text>\r\n            <text fontFamily=\"Arial Black\" textAnchor='middle' x={250} y={250} fill=\"white\" pointerEvents=\"none\"> ||: Pause</text>\r\n        </Viewbox>\r\n    )\r\n\r\n}\r\nexport default Controller\r\n","import React from 'react'\r\n\r\nlet PlayerSVG = (x, y, w, h) => {\r\n    //let path = `M ${x + w / 2} ${y - h * 2} L ${x + w / 2 - w/2} ${y - h/4} H ${x + w / 2 + w/2} Z`;\r\n    let path = `M ${x + w / 2} ${y - h * 2} L ${x} ${y - h} V ${y - h / 4} H ${x + w} V${y - h} Z`;\r\n    //let leftBooster = `M ${x} ${y + h} L ${x - w / 4} ${y + h * 2} H ${x + w / 4}Z`\r\n    //let rightBooster = `M ${x + w} ${y + h} L ${x + w * 3 / 4} ${y + h * 2} H ${x + w * 5 / 4}Z`\r\n    let leftWing = `M ${x - w / 4} ${y - h / 2} V ${y + h * 2} H ${x - w * 5 / 4} Z`\r\n    let rightWing = `M ${x + w * 5 / 4} ${y - h / 2} V ${y + h * 2} H ${x + w * 9 / 4} Z`\r\n    return (\r\n        <g>\r\n            <path d={path} fill=\"white\" />\r\n            {/* <path d={leftBooster} fill=\"white\" />\r\n            <path d={rightBooster} fill=\"white\" /> */}\r\n            <path d={leftWing} fill=\"white\" />\r\n            <path d={rightWing} fill=\"white\" />\r\n            <rect\r\n                id=\"player\"\r\n                className=\"playerGlow\"\r\n                x={x}\r\n                y={y}\r\n                width={w}\r\n                height={h}\r\n            />\r\n        </g>\r\n    )\r\n}\r\nexport default PlayerSVG\r\n","import React from 'react'\r\nimport Viewbox from \"../assets/svg/Viewbox\"\r\nimport PlayerSVG from \"../assets/svg/PlayerSVG\"\r\n\r\nlet Start = (props) => {\r\n    return (\r\n        <Viewbox>\r\n            <g transform=\"rotate(90, -262.5, -12.5)\">{PlayerSVG(-250 - 112.5, -12.5, 25, 25)}</g>\r\n            <text y={-100}fill=\"white\" fontFamily=\"Arial Black\" fontSize=\"80\" textAnchor=\"middle\" alignmentBaseline=\"central\">BlinkJS</text>\r\n            <rect x={-75} y={225 -40} width=\"150\" height=\"80\" fill=\"rgba(255,255,255,0.1)\" cursor=\"pointer\" onClick={props.start}/>\r\n            <text y=\"225\" fill=\"white\" fontFamily=\"Arial Black\" fontSize=\"40\" textAnchor=\"middle\" alignmentBaseline=\"central\" pointerEvents=\"none\" >Start</text>\r\n            <rect x={-200} y={375 -40} width=\"400\" height=\"80\" fill=\"rgba(255,255,255,0.1)\" cursor=\"pointer\" onClick={props.controller}/>\r\n            <text y=\"375\" fill=\"white\" fontFamily=\"Arial Black\" fontSize=\"40\" textAnchor=\"middle\" alignmentBaseline=\"central\" pointerEvents=\"none\">Select controller</text>\r\n        </Viewbox>\r\n    )\r\n}\r\n\r\n\r\nexport default Start\r\n","let getSlowRatio = (currentPosition, targetPosition, originPosition) => {\r\n    if (currentPosition === 0 && targetPosition === 0) return 1\r\n    else if (originPosition === 0 && targetPosition === 0) return 1\r\n    else return Math.abs(targetPosition - currentPosition) / Math.abs(targetPosition - originPosition)\r\n}\r\nlet getTheta = (x, y, targetX, targetY) => {\r\n    let theta = Math.atan2(targetY - y, targetX - x)\r\n    theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n    return theta * Math.PI / 180\r\n}\r\n\r\nlet Target = {\r\n    coordinates: (x, y, targetX, targetY, targetRadius) => {\r\n        let theta = getTheta(x, y, targetX, targetY)\r\n        let finalX = x + targetRadius * Math.cos(theta)\r\n        let finalY = y + targetRadius * Math.sin(theta)\r\n        return { x: finalX, y: finalY }\r\n    },\r\n\r\n    getTargetVelocity: (x, y, targetX, targetY, bulletSpeed) => {\r\n        let theta = getTheta(x, y, targetX, targetY)\r\n        return { x: bulletSpeed * Math.cos(theta), y: bulletSpeed * Math.sin(theta) }\r\n    },\r\n\r\n    getTheta: (x, y, targetX, targetY) => {\r\n        let theta = Math.atan2(targetY - y, targetX - x)\r\n        theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n        return theta * Math.PI / 180\r\n    },\r\n\r\n    getTargetDiminishingVelocity: (x, y, targetX, targetY, bulletSpeed, origin) => {\r\n        let theta = getTheta(x, y, targetX, targetY)\r\n        return { x: bulletSpeed * getSlowRatio(x, targetX, origin.x) * Math.cos(theta), y: bulletSpeed * getSlowRatio(y, targetY, origin.y) * Math.sin(theta) }\r\n    },\r\n\r\n    orbit: (x, y, satelliteX, satelliteY, radius, speed) => {\r\n        let theta = Math.atan2(satelliteY - y, satelliteX - x)\r\n        theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n        theta += speed\r\n        theta = theta * Math.PI / 180\r\n\r\n        let finalX = x + radius * Math.cos(theta)\r\n        let finalY = y + radius * Math.sin(theta)\r\n        return { x: finalX, y: finalY }\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Target\r\n","import React from 'react'\r\nimport Target from '../../common/TargetingSystem'\r\nlet sakura = {\r\n    wing: (cx, cy, r) => {\r\n        return (\r\n            `\r\n            M${cx} ${cy + 2 * r}\r\n        \r\n            \r\n            L${cx + r / 8} ${cy} \r\n            L${cx} ${cy - 2 * r} \r\n            L${cx - r / 8} ${cy} \r\n            \r\n            Z`\r\n        )\r\n    },\r\n\r\n}\r\n\r\nlet nul = {\r\n    delta: (cx, cy, r) => {\r\n        return (\r\n            `\r\n            M${cx + r * Math.cos(360 * Math.PI / 180)} ${cy + (2 * r) * Math.sin(300 * Math.PI / 180)}            \r\n            L${cx + (2 * r) * Math.cos(60 * Math.PI / 180)} ${cy + (2 * r) * Math.sin(60 * Math.PI / 180)}\r\n            L${cx + (2 * r) * Math.cos(180 * Math.PI / 180)} ${cy + (2 * r) * Math.sin(180 * Math.PI / 180)}\r\n            Z`\r\n        )\r\n    }\r\n}\r\n\r\nlet vida = {\r\n    cross: (cx, cy, r) => {\r\n        return (\r\n            `\r\n            M${cx + r / 2 * Math.cos(225 * Math.PI / 180)} ${cy + r / 2 * Math.sin(225 * Math.PI / 180)}\r\n            L${cx + r * 2 * Math.cos(270 * Math.PI / 180)} ${cy + r * 2 * Math.sin(270 * Math.PI / 180)}\r\n            L${cx + r / 2 * Math.cos(325 * Math.PI / 180)} ${cy + r / 2 * Math.sin(325 * Math.PI / 180)}\r\n            L${cx + r * 2 * Math.cos(2 * Math.PI)} ${cy + r * 2 * Math.sin(2 * Math.PI)}\r\n            L${cx + r / 2 * Math.cos(45 * Math.PI / 180)} ${cy + r / 2 * Math.sin(45 * Math.PI / 180)}\r\n            L${cx + r * 2 * Math.cos(90 * Math.PI / 180)} ${cy + r * 2 * Math.sin(90 * Math.PI / 180)}\r\n            L${cx + r / 2 * Math.cos(135 * Math.PI / 180)} ${cy + r / 2 * Math.sin(135 * Math.PI / 180)}\r\n            L${cx + r * 2 * Math.cos(180 * Math.PI / 180)} ${cy + r * 2 * Math.sin(180 * Math.PI / 180)}\r\n\r\n            Z\r\n            `\r\n        )\r\n    }\r\n}\r\n\r\nlet EnemySVG = {\r\n    sakura: (cx, cy, r, coreColor, className) => {\r\n        return (\r\n            <g key=\"0\">\r\n\r\n                <circle\r\n                    key=\"3\"\r\n                    className={className}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={r}\r\n                    fill={coreColor}\r\n                />\r\n                <path key=\"1\" d={sakura.wing(cx, cy, r)} fill=\"white\" />\r\n            </g>\r\n        )\r\n    },\r\n    blood: (cx, cy, r, coreColor, className) => {\r\n        return (\r\n            <g key=\"4\">\r\n                <circle\r\n                    key=\"5\"\r\n                    className={className}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={r}\r\n                    fill={coreColor}\r\n                />\r\n            </g>\r\n        )\r\n    },\r\n    satellite: (cx, cy, r, coreColor, className) => {\r\n        return (\r\n            <g key={cx + cy + 6}>\r\n                <circle\r\n                    key=\"7\"\r\n                    className={className}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={r}\r\n                    fill={coreColor}\r\n                />\r\n            </g>\r\n        )\r\n    },\r\n    nul: (cx, cy, r, coreColor, className) => {\r\n        return (\r\n            <g key={cx + cy + 7}>\r\n                <path key=\"9\" d={nul.delta(cx, cy, r)} fill=\"purple\"></path>\r\n                <circle\r\n                    key=\"8\"\r\n                    className={className}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={r}\r\n                    fill={coreColor}\r\n\r\n                />\r\n            </g>\r\n        )\r\n    },\r\n    vida: (cx, cy, r, coreColor, className) => {\r\n        return (\r\n            <g key={cx + cy + 7}>\r\n                <path key=\"9\" d={vida.cross(cx, cy, r)} fill=\"#ccc3b4\"></path>\r\n                <circle\r\n                    key=\"8\"\r\n                    className={className}\r\n                    cx={cx}\r\n                    cy={cy}\r\n                    r={r}\r\n                    fill={coreColor}\r\n\r\n                />\r\n            </g>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnemySVG\r\n","import React from 'react'\r\nimport Viewbox from '../assets/svg/Viewbox'\r\nimport EnemySVG from '../assets/svg/EnemySVG'\r\n\r\nclass Select extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.enemySelected) {\r\n            this.props.select(this.props.enemySelected)\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Viewbox>\r\n                <text y=\"-500\" fontFamily=\"Arial Black\" fill=\"white\" fontSize=\"40\" textAnchor=\"middle\" alignmentBaseline=\"central\">Next objective:</text>\r\n                \r\n                {EnemySVG.blood(225, -225, 50, \"red\", \"\")}\r\n                {EnemySVG.satellite(225, -300, 5, \"red\", \"\")}\r\n                {EnemySVG.satellite(225, -150, 5, \"red\", \"\")}\r\n                <rect x={225 + 400 / -2} y={-225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"transparent\" onClick={() => this.props.select(\"scene2\")}></rect>\r\n                {(!this.props.blood) && <rect x={225 + 400 / -2} y={-225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"rgba(0,0,0,0.85)\" ></rect>}\r\n\r\n                {EnemySVG.sakura(-225, -225, 50, \"pink\")}\r\n                <rect x={-225 + 400 / -2} y={-225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"transparent\" onClick={() => this.props.select(\"scene1\")}></rect>\r\n                {(!this.props.sakura) && <rect x={-225 + 400 / -2} y={-225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"rgba(0,0,0,0.85)\" ></rect>}\r\n\r\n                {EnemySVG.nul(-225, 225, 50, \"indigo\")}\r\n                <rect x={-225 + 400 / -2} y={225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"transparent\"></rect>\r\n                {(!this.props.nul) && <rect x={-225 + 400 / -2} y={225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"rgba(0,0,0,0.85)\" ></rect>}\r\n\r\n                {EnemySVG.vida(225,225,50, \"#76c34e\")}\r\n                <rect x={225 + 400 / -2} y={225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"transparent\"></rect>\r\n                {(!this.props.vida) && <rect x={225 + 400 / -2} y={225 + 400 / -2} width=\"400\" height=\"400\" stroke=\"white\" fill=\"rgba(0,0,0,0.85)\" ></rect>}\r\n\r\n            </Viewbox>\r\n        )\r\n    }\r\n}\r\nexport default Select\r\n\r\n//Recibir informacion de que enemigos estan disponibles\r\n//son 4 bosses\r\n//Point and click\r\n//hacer click cambia el SceneSelected en app\r\n//si ya hay un scene selected, directamente pasa al juego\r\n\r\n","import { Body, Bodies, World } from 'matter-js'\r\nimport Target from \"../common/TargetingSystem\"\r\n\r\nexport class Enemy {\r\n    constructor(x, y, r, hp, world) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.coreColor = \"lightpink\"\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.hp = hp\r\n        this.body.maxHp = hp\r\n        \r\n        this.body.label = \"enemy\"\r\n        this.dead = false\r\n\r\n        World.add(world, this.body)\r\n\r\n        \r\n\r\n        this.remove = () => {\r\n            if (this.wait) clearTimeout(this.wait)\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport class Satellite {\r\n    constructor(x, y, r, world) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.coreColor = \"lightpink\"\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"wall\"\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            if (this.wait) clearTimeout(this.wait)\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n","import { Bodies, World } from \"matter-js\"\r\n\r\nclass SphereBarrier {\r\n    constructor(x, y, r, maxHp, world){\r\n        this.body = Bodies.circle(x, y, r, { isStatic: true, isSensor: true})\r\n        this.body.label = \"barrier\"\r\n        this.body.maxHp = maxHp\r\n        this.body.hp = maxHp\r\n        this.radius = r\r\n        this.danger = Math.ceil(this.body.maxHp / 4)\r\n        this.className = \"barrier\"    \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }  \r\n}\r\nexport default SphereBarrier\r\n","import { Bodies, World } from 'matter-js'\r\n\r\nexport class Circle {\r\n    constructor(x, y, r, options, world) {\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.radius = r\r\n        \r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n\r\nexport class Rectangle {\r\n    constructor(x, y, w, h, options, world) {\r\n        this.body = Bodies.rectangle(x, y, w, h, options)\r\n        this.width = w\r\n        this.height = h\r\n\r\n        World.add(world, this.body)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n        }\r\n    }\r\n}\r\n","import { Bodies, World, Body } from 'matter-js'\r\n\r\nclass PlayerBullet {\r\n    constructor(x, y, r, world, playerBullets) {\r\n        let options = {\r\n            isSensor: true,\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n        this.body.label = \"playerBullet\"\r\n        this.radius = r\r\n\r\n        Body.setVelocity(this.body, { x: 0, y: -15 })\r\n        World.add(world, this.body)\r\n\r\n        this.checkIfIsOffScreen = setInterval(() => {\r\n            if (this.isOffScreen(this.body.position.x, this.body.position.y)) {\r\n                this.remove()\r\n            }\r\n        }, 16)\r\n\r\n        this.isOffScreen = (x, y) => {\r\n            return (x > 1000 || x < -1000 || y > 500 || y < -500)\r\n        }\r\n\r\n        this.remove = () => {\r\n            clearInterval(this.checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n                if (playerBullets[i].body.id === this.body.id) playerBullets.splice(i, 1)\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default PlayerBullet\r\n","import { Rectangle } from \"./Bodies\"\r\nclass Frame {\r\n    constructor(world) {\r\n        this.ground = new Rectangle(0, 562.5, 2000, 100, { isStatic: true }, world)\r\n        this.ground.body.label = \"wall\"\r\n\r\n        this.ceiling = new Rectangle(0, -562.5, 2000, 100, { isStatic: true }, world)\r\n        this.ceiling.body.label = \"wall\"\r\n\r\n        this.leftWall = new Rectangle(-1000, 0, 100, 1075, { isStatic: true }, world)\r\n        this.leftWall.body.label = \"wall\"\r\n\r\n        this.rightWall = new Rectangle(1000, 0, 100, 1075, { isStatic: true }, world)\r\n        this.rightWall.body.label = \"wall\"\r\n\r\n        this.walls = [this.ground, this.ceiling, this.leftWall, this.rightWall]\r\n    }\r\n}\r\n\r\nexport default Frame\r\n","import React from 'react'\r\nimport { Engine, Runner } from 'matter-js'\r\nimport { Circle } from '../common/Bodies'\r\n\r\nclass Death extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPlayer: true,\r\n            particles: []\r\n        }\r\n        this.pause = false\r\n        this.engine = Engine.create()\r\n        this.runner = Runner.create()\r\n        this.world = this.engine.world\r\n        this.world.gravity.y = 0\r\n        Runner.start(this.runner, this.engine)\r\n\r\n        this.particles = []\r\n\r\n        let r = 1\r\n        let step = 2 * Math.PI / 20\r\n\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            this.explosion = setTimeout(() => {\r\n                this.setState({ showPlayer: false })\r\n                let particle = new Circle(r * Math.cos(theta) + this.props.x, -r * Math.sin(theta) + this.props.y, 10, {}, this.world)\r\n                this.particles.push(particle)\r\n            }, 1250)\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cycle()\r\n    }\r\n\r\n    cycle = () => {\r\n        this.updateCycle();\r\n        this.loop = requestAnimationFrame(() => this.cycle())\r\n    }\r\n\r\n    updateCycle = () => {\r\n        this.setState((prevState) => {\r\n            let particles = Object.assign({}, prevState.particles)\r\n            particles = this.particles\r\n            return { particles }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        cancelAnimationFrame(this.loop)\r\n        clearTimeout(this.explosion)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showPlayer === true &&\r\n                    <rect\r\n                        x={this.props.x - this.props.width / 2}\r\n                        y={this.props.y - this.props.height / 2}\r\n                        width={this.props.width}\r\n                        height={this.props.height}\r\n                        fill=\"pink\" />}\r\n                {this.state.particles.map((key) => <circle\r\n                    key={this.state.particles.indexOf(key)}\r\n                    className=\"playerGlow disappear\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.radius}\r\n                    fill=\"pink\" />\r\n                )}\r\n                {this.state.showPlayer === false &&\r\n                    <g>\r\n                        <circle\r\n                            className=\"appear\"\r\n                            r=\"250\"\r\n                            x=\"0\"\r\n                            y=\"0\"\r\n                            fill=\"rgba(255,255,255,0.2)\"\r\n                            onClick={this.props.restart} />\r\n                        <text\r\n                            className=\"appear\"\r\n                            fill=\"white\"\r\n                            textAnchor=\"middle\"\r\n                            fontFamily=\"Arial Black\"\r\n                            fontSize=\"40\"\r\n                            alignmentBaseline=\"central\"\r\n                            pointerEvents=\"none\">\r\n                            Try again\r\n                        </text>\r\n                    </g>}\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default Death\r\n","import { Events } from \"matter-js\"\r\n\r\n\r\nlet collisionEvents = (player, engine, playerBullets) => {\r\n    Events.on(engine, 'collisionStart', (event) => {\r\n        for (let i = 0; i < event.pairs.length; i++) {\r\n            let pair = event.pairs[i]\r\n\r\n            if (pair.bodyA.label === \"player\" && pair.bodyB.label !== \"wall\") {\r\n                if (pair.bodyB.label !== \"playerBullet\") player.dead = true\r\n            }\r\n            else if (pair.bodyB.label === \"player\" && pair.bodyA.label !== \"wall\") {\r\n                if (pair.bodyA.label !== \"playerBullet\") player.dead = true\r\n            }\r\n\r\n            if (pair.bodyA.label === \"playerBullet\") {\r\n                if (pair.bodyB.label === \"barrier\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n                else if (pair.bodyB.label === \"enemy\") {\r\n                    pair.bodyB.hp--\r\n                    removeBullet(pair.bodyA, playerBullets)\r\n                }\r\n            }\r\n\r\n            else if (pair.bodyB.label === \"playerBullet\") {\r\n                if (pair.bodyA.label === \"barrier\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n                else if (pair.bodyA.label === \"enemy\") {\r\n                    pair.bodyA.hp--\r\n                    removeBullet(pair.bodyB, playerBullets)\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nlet removeBullet = (pair, playerBullets) => {\r\n    for (let i = playerBullets.length - 1; i >= 0; i--) {\r\n        if (playerBullets[i].body.id === pair.id) {\r\n            playerBullets[i].remove()\r\n        }\r\n    }\r\n}\r\nexport default collisionEvents\r\n","import React from 'react'\r\nlet BulletsSVG = {\r\n    bouncer: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className={key.className}\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.body.circleRadius}\r\n                    fill=\"#FFFF26\"\r\n                    filter=\"url(#blur)\" />\r\n                <circle\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.body.circleRadius * 3 / 4}\r\n                    fill=\"black\" />\r\n            </g>)\r\n    },\r\n    bullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"bullet\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.body.circleRadius}\r\n                    stroke=\"#FFFF26\"\r\n                    fill=\"lightpink\"\r\n                    strokeWidth=\"1\" />\r\n            </g>\r\n        )\r\n    },\r\n    explosion: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"explosion\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.body.circleRadius}\r\n                    fill={key.coreColor}\r\n                />\r\n            </g>\r\n        )\r\n    },\r\n    bigBullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className={key.className}\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.body.circleRadius}\r\n                    stroke=\"#C24CF6\"\r\n                    fill=\"black\"\r\n                    strokeWidth=\"5\" />\r\n            </g>\r\n        )\r\n    },\r\n    surroundBullet: (key) => {\r\n        return (\r\n            <g key={key.body.id}>\r\n                <circle\r\n                    className=\"bullet\"\r\n                    cx={key.body.position.x}\r\n                    cy={key.body.position.y}\r\n                    r={key.body.circleRadius}\r\n                    stroke=\"#FFFF26\"\r\n                    fill=\"#C24CF6\"\r\n                    strokeWidth=\"1\" />\r\n            </g>\r\n        )\r\n    },\r\n    laser: (key) => {\r\n        let rotate = `rotate(${key.body.angle * 180 / Math.PI} ${key.body.position.x} ${key.body.position.y})`\r\n        return (\r\n            <rect\r\n                //className={key.className}\r\n                key={key.body.id}\r\n                x={key.body.position.x + key.width / -2}\r\n                y={key.body.position.y + key.height / -2}\r\n                height={key.height}\r\n                width={key.width}\r\n                fill=\"red\"\r\n                transform={rotate} />\r\n        )\r\n    },\r\n    aimLaser: (key) => {\r\n        let rotate = `rotate(${key.body.angle * 180 / Math.PI} ${key.body.position.x} ${key.body.position.y})`\r\n        return (\r\n            <rect\r\n                //className={key.className}\r\n                key={key.body.id}\r\n                x={key.body.position.x + key.width / -2}\r\n                y={key.body.position.y + key.height / -2}\r\n                height={key.height}\r\n                width={key.width}\r\n                fill=\"rgba(255,0,0,0.4)\"\r\n                transform={rotate} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default BulletsSVG\r\n","import React from 'react'\r\n\r\nlet Background = () => {\r\n    let stars = [1]\r\n    \r\n\r\n    return (\r\n        <g>\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * 2000) - 1000} y={Math.ceil(Math.random() * 1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n            {stars.map((key) => <rect key={key} x={Math.ceil(Math.random() * -2000) - 1000} y={Math.ceil(Math.random() * -1000) -500} width={Math.ceil(Math.random() * 3)} height={Math.ceil(Math.random() * 3)} fill=\"white\" />)}\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Background\r\n","import React from 'react'\r\nimport nipplejs from \"nipplejs\"\r\n\r\nclass Touchscreen extends React.PureComponent {\r\n    componentDidMount = () => {\r\n        this.mountJoystick()\r\n        window.addEventListener(\"resize\", this.mountJoystick)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener(\"resize\", this.mountJoystick)\r\n    }\r\n\r\n    mountJoystick = () => {\r\n        if (this.manager) {\r\n            let joystick = this.manager.get()\r\n            joystick.destroy()\r\n            this.manager.destroy()\r\n        }\r\n        this.manager = nipplejs.create({\r\n            zone: document.getElementById(\"zone\"),\r\n            position: {\r\n                top: this.props.svgHeight * 7 / 8 + (this.props.svgHeight / -6) + \"px\",\r\n                left: this.props.offset + this.props.svgWidth / 4 + (this.props.svgHeight / -6) + \"px\"\r\n            },\r\n            mode: \"static\",\r\n            size: this.props.svgHeight / 3\r\n\r\n        })\r\n        this.manager.on(\"move\", (evt, data) => {\r\n            this.props.move(data.angle.degree)\r\n        })\r\n\r\n        this.manager.on(\"end\", ()=> {\r\n            this.props.move(-1)\r\n        })\r\n\r\n        document.querySelector(\"#buttonA\").style.cssText = `\r\n            height: ${this.props.svgHeight / 5}px; \r\n            width: ${this.props.svgHeight / 5}px;\r\n            position: absolute; \r\n            top: ${this.props.svgHeight * 3 / 4 + ((this.props.svgHeight / 5) / -2)}px; \r\n            left: ${this.props.offset + this.props.svgWidth * 11 / 16 + ((this.props.svgHeight / 5) / -2)}px; \r\n            border: 3px solid rgba(255,255,255,0.3);\r\n            background-color: transparent;\r\n            border-radius: ${this.props.svgHeight / 5}px`\r\n\r\n        document.querySelector(\"#buttonB\").style.cssText = `\r\n            height: ${this.props.svgHeight / 5}px; \r\n            width: ${this.props.svgHeight / 5}px;\r\n            position: absolute; \r\n            top: ${this.props.svgHeight * 3 / 4 + ((this.props.svgHeight / 5) / -2)}px; \r\n            left: ${this.props.offset + this.props.svgWidth * 13 / 16 + ((this.props.svgHeight / 5) / -2)}px; \r\n            border: 3px solid rgba(255,255,255,0.3);\r\n            background-color: transparent;\r\n            border-radius: ${this.props.svgHeight / 5}px`\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"zone-wrapper\">\r\n                <div id=\"zone\"></div>\r\n                <div id=\"buttonA\" style={this.buttonA} onTouchStart={this.props.blink}></div>\r\n                <div id=\"buttonB\" style={this.buttonB} onTouchStart={this.props.shoot} onTouchMove={this.props.shoot}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Touchscreen\r\n","import { Body, Bodies, World } from \"matter-js\"\r\nimport Target from './TargetingSystem'\r\n\r\nexport class Projectile {\r\n    constructor(world){\r\n        let intervals = []\r\n        this.isOffScreen = (x, y) => { return (x > 1250 || x < -1250 || y > 812.5 || y < -812.5) }\r\n        this.timeout = (callback, delay) => {\r\n            let timeStamp = Number(world.timer)\r\n            \r\n            let intervalName = setInterval(() => {\r\n                if (Math.abs(timeStamp - world.timer) * 1000 >= delay) {\r\n                    callback()\r\n                    clearInterval(intervalName)\r\n                }\r\n            }, 10)\r\n            intervals.push(intervalName)\r\n        }\r\n    }\r\n    \r\n}\r\nexport class Bullet extends Projectile {\r\n    constructor(x, y, r, speed, delay, world, container) {\r\n        super(world);\r\n        let options = {\r\n            isSensor: true,\r\n            label: \"bullet\"\r\n        }\r\n        this.body = Bodies.circle(x, y, r, options)\r\n\r\n        this.timeout(() => Body.setVelocity(this.body, { x: 0, y: speed }), delay)\r\n        this.timeout(() => this.remove(), 5000)\r\n\r\n        let checkIfIsOffScreen = setInterval(() => this.isOffScreen(this.body.position.x, this.body.position.y) ? this.remove() : null, 16)\r\n\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        this.remove = () => {\r\n            clearInterval(checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = container.length - 1; i >= 0; i--) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class BouncerBullet extends Projectile{\r\n    constructor(x, y, targetX, targetY, r, speed, delay, world, container) {\r\n        super(world);\r\n        this.options = {\r\n            restitution: 1,\r\n            label: \"bouncer\",\r\n        }\r\n        this.body = Bodies.circle(x, y, r, this.options)\r\n        let target = Target.getTargetVelocity(x, y, targetX, targetY, speed)\r\n\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n        \r\n        this.timeout(() => Body.setVelocity(this.body, target), delay)\r\n        this.timeout(() => this.remove(), 5000)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n            for (let i = container.length - 1; i >= 0; i--) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class AimedBullet extends Projectile{\r\n    constructor(x, y, targetX, targetY, r, speed, delay, world, container) {\r\n        super(world)\r\n        this.body = Bodies.circle(x, y, r, { isSensor: true, label: \"bullet\" })\r\n\r\n        let target = Target.getTargetVelocity(x, y, targetX, targetY, speed)\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        this.timeout(() => Body.setVelocity(this.body, target), delay)\r\n        this.timeout(() => this.remove(), 4000)\r\n\r\n        this.isOffScreen = (x, y) => { return (x > 1250 || x < -1250 || y > 812.5 || y < -812.5) }\r\n        let checkIfIsOffScreen = setInterval(() => this.isOffScreen(this.body.position.x, this.body.position.y) ? this.remove() : null, 16)\r\n\r\n        this.remove = () => {\r\n            clearInterval(checkIfIsOffScreen)\r\n            World.remove(world, this.body)\r\n            for (let i = container.length - 1; i >= 0; i--) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class HomingBullet extends Projectile{\r\n    constructor(x, y, playerPosition, r, bulletSpeed, delay, world, container) {\r\n        super(world);\r\n        let intervals = []\r\n\r\n        this.body = Bodies.circle(x, y, r, { isSensor: true, label: \"bullet\" })\r\n        this.redirect = false\r\n\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        let redirection = setInterval(() => {\r\n            if (this.redirect) {\r\n                let newTarget = Target.getTargetVelocity(this.body.position.x, this.body.position.y, playerPosition.x, playerPosition.y, bulletSpeed)\r\n                Body.setVelocity(this.body, newTarget)\r\n            }\r\n        }, 16)\r\n\r\n        this.timeout(() => this.redirect = true, delay)\r\n        this.timeout(() => this.redirect = false, delay + 750)\r\n        this.timeout(() => this.remove(), 4000)\r\n\r\n        let checkIfIsOffScreen = setInterval(() => this.isOffScreen(this.body.position.x, this.body.position.y) ? this.remove() : null, 16)\r\n        intervals.push(redirection, checkIfIsOffScreen)\r\n\r\n        this.remove = () => {\r\n            intervals.forEach(key => clearInterval(key))\r\n            World.remove(world, this.body)\r\n            for (let i = 0; i < container.length; i++) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class Laser {\r\n    constructor(x, y, w, h, angle, world, container) {\r\n        this.body = Bodies.rectangle(x + w / 2, y, w, h, { isSensor: true, label: \"laser\" })\r\n        this.height = h\r\n        this.width = w\r\n        Body.rotate(this.body, angle, { x: x, y: y })\r\n        World.add(world, this.body)\r\n        container.push(this)\r\n\r\n        this.rotate = (angle) => Body.rotate(this.body, angle, { x: x, y: y })\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n            for (let i = 0; i < container.length; i++) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n\r\nexport class AimLaser {\r\n    constructor(x, y, w, h, angle, world, container) {\r\n        this.body = Bodies.rectangle(x + w / 2, y, w, h, { isSensor: true, label: \"aimLaser\" })\r\n        this.height = h\r\n        this.width = w\r\n        Body.rotate(this.body, angle, { x: x, y: y })\r\n        container.push(this)\r\n\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n            for (let i = 0; i < container.length; i++) if (container[i].body.id === this.body.id) container.splice(i, 1)\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Body, Runner, Engine, Events, Composite } from 'matter-js'\r\nimport { Rectangle } from '../common/Bodies'\r\nimport PlayerBullet from \"../common/PlayerBullet\"\r\nimport Frame from '../common/Frame'\r\nimport Death from '../scenes/Death'\r\nimport PlayerSVG from '../assets/svg/PlayerSVG';\r\nimport EnemySVG from '../assets/svg/EnemySVG';\r\nimport collisionEvents from '../common/CollisionEvents'\r\nimport BulletsSVG from '../assets/svg/BulletsSVG'\r\nimport Background from '../assets/svg/Background'\r\nimport Touchscreen from \"../assets/svg/Touchscreen\"\r\nimport Viewbox from '../assets/svg/Viewbox'\r\nimport { AimedBullet } from '../common/EnemyBullets'\r\nimport Target from \"../common/TargetingSystem\"\r\n\r\nclass Scene extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            player: null,\r\n            playerBullets: [],\r\n            walls: [],\r\n            bullets: [],\r\n            bouncers: [],\r\n            timer: 0,\r\n            barriers: [],\r\n            enemies: [],\r\n            message: \"\",\r\n        }\r\n        this.message = \"\"\r\n        this.timeouts = []\r\n        this.intervals = []\r\n        this.pause = false\r\n        \r\n        this.schedule = []\r\n\r\n\r\n        this.engine = Engine.create()\r\n        this.world = this.engine.world\r\n        this.world.timer = 0\r\n        this.runner = Runner.create()\r\n        this.world.gravity.y = 0\r\n\r\n        this.enemies = []\r\n        this.barriers = []\r\n        this.bullets = []\r\n        this.bouncers = []\r\n\r\n        this.playerBullets = []\r\n        this.playerMovementMap = []\r\n\r\n        this.state.walls = new Frame(this.world).walls\r\n\r\n\r\n        this.player = new Rectangle(0, 300, 20, 20, {}, this.world)\r\n        this.player.body.label = \"player\"\r\n        this.player.direction = { x: 0, y: 0 }\r\n        this.player.speed = 7\r\n        this.player.movement = false\r\n        this.player.blinkDistance = 100\r\n\r\n        this.state.player = this.player\r\n\r\n\r\n        Events.on(this.engine, 'beforeUpdate', event => {\r\n            this.world.timer = Number(this.world.timer) + 0.016666\r\n            this.world.timer = Math.round(this.world.timer * 100) / 100\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        collisionEvents(this.player, this.engine, this.playerBullets)\r\n        if (this.props.playMode === \"keyboard\") {\r\n            window.addEventListener(\"keydown\", this.handleKeyDown, true)\r\n            window.addEventListener(\"keyup\", this.handleKeyUp, true)\r\n        }\r\n        this.intervals.push(this.cycle)\r\n        Runner.run(this.runner, this.engine)\r\n        this.cycle()\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        Runner.stop(this.runner)\r\n        cancelAnimationFrame(this.loop)\r\n        this.intervals.forEach((key) => clearInterval(key))\r\n        this.timeouts.forEach((key) => clearTimeout(key))\r\n        if (this.props.playMode === \"keyboard\") {\r\n            window.removeEventListener(\"keydown\", this.handleKeyDown, true)\r\n            window.removeEventListener(\"keyup\", this.handleKeyUp, true)\r\n        }\r\n\r\n    }\r\n\r\n    cycle = () => {\r\n        this.updateCycle();\r\n        this.loop = requestAnimationFrame(() => this.cycle())\r\n    }\r\n\r\n    * scheduleStart() {\r\n        var index = 0\r\n        while (true) yield index++;\r\n    }\r\n\r\n    next = () => {\r\n        this.schedule[this.step.next().value]()\r\n    }\r\n\r\n    togglePause = () => {\r\n        if (this.pause) {\r\n            this.cycle()\r\n            Runner.run(this.runner, this.engine)\r\n            this.pause = false\r\n        }\r\n        else {\r\n            cancelAnimationFrame(this.loop)\r\n            Runner.stop(this.runner)\r\n            this.pause = true\r\n        }\r\n    }\r\n\r\n    updateCycle = () => {\r\n        if (this.player.dead === true) {\r\n            window.removeEventListener(\"keydown\", this.handleKeyDown, true)\r\n            window.removeEventListener(\"keyup\", this.handleKeyUp, false)\r\n            cancelAnimationFrame(this.loop)\r\n            Runner.stop(this.runner)\r\n            this.timeouts.forEach((key) => clearTimeout(key))\r\n        }\r\n\r\n        if (this.props.playMode === \"keyboard\" && (this.player.movement)) {\r\n            this.player.direction = { x: 0, y: 0 }\r\n            this.playerMovementMap.forEach(key => {\r\n                if (key === \"a\") this.player.direction.x -= this.player.speed\r\n                else if (key === \"d\") this.player.direction.x += this.player.speed\r\n                if (key === \"w\") this.player.direction.y -= this.player.speed\r\n                else if (key === \"s\") this.player.direction.y += this.player.speed\r\n\r\n                if (key === 'k') this.blink(this.player.direction.x, this.player.direction.y)\r\n                if (key === 'l') this.shoot()\r\n            })\r\n\r\n        }\r\n        Body.setVelocity(this.player.body, this.player.direction)\r\n\r\n\r\n        this.setState((prevState) => {\r\n            for (let i = 0; i < this.barriers.length; i++) {\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger * 2) {\r\n                    this.barriers[i].className = \"barrier damaged\"\r\n                }\r\n\r\n                if (this.barriers[i].body.hp < this.barriers[i].danger) {\r\n                    this.barriers[i].className = \"barrier danger\"\r\n                }\r\n\r\n                if (this.barriers[i].body.hp <= 0) {\r\n                    this.barriers[i].remove()\r\n                    this.barriers.splice(i, 1)\r\n                    i--\r\n                }\r\n            }\r\n            for (let i = 0; i < this.enemies.length; i++) {\r\n                if (this.enemies[i].body.hp <= 0) {\r\n                    this.enemies[i].remove()\r\n                    this.enemies.splice(i, 1)\r\n                    i--\r\n                    this.props.victory()\r\n                }\r\n\r\n            }\r\n\r\n            let player = Object.assign({}, prevState.player)\r\n            let playerBullets = Object.assign({}, prevState.playerBullets)\r\n            let bullets = Object.assign({}, prevState.bullets)\r\n            let bouncers = Object.assign({}, prevState.bouncers)\r\n            let barriers = Object.assign({}, prevState.barriers)\r\n            let enemies = Object.assign({}, prevState.enemies)\r\n            let timer = Number(this.world.timer)\r\n            let message = String(prevState.message)\r\n\r\n\r\n            player = this.player\r\n            playerBullets = this.playerBullets\r\n            bullets = this.bullets\r\n            bouncers = this.bouncers\r\n            enemies = this.enemies\r\n            barriers = this.barriers\r\n            message = this.message\r\n\r\n            return { player, playerBullets, bullets, bouncers, enemies, barriers, timer, message }\r\n        })\r\n    }\r\n\r\n    handleTouch = (angle) => {\r\n        if (this.player.movement) {\r\n            if (angle === -1) this.player.direction = { x: 0, y: 0 }\r\n            else if (angle > 22.50 && angle < 67.5) this.player.direction = { x: this.player.speed, y: -this.player.speed }\r\n            else if (angle > 67.5 && angle < 112.5) this.player.direction = { x: 0, y: -this.player.speed }\r\n            else if (angle > 112.5 && angle < 157.5) this.player.direction = { x: -this.player.speed, y: -this.player.speed }\r\n            else if (angle > 157.5 && angle < 202.5) this.player.direction = { x: -this.player.speed, y: 0 }\r\n            else if (angle > 202.5 && angle < 247.5) this.player.direction = { x: -this.player.speed, y: this.player.speed }\r\n            else if (angle > 247.5 && angle < 292.5) this.player.direction = { x: 0, y: this.player.speed }\r\n            else if (angle > 292.5 && angle < 337.5) this.player.direction = { x: this.player.speed, y: this.player.speed }\r\n            else this.player.direction = { x: this.player.speed, y: 0 }\r\n        }\r\n    }\r\n\r\n    timeout = (callback, delay) => {\r\n        let timeStamp = Number(this.world.timer)\r\n\r\n        let intervalName = setInterval(() => {\r\n            if (Math.abs(timeStamp - this.world.timer) * 1000 >= delay) {\r\n                callback()\r\n                clearInterval(intervalName)\r\n            }\r\n        }, 10)\r\n        this.intervals.push(intervalName)\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === \"p\") this.togglePause()\r\n        else if (this.playerMovementMap.indexOf(e.key) === -1) this.playerMovementMap.push(e.key)\r\n    }\r\n\r\n    handleKeyUp = (e) => {\r\n        this.playerMovementMap.splice(this.playerMovementMap.indexOf(e.key), 1)\r\n    }\r\n\r\n    blink = () => {\r\n        if (this.player.blinkOnCooldown !== true && (this.player.movement)) {\r\n            this.player.blinkOnCooldown = true\r\n            let blinkTimeout = setTimeout(() => this.player.blinkOnCooldown = false, 125)\r\n            this.timeouts.push(blinkTimeout)\r\n\r\n            let finalX, finalY;\r\n            if (this.player.direction.x === 0 && this.player.direction.y === 0) {\r\n                finalX = this.player.body.position.x\r\n                finalY = this.player.body.position.y - this.player.blinkDistance\r\n            }\r\n            else {\r\n                let theta = Math.atan2(this.player.body.position.y + this.player.direction.y - this.player.body.position.y, this.player.body.position.x + this.player.direction.x - this.player.body.position.x)\r\n                theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n                theta = theta * Math.PI / 180\r\n\r\n                finalX = this.player.body.position.x + this.player.blinkDistance * Math.cos(theta)\r\n                finalY = this.player.body.position.y + this.player.blinkDistance * Math.sin(theta)\r\n\r\n            }\r\n            if (Math.abs(finalX) > 950) finalX = this.player.direction.x / Math.abs(this.player.direction.x) * 950\r\n            if (Math.abs(finalY) > 512.5) finalY = this.player.direction.y / Math.abs(this.player.direction.y) * 512.5\r\n            Body.setPosition(this.player.body, { x: finalX, y: finalY })\r\n        }\r\n    }\r\n\r\n    shoot = () => {\r\n        if (this.player.bulletOnCooldown !== true && (this.player.movement)) {\r\n            this.player.bulletOnCooldown = true\r\n            let bullet = new PlayerBullet(this.player.body.position.x, this.player.body.position.y - 50, 5, this.world, this.playerBullets)\r\n            this.playerBullets.push(bullet)\r\n            let bulletCD = setTimeout(() => this.player.bulletOnCooldown = false, 100)\r\n            this.timeouts.push(bulletCD)\r\n        }\r\n    }\r\n\r\n    setMessage = (string, callback) => {\r\n        let array = String(string).split(\"\")\r\n        let message = \"\"\r\n        for (let i = 0; i < array.length; i++) {\r\n            this.timeout(() => {\r\n                message = message + array[i]\r\n                this.message = message\r\n            }, 100 * i)\r\n        }\r\n        this.timeout(() => {\r\n            if(callback) callback()\r\n        }, 100 * array.length + 500)\r\n    }\r\n\r\n    moveBody = (body, targetX, targetY, speed, callback) => {\r\n        if (this.checkIfInArea(body.position.x, targetX, speed) && this.checkIfInArea(body.position.y, targetY, speed)) {\r\n            Body.setVelocity(body, { x: 0, y: 0 })\r\n            Body.setPosition(body, { x: targetX, y: targetY })\r\n            if (callback) callback()\r\n        }\r\n        else {\r\n            let target = Target.getTargetVelocity(body.position.x, body.position.y, targetX, targetY, speed)\r\n            Body.setVelocity(body, target)\r\n            this.timeout(() => this.moveBody(body, targetX, targetY, speed, callback), 5)\r\n        }\r\n    }\r\n\r\n    checkIfInArea = (currentPosition, targetPosition, errorRange) => {\r\n        return Math.abs(targetPosition - currentPosition) < errorRange\r\n    }\r\n\r\n    theStart = () => {\r\n        window.removeEventListener(\"keydown\", this.theStart)\r\n        window.removeEventListener(\"touchstart\", this.theStart)\r\n        this.player.movement = true\r\n        this.setMessage(\" \", this.next)\r\n    }\r\n\r\n    theEnd = () => {\r\n        let final = new AimedBullet(this.enemy.body.position.x || 0, this.enemy.body.position.y || 0, 10, 5, 5, 0, 0, this.world, this.bullets)\r\n        final.body.label = \"explosion\"\r\n        final.coreColor = this.enemy.coreColor || \"red\"\r\n        let finalComposite = Composite.create()\r\n        Composite.add(finalComposite, final.body)\r\n\r\n        for (let i = 0; i < 150; i++) {\r\n            this.timeout(() => Composite.scale(finalComposite, 1.05, 1.05, { x: final.body.position.x, y: final.body.position.y }, false), 16 * i)\r\n        }\r\n\r\n    }\r\n\r\n    renderScene = () => {\r\n        if (this.player.dead !== true) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Background />\r\n                    {/* <text\r\n                        x=\"-950\"\r\n                        y=\"-512.5\"\r\n                        stroke=\"white\"\r\n                        fill=\"white\"\r\n                    >{String(this.state.timer)} */}\r\n                    {/* </text> */}\r\n                    <text\r\n                        x=\"0\"\r\n                        y=\"0\"\r\n                        stroke=\"white\"\r\n                        fill=\"white\"\r\n                        fontSize=\"100\"\r\n                        fontFamily=\"Arial Black\"\r\n                        textAnchor=\"middle\"\r\n                    >{String(this.state.message)}\r\n                    </text>\r\n                    <filter id=\"blur\">\r\n                        <feGaussianBlur stdDeviation=\"2\" />\r\n                    </filter>\r\n                    {this.state.bullets.map((key) => BulletsSVG[key.body.label](key))}\r\n                    {this.state.playerBullets.map((key) =>\r\n                        <circle\r\n                            key={this.state.playerBullets.indexOf(key)}\r\n                            cx={key.body.position.x}\r\n                            cy={key.body.position.y}\r\n                            r={key.radius}\r\n                            fill=\"white\">\r\n                        </circle>)}\r\n                    {this.state.enemies.map((key => EnemySVG[key.name](\r\n                        key.body.position.x,\r\n                        key.body.position.y,\r\n                        key.body.circleRadius,\r\n                        key.coreColor,\r\n                        key.className))\r\n                    )}\r\n                    {this.state.barriers.map((key) => <circle\r\n                        className={key.className}\r\n                        key={this.state.barriers.indexOf(key)}\r\n                        cx={key.body.position.x}\r\n                        cy={key.body.position.y}\r\n                        r={key.radius}\r\n                        fill=\"transparent\"\r\n                    />)}\r\n                    {PlayerSVG(\r\n                        this.state.player.body.position.x - this.state.player.width / 2,\r\n                        this.state.player.body.position.y - this.state.player.height / 2,\r\n                        this.state.player.width,\r\n                        this.state.player.height)}\r\n                    <circle\r\n                        id=\"player-radius\"\r\n                        cx={this.state.player.body.position.x}\r\n                        cy={this.state.player.body.position.y}\r\n                        r={this.state.player.blinkDistance}\r\n                        stroke=\"rgba(255,255,255,0.5\"\r\n                        fill=\"transparent\"\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Death\r\n                    x={this.state.player.body.position.x}\r\n                    y={this.state.player.body.position.y}\r\n                    width={this.state.player.width}\r\n                    height={this.state.player.height}\r\n                    restart={this.props.restart}\r\n\r\n                />)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Viewbox>\r\n                    {this.renderScene()}\r\n                </Viewbox>\r\n                {(this.props.playMode === \"touchscreen\") && (this.player.dead !== true) &&\r\n                    <Touchscreen\r\n                        svgHeight={this.props.svgHeight}\r\n                        svgWidth={this.props.svgWidth}\r\n                        innerHeight={this.props.innerHeight}\r\n                        innerWidth={this.props.innerWidth}\r\n                        offset={this.props.offset}\r\n                        move={(position) => this.handleTouch(position)}\r\n                        blink={() => this.blink()}\r\n                        shoot={() => this.shoot()} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scene\r\n","import { Enemy } from '../common/Enemy';\r\nimport SphereBarrier from '../common/SphereBarrier'\r\nimport Scene from '../common/Scene'\r\nimport { Rectangle } from '../common/Bodies'\r\nimport { Bullet, AimedBullet, BouncerBullet, HomingBullet } from \"../common/EnemyBullets\"\r\nimport \"../assets/css/scene1.css\"\r\n\r\nclass Scene1 extends Scene {\r\n    constructor() {\r\n        super()\r\n        this.enemy = new Enemy(0, -700, 50, 5, this.world)\r\n        this.enemy.name = \"sakura\"\r\n        this.enemy.coreColor = \"pink\"\r\n        this.enemy.className = \"sakura\"\r\n        this.enemies.push(this.enemy)\r\n\r\n        this.schedule.push(\r\n            () => this.intro(),\r\n            () => this.firstBarrage(),\r\n            () => this.secondBarrage(),\r\n            () => this.thirdBarrage(),\r\n            () => this.fourthBarrage(),\r\n            () => {\r\n                this.outerBarrier.className = \"\"\r\n                this.next()\r\n            },\r\n            () => this.timeout(() => this.theEnd(), 5000),\r\n        )\r\n        this.step = this.scheduleStart()\r\n        this.schedule[this.step.next().value]()\r\n    }\r\n\r\n    intro = () => {\r\n        this.moveBody(this.enemy.body, 0, -350, 2, () => {\r\n            this.timeout(() => {\r\n                this.outerBarrier = new SphereBarrier(0, -350, 70, 225, this.world)\r\n                this.barriers.push(this.outerBarrier)\r\n            }, 1000)\r\n            this.timeout(() => {\r\n                if (this.props.showIntro) {\r\n                    this.setMessage(\"ENEMY #1: SAKURA\", () => {\r\n                        window.addEventListener(\"touchstart\", this.theStart)\r\n                        window.addEventListener(\"keydown\", this.theStart)\r\n                    })\r\n                }\r\n                else {\r\n                    this.player.movement = true\r\n                    this.next()\r\n                }\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n\r\n    firstBarrage = () => {\r\n        this.wave(-1000, 0, 1)\r\n        this.timeout(() => this.wave(1000, 0, -1), 3000)\r\n        this.timeout(() => this.wave(-1000, -200, 1), 6000)\r\n        this.timeout(() => this.wave(1000, -200, -1), 9000)\r\n        this.timeout(() => this.next(), 14000)\r\n    }\r\n\r\n    wave = (originX, originY, waveDirection) => {\r\n        for (let i = 0; i < 100; i++) {\r\n            this.timeout(() => {\r\n                new Bullet(originX + i * 25 * waveDirection, originY + i * Math.sin(i * Math.PI / 4 * -1 + 0.5), 5, 15, 1000, this.world, this.bullets)\r\n            }, 25 * i)\r\n        }\r\n    }\r\n\r\n    secondBarrage = () => {\r\n        this.surround(450)\r\n        this.timeout(() => this.surround(350), 3000)\r\n        this.timeout(() => this.surround(300), 6000)\r\n        this.timeout(() => this.surround(250), 9000)\r\n        this.timeout(() => this.next(), 14000)\r\n    }\r\n\r\n    surround = (radius) => {\r\n        let targetTime = 1000\r\n        let r = radius\r\n        let step = 2 * Math.PI / 50\r\n        let counter = 0\r\n        let { x: originX, y: originY } = this.player.body.position\r\n\r\n        for (let [theta, asyncCounter] = [0, 0]; theta < 2 * Math.PI; theta += step, asyncCounter++) {\r\n            counter++\r\n            this.timeout(() => {\r\n                new AimedBullet(r * Math.cos(theta) + originX, -r * Math.sin(theta) + originY, originX, originY, 5, 20, targetTime - 10 * asyncCounter, this.world, this.bullets)\r\n            }, 10 * counter)\r\n        }\r\n    }\r\n\r\n\r\n    thirdBarrage = () => {\r\n        this.bouncerCluster(850, -350)\r\n        this.timeout(() => this.bouncerCluster(-850, -350), 4000)\r\n        this.timeout(() => this.bouncerCluster(850, -350), 8000)\r\n        this.timeout(() => this.bouncerCluster(-850, -350), 12000)\r\n        this.timeout(() => this.next(), 15000)\r\n    }\r\n\r\n    bouncerCluster = (originX, originY) => {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.timeout(() => {\r\n                let bouncer = new BouncerBullet(originX, originY, this.player.body.position.x, this.player.body.position.y, 50, 35, 100, this.world, this.bullets)\r\n                bouncer.className = \"bouncer\"\r\n            }, i * 500)\r\n        }\r\n    }\r\n\r\n    fourthBarrage = () => {\r\n        this.cascade(0, -250, 1500)\r\n        this.timeout(() => this.cascade(0, -250, 1500), 3000)\r\n        this.timeout(() => this.cascade(0, -250, 1500), 6000)\r\n        this.timeout(() => this.next(), 9000)\r\n    }\r\n\r\n    cascade = (originX, originY, delay) => {\r\n        let bullet = new HomingBullet(originX, originY, this.player.body.position, 40, 20, delay, this.world, this.bullets)\r\n        bullet.body.label = \"bigBullet\"\r\n        bullet.className = \"bouncer\"\r\n        for (let i = 1; i <= 5; i++) {\r\n            this.timeout(() => {\r\n                let bullet = new HomingBullet(originX + 150 * i, originY - 50 * i, this.player.body.position, 40, 20, delay - 25 * i, this.world, this.bullets)\r\n                bullet.body.label = \"bigBullet\"\r\n                bullet.className = \"bouncer\"\r\n            }, 25 * i)\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            this.timeout(() => {\r\n                let bullet = new HomingBullet(originX - 150 * i, originY - 50 * i, this.player.body.position, 40, 20, delay - 25 * i, this.world, this.bullets)\r\n                bullet.body.label = \"bigBullet\"\r\n                bullet.className = \"bouncer\"\r\n            }, 25 * i)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Scene1\r\n","import Scene from '../common/Scene'\r\nimport { Enemy, Satellite, } from '../common/Enemy'\r\nimport { World, Composite, Bodies, Body, Constraint } from 'matter-js'\r\nimport Target from \"../common/TargetingSystem\"\r\nimport SphereBarrier from '../common/SphereBarrier'\r\nimport '../assets/css/scene2.css'\r\nimport { Laser, AimLaser, AimedBullet } from '../common/EnemyBullets'\r\n\r\nclass Scene2 extends Scene {\r\n    constructor() {\r\n        super()\r\n        this.enemy = new Enemy(0, -350, 50, 225, this.world)\r\n        this.enemy.name = \"blood\"\r\n        this.enemy.coreColor = \"red\"\r\n        this.enemy.className = \"appear\"\r\n\r\n        this.phobos = new Satellite(0, -325, 5, this.world)\r\n        this.phobos.name = \"satellite\"\r\n        this.phobos.coreColor = \"red\"\r\n        this.phobos.className = \"appear\"\r\n\r\n\r\n        this.deimos = new Satellite(0, -375, 5, this.world)\r\n        this.deimos.name = \"satellite\"\r\n        this.deimos.coreColor = \"red\"\r\n        this.deimos.className = \"appear\"\r\n\r\n        this.blood = Composite.create()\r\n        Composite.add(this.blood, this.enemy.body)\r\n        Composite.add(this.blood, this.phobos.body)\r\n        Composite.add(this.blood, this.deimos.body)\r\n\r\n        World.add(this.world, [this.enemy.body, this.phobos.body, this.deimos.body])\r\n        this.enemies.push(this.enemy, this.phobos, this.deimos)\r\n\r\n        this.enableOrbit = true\r\n        this.orbitMaxSpeed = 15 * Math.PI / 180\r\n        this.orbitSpeedPower = 5\r\n        this.orbit = setInterval(() => { if (this.enableOrbit === true) Composite.rotate(this.blood, this.orbitMaxSpeed * this.orbitSpeedPower / 100, { x: this.enemy.body.position.x, y: this.enemy.body.position.y }) }, 8)\r\n\r\n        this.bloodyCheck = setInterval(() => {\r\n            if (this.enemy.body.hp < this.enemy.body.maxHp / 2) {\r\n                this.enemy.className = \"blood bloodied\"\r\n            }\r\n            clearInterval(this.bloodyCheck)\r\n        }, 20)\r\n        \r\n        this.intervals.push(this.orbit, this.bloodyCheck)\r\n        this.schedule.push(\r\n            () => this.intro(),\r\n            () => this.timeout(this.next, 500),\r\n\r\n            () => this.deploy(-800, -200, 10, () => this.timeout(this.next, 500)),\r\n            () => this.rotateBlood(270 * Math.PI / 180, 4, () => this.timeout(this.next, 500)),\r\n            () => this.aimAndRotate(() => this.timeout(this.next, 1000)),\r\n\r\n            () => this.deploy(800, -200, 20, () => this.timeout(this.next, 500)),\r\n            () => this.rotateBlood(180 * Math.PI / 180, 4, () => this.timeout(this.next, 500)),\r\n            () => this.aimAndRotate(() => this.timeout(this.next, 1000)),\r\n\r\n            () => this.deploy(0, -350, 10, () => this.timeout(this.next, 500)),\r\n\r\n            () => this.rotateBlood(270 * Math.PI / 180, 4, () => this.timeout(this.next, 0)),\r\n            () => this.waveBarrage(),\r\n            () => this.timeout(() => this.rotateBlood(180 * Math.PI / 180, 4, this.next), 0),\r\n            () => this.waveBarrage(),\r\n            () => this.rotateBlood(450 * Math.PI / 180, 2, () => this.timeout(this.next, 500)),\r\n\r\n            () => this.verticalClean(925, 500),\r\n            () => this.fireBarrage(),\r\n            () => this.verticalSweep(925),\r\n\r\n            () => this.horizontalClean(925, 500),\r\n            () => this.fireBarrage(),\r\n            () => this.horizontalSweep(500),\r\n\r\n            () => this.verticalClean(-925, 500),\r\n            () => this.fireBarrage(),\r\n            () => this.verticalSweep(-925),\r\n\r\n            () => this.horizontalClean(925, -500),\r\n            () => this.fireBarrage(),\r\n            () => this.horizontalSweep(-500),\r\n            () => this.timeout(this.next, 1000),\r\n\r\n            () => {\r\n                this.moveBody(this.enemy.body, 0, 0, 10, this.next)\r\n                this.moveBody(this.phobos.body, 0, -75, 10, this.next)\r\n                this.moveBody(this.deimos.body, 0, 75, 10, () => this.timeout(this.next, 1000))\r\n            },\r\n\r\n            () => null,\r\n            () => null,\r\n            () => this.rotateBlood(360 * Math.PI / 180, 2, this.next),\r\n            () => this.finale(),\r\n            () => this.finale(),\r\n            () => this.timeout(() => this.theEnd(), 5000)\r\n        )\r\n        this.step = this.scheduleStart()\r\n        this.schedule[this.step.next().value]()\r\n    }\r\n\r\n\r\n\r\n    fireBarrage = () => {\r\n        this.bloodFire()\r\n        this.timeout(() => this.bloodFire(), 500)\r\n        this.timeout(() => this.bloodFire(), 1000)\r\n        this.timeout(() => this.bloodFire(), 1500)\r\n        this.timeout(() => this.bloodFire(), 2000)\r\n    }\r\n\r\n    bloodFire = () => {\r\n        for (let i = 0; i < 3; i++) {\r\n            this.timeout(() => new AimedBullet(this.enemy.body.position.x, this.enemy.body.position.y, this.player.body.position.x, this.player.body.position.y, 5, 20, 0, this.world, this.bullets), 50 * i)\r\n        }\r\n    }\r\n\r\n    intro = () => {\r\n        this.timeout(() => {\r\n            this.enableOrbit = false\r\n            let bodyArray = [this.enemy, this.phobos, this.deimos]\r\n            bodyArray.forEach(key => key.className = \"blood\")\r\n            this.moveBody(this.phobos.body, 0, -425, 0.4,\r\n                () => this.moveBody(this.deimos.body, 0, -275, 0.4,\r\n                    () => this.timeout(() => this.rotateBlood(270 * Math.PI / 180, 4, () => {\r\n                        if (this.props.showIntro) {\r\n                            this.setMessage(\"ENEMY #2: BLOOD\", () => {\r\n                                window.addEventListener(\"touchstart\", this.theStart)\r\n                                window.addEventListener(\"keydown\", this.theStart)\r\n                            })\r\n                        }\r\n                        else {\r\n                            this.player.movement = true\r\n                            this.next()\r\n                        }\r\n                    }), 500)))\r\n\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    horizontalClean = (x, y) => {\r\n        this.moveBody(this.phobos.body, x, y, 15, this.next)\r\n        this.moveBody(this.deimos.body, -x, y, 15, this.next)\r\n    }\r\n\r\n    verticalClean = (x, y) => {\r\n        this.moveBody(this.phobos.body, x, y, 15, this.next)\r\n        this.moveBody(this.deimos.body, x, -y, 15, this.next)\r\n    }\r\n\r\n    horizontalSweep = (pStartY) => {\r\n        let aim = new AimLaser(this.deimos.body.position.x, this.deimos.body.position.y, Math.abs(this.phobos.body.position.x - this.deimos.body.position.x), 5, 0, this.world, this.bullets)\r\n        this.timeout(() => {\r\n            aim.remove()\r\n            let laser = new Laser(this.deimos.body.position.x, this.deimos.body.position.y, Math.abs(this.phobos.body.position.x - this.deimos.body.position.x), 5, 0, this.world, this.bullets)\r\n            let sweep = Composite.create()\r\n            Composite.add(sweep, laser.body)\r\n            Composite.add(sweep, this.deimos.body)\r\n            Composite.add(sweep, this.phobos.body)\r\n            for (let i = 0; i < 2 * Math.abs(pStartY) / 8; i++) {\r\n                pStartY > 0 ? this.timeout(() => Composite.translate(sweep, { x: 0, y: -8 }), i * 8) : this.timeout(() => Composite.translate(sweep, { x: 0, y: 8 }), i * 8)\r\n            }\r\n            this.timeout(() => {\r\n                laser.remove()\r\n                this.next()\r\n            }, 2 * Math.abs(pStartY) / 8 * 8)\r\n        }, 1000)\r\n    }\r\n\r\n    verticalSweep = (pStartX) => {\r\n        let aim = new AimLaser(this.deimos.body.position.x, this.deimos.body.position.y, 1000, 5, 90 * Math.PI / 180, this.world, this.bullets)\r\n        this.timeout(() => {\r\n            aim.remove()\r\n            let laser = new Laser(this.deimos.body.position.x, this.deimos.body.position.y, 1000, 5, 90 * Math.PI / 180, this.world, this.bullets)\r\n            let sweep = Composite.create()\r\n            Composite.add(sweep, laser.body)\r\n            Composite.add(sweep, this.deimos.body)\r\n            Composite.add(sweep, this.phobos.body)\r\n            for (let i = 0; i < 2 * Math.abs(pStartX) / 8; i++) {\r\n                pStartX > 0 ? this.timeout(() => Composite.translate(sweep, { x: -8, y: 0 }), i * 8) : this.timeout(() => Composite.translate(sweep, { x: 8, y: 0 }), i * 8)\r\n            }\r\n            this.timeout(() => {\r\n                laser.remove()\r\n                this.next()\r\n            }, 2 * Math.abs(pStartX) / 8 * 8)\r\n        }, 1000)\r\n    }\r\n\r\n    finale = () => {\r\n        this.enableOrbit = true\r\n        this.setOrbitSpeed(100,\r\n            () => {\r\n                this.timeout(() => this.explosion(100), 1000)\r\n                this.timeout(() => this.explosion(100), 3000)\r\n                this.timeout(() => this.explosion(100), 5000)\r\n                this.timeout(() => this.next(), 7000)\r\n            })\r\n    }\r\n\r\n    explosion = (r) => {\r\n        let radius = r\r\n        let targetTime = 1500\r\n        let step = 2 * Math.PI / 40\r\n        for (let theta = 0; theta < 2 * Math.PI; theta += step) {\r\n            this.timeout(() => {\r\n                new AimedBullet(this.enemy.body.position.x + radius * Math.cos(theta),\r\n                    this.enemy.body.position.y + radius * Math.sin(theta),\r\n                    this.enemy.body.position.x + radius * 2 * Math.cos(theta),\r\n                    this.enemy.body.position.y + radius * 2 * Math.sin(theta),\r\n                    5, 20, targetTime, this.world, this.bullets)\r\n            }, theta / (2 * Math.PI / 40) * 16)\r\n        }\r\n    }\r\n\r\n    waveBarrage = () => {\r\n        this.wave(150)\r\n        this.timeout(() => this.wave(125), 1000)\r\n        this.timeout(() => this.wave(100), 2000)\r\n        this.timeout(() => this.next(), 2000)\r\n    }\r\n\r\n    wave = (r) => {\r\n        let radius = r\r\n        let targetTime = 1000\r\n        let counter = 0\r\n        let random = Math.random() * 30\r\n        let step = 2 * Math.PI / (random + 20)\r\n        for (let [i, asyncCounter] = [30 * Math.PI / 180, 0]; i <= 150 * Math.PI / 180; i += step, asyncCounter++) {\r\n            counter++\r\n            let bulletTimeout = setTimeout(() => {\r\n                new AimedBullet(\r\n                    radius * Math.cos(i) + this.enemy.body.position.x,\r\n                    radius * Math.sin(i) + this.enemy.body.position.y,\r\n                    500 * Math.cos(i) + this.enemy.body.position.x,\r\n                    500 * Math.sin(i) + this.enemy.body.position.y,\r\n                    5, 30, targetTime - asyncCounter * 15, this.world, this.bullets)\r\n            },\r\n                counter * 15)\r\n            this.timeouts.push(bulletTimeout)\r\n        }\r\n    }\r\n\r\n    deploy = (x, y, speed, callback) => {\r\n        this.enableOrbit = false\r\n        this.moveBody(this.phobos.body, x + this.phobos.body.position.x - this.enemy.body.position.x, y + this.phobos.body.position.y - this.enemy.body.position.y, speed)\r\n        this.moveBody(this.deimos.body, x + this.deimos.body.position.x - this.enemy.body.position.x, y + this.deimos.body.position.y - this.enemy.body.position.y, speed)\r\n        this.moveBody(this.enemy.body, x, y, speed, callback)\r\n    }\r\n\r\n    aimAndRotate = (callback) => {\r\n        let thetaPhobos = Target.getTheta(this.phobos.body.position.x, this.phobos.body.position.y, this.player.body.position.x, this.player.body.position.y)\r\n        let thetaDeimos = Target.getTheta(this.deimos.body.position.x, this.deimos.body.position.y, this.player.body.position.x, this.player.body.position.y)\r\n        let aimPhobos = new AimLaser(this.phobos.body.position.x, this.phobos.body.position.y, 2000, 5, thetaPhobos, this.world, this.bullets)\r\n        let aimDeimos = new AimLaser(this.deimos.body.position.x, this.deimos.body.position.y, 2000, 5, thetaDeimos, this.world, this.bullets)\r\n\r\n        this.timeout(() => {\r\n            aimPhobos.remove()\r\n            aimDeimos.remove()\r\n            let fearLaser = new Laser(this.phobos.body.position.x, this.phobos.body.position.y, 2000, 5, thetaPhobos, this.world, this.bullets)\r\n            let terrorLaser = new Laser(this.deimos.body.position.x, this.deimos.body.position.y, 2000, 5, thetaDeimos, this.world, this.bullets)\r\n            for (let i = 0; i < 2 * Math.PI / (Math.PI / 180); i++) {\r\n                this.timeout(() => {\r\n                    fearLaser.rotate(Math.PI / 180)\r\n                    terrorLaser.rotate(Math.PI / -180)\r\n                }, 12 * i)\r\n            }\r\n            this.timeout(() => {\r\n                fearLaser.remove()\r\n                terrorLaser.remove()\r\n                callback()\r\n            }, 12 * (2 * Math.PI / (Math.PI / 180)) + 500)\r\n        }, 1000)\r\n    }\r\n\r\n\r\n\r\n\r\n    rotateBlood = (totalAngle, speed, callback) => {\r\n        for (let i = 0; i < totalAngle / (2 * Math.PI / 180); i++) {\r\n            this.timeout(() => Composite.rotate(this.blood, 2 * Math.PI / 180, { x: this.enemy.body.position.x, y: this.enemy.body.position.y }), i * (16 / speed))\r\n        }\r\n        if (callback) this.timeout(() => callback(), totalAngle / (2 * Math.PI / 180) * (16 / speed) + 500)\r\n    }\r\n\r\n    setOrbitSpeed = (targetSpeed, callback) => {\r\n        let totalTime = 0\r\n        for (let i = 0; i < Math.abs(this.orbitSpeedPower - targetSpeed); i++) {\r\n            totalTime++\r\n            let orbit = setTimeout(() => this.orbitSpeedPower < targetSpeed ? this.orbitSpeedPower += 1 : this.orbitSpeedPower -= 1, 25 * i)\r\n            this.timeouts.push(orbit)\r\n        }\r\n        if (callback) {\r\n            this.timeout(callback, totalTime * 25)\r\n        }\r\n        return totalTime * 25\r\n    }\r\n}\r\n\r\nexport default Scene2\r\n\r\n\r\n","import React from 'react'\r\nimport PlayerSVG from '../assets/svg/PlayerSVG'\r\nimport Viewbox from '../assets/svg/Viewbox'\r\nlet Victory = () => {\r\n    return (\r\n        <Viewbox>\r\n            <text fill=\"white\" fontSize=\"32\" alignmentBaseline=\"central\" textAnchor=\"middle\">Victory!!!</text>\r\n            {PlayerSVG(-15, -115, 30, 30)}\r\n            <rect fill=\"white\" height=\"100%\" width=\"100%\" x=\"-50%\" y=\"-50%\" className=\"disappear\" pointerEvents=\"none\" ></rect>\r\n        </Viewbox>\r\n    )\r\n}\r\n\r\nexport default Victory\r\n","import React from 'react';\r\nimport Controller from './scenes/Controller'\r\nimport Start from \"./scenes/Start\"\r\nimport Select from './scenes/Select'\r\nimport Scene1 from \"./scenes/Scene1\"\r\nimport Scene2 from './scenes/Scene2'\r\nimport Victory from \"./scenes/Victory\"\r\nimport \"./assets/css/app.css\"\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let svgHeight = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth * 9 / 16 : window.innerHeight\r\n    let svgWidth = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth : window.innerHeight * 16 / 9\r\n    this.state = {\r\n      currentScene: 'start',\r\n      enemySelected: false,\r\n      playMode: \"keyboard\",\r\n      svgHeight: svgHeight,\r\n      svgWidth: svgWidth,\r\n      innerWidth: window.innerWidth,\r\n      innerHeight: window.innerHeight,\r\n      offset: (window.innerWidth - svgWidth) / 2,\r\n      showIntro: true,\r\n      sakura: true,\r\n      blood: true,\r\n      nul: false,\r\n      vida: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"resize\", this.resize)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener(\"resize\", this.resize)\r\n  }\r\n\r\n\r\n  resize = () => {\r\n    let svgHeight = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth * 9 / 16 : window.innerHeight\r\n    let svgWidth = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth : window.innerHeight * 16 / 9\r\n    this.setState({\r\n      svgHeight: svgHeight,\r\n      svgWidth: svgWidth,\r\n      innerWidth: window.innerWidth,\r\n      innerHeight: window.innerHeight,\r\n      offset: (window.innerWidth - svgWidth) / 2\r\n    })\r\n  }\r\n\r\n  selectEnemy = (string) => {\r\n    this.setState({\r\n      enemySelected: string\r\n    })\r\n    this.game()\r\n  }\r\n  game = () => {\r\n    this.setState((prevState) => ({\r\n      currentScene: prevState.enemySelected\r\n    }))\r\n  }\r\n  controller = () => {\r\n    this.setState({\r\n      currentScene: \"controller\"\r\n    })\r\n  }\r\n\r\n  keyboard = () => {\r\n    this.setState({\r\n      playMode: \"keyboard\",\r\n      currentScene: \"start\"\r\n    })\r\n  }\r\n\r\n  touchscreen = () => {\r\n    this.setState({\r\n      playMode: \"touchscreen\",\r\n      currentScene: 'start'\r\n    })\r\n  }\r\n\r\n  start = () => {\r\n    this.setState({\r\n      currentScene: \"select\"\r\n    })\r\n\r\n  }\r\n  restart = () => {\r\n    this.setState({\r\n      showIntro: false,\r\n      currentScene: \"select\"\r\n    })\r\n  }\r\n\r\n  victory = () => {\r\n    this.setState({\r\n      currentScene: 'victory'\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"svg-container\" >\r\n        {this.state.currentScene === \"start\" &&\r\n          <Start\r\n            start={this.start}\r\n            controller={this.controller}\r\n          />}\r\n        {this.state.currentScene === \"controller\" &&\r\n          <Controller\r\n            keyboard={this.keyboard}\r\n            touchscreen={this.touchscreen} />}\r\n        {this.state.currentScene === \"select\" &&\r\n          <Select\r\n            blood={this.state.blood}\r\n            sakura={this.state.sakura}\r\n            vida={this.state.vida}\r\n            nul={this.state.nul}\r\n            enemySelected={this.state.enemySelected}\r\n            select={this.selectEnemy}\r\n          >\r\n          </Select>}\r\n        {this.state.currentScene === \"scene1\" &&\r\n          <Scene1\r\n            svgHeight={this.state.svgHeight}\r\n            svgWidth={this.state.svgWidth}\r\n            innerHeight={this.state.innerHeight}\r\n            innerWidth={this.state.innerWidth}\r\n            offset={this.state.offset}\r\n            playMode={this.state.playMode}\r\n            victory={this.victory}\r\n            restart={this.restart}\r\n            showIntro={this.state.showIntro} />}\r\n        {this.state.currentScene === \"scene2\" &&\r\n          <Scene2\r\n            svgHeight={this.state.svgHeight}\r\n            svgWidth={this.state.svgWidth}\r\n            innerHeight={this.state.innerHeight}\r\n            innerWidth={this.state.innerWidth}\r\n            offset={this.state.offset}\r\n            playMode={this.state.playMode}\r\n            victory={this.victory}\r\n            restart={this.restart}\r\n            showIntro={this.state.showIntro} />}\r\n        {this.state.currentScene === \"victory\" && <Victory />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}